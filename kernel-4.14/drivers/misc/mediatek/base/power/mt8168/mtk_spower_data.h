/*
 * Copyright (C) 2018 MediaTek Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef MT_SPOWER_CPU_H
#define MT_SPOWER_CPU_H

#define VSIZE 14
#define TSIZE 22

//==========================================================

#define CA53_TABLE_0 { \
	600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, \
		1250, \
	20, 10345, 11711, 13169, 14725, 16371, 18153, 20117, \
		22191, 24368, 26677, 29087, 31649, 34360, 37236, \
	25, 12225, 13836, 15557, 17400, 19374, 21474, 23719, \
		26111, 28644, 31465, 34311, 37254, 40400, 43783, \
	30, 14390, 16291, 18322, 20509, 22840, 25329, 27993, \
		30845, 33890, 37087, 40447, 44038, 48053, 52228, \
	35, 16856, 19087, 21495, 24066, 26820, 29757, 32913, \
		36282, 39866, 43656, 47633, 51843, 56368, 61153, \
	40, 19713, 22345, 25171, 28196, 31461, 34956, 38687, \
		42658, 46826, 51204, 55896, 60943, 66332, 71819, \
	45, 22992, 26089, 29395, 32968, 36836, 40957, 45351, \
		50019, 54874, 60001, 65596, 71475, 77661, 84085, \
	50, 26772, 30375, 34244, 38460, 42982, 47813, 52968, \
		58466, 64278, 70335, 76638, 83424, 90505, 98730, \
	55, 31062, 35246, 39807, 44712, 49971, 55598, 61630, \
		68091, 74845, 81889, 89251, 96945, 105443, 114403, \
	60, 35947, 40846, 46184, 51915, 58010, 64493, 71433, \
		78743, 86488, 94684, 103344, 112507, 122267, 132722, \
	65, 41025, 46738, 52888, 59470, 66334, 73680, 81595, \
		90096, 99216, 108915, 119527, 130344, 141917, 154040, \
	70, 47305, 53958, 61035, 68547, 76578, 85153, 94330, \
		104102, 114472, 125484, 137166, 149178, 162222, 176341, \
	75, 54320, 61777, 69700, 78342, 87532, 97352, 107872, \
		119292, 131221, 143898, 157420, 171706, 186871, 203086, \
	80, 62074, 70546, 79771, 89639, 99957, 111193, 123185, \
		136387, 150460, 165053, 180583, 197085, 214635, 233306, \
	85, 71217, 81004, 91542, 102861, 115009, 128023, 141965, \
		156797, 172518, 188826, 205199, 223437, 243571, 265095, \
	90, 80574, 91700, 103511, 116189, 129788, 144355, 159922, \
		176567, 194483, 213599, 233997, 255715, 278842, 303474, \
	95, 90759, 103095, 116959, 132069, 147760, 164507, 182408, \
		201567, 222024, 243840, 267065, 291789, 318160, 346203, \
	100, 103349, 117660, 132930, 149574, 167272, 185969, 205629, \
		228252, 251404, 276165, 302616, 330753, 360677, 392338, \
	105, 115481, 131571, 148804, 167384, 187333, 208703, 231479, \
		255893, 282001, 309943, 341064, 373832, 407776, 443732, \
	110, 131631, 149858, 169248, 190446, 213080, 237322, 262915, \
		290290, 319616, 350953, 384273, 419857, 457861, 498494, \
	115, 147083, 167848, 189506, 213779, 239265, 266640, 295993, \
		327383, 360870, 396633, 434764, 474418, 516963, 562817, \
	120, 163658, 186799, 212135, 239102, 267444, 298113, 331188, \
		366611, 404496, 444915, 487915, 533575, 582282, 634122, \
	125, 183004, 208404, 236994, 267136, 298850, 333046, 369610, \
		408736, 451046, 496205, 544507, 595897, 650487, 708594, \
}

#define CA53_TABLE_1 { \
	600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, \
		1250, \
	20, 3004, 3366, 3751, 4160, 4590, 5041, 5505, \
		5988, 6477, 6967, 7463, 7920, 8318, 8596, \
	25, 3625, 4064, 4535, 5030, 5547, 6094, 6657, \
		7232, 7820, 8421, 9025, 9625, 10152, 10572, \
	30, 4352, 4884, 5453, 6037, 6659, 7315, 7990, \
		8688, 9410, 10141, 10893, 11628, 12307, 12908, \
	35, 5240, 5884, 6546, 7255, 8001, 8791, 9624, \
		10483, 11373, 12287, 13200, 14086, 14930, 15722, \
	40, 6260, 7011, 7802, 8647, 9525, 10467, 11456, \
		12493, 13572, 14664, 15781, 16881, 17940, 18918, \
	45, 7444, 8319, 9266, 10263, 11289, 12394, 13564, \
		14791, 16073, 17406, 18731, 20066, 21390, 22646, \
	50, 8802, 9842, 10965, 12131, 13357, 14662, 16043, \
		17498, 19017, 20589, 22181, 23784, 25376, 26917, \
	55, 10380, 11622, 12930, 14318, 15785, 17338, 18961, \
		20646, 22416, 24296, 26251, 28238, 30191, 32094, \
	60, 12178, 13638, 15143, 16736, 18468, 20292, 22167, \
		24163, 26275, 28503, 30845, 33237, 35601, 37929, \
	65, 14254, 15912, 17675, 19571, 21591, 23689, 25908, \
		28239, 30708, 33303, 36022, 38862, 41687, 44485, \
	70, 16610, 18536, 20599, 22798, 25094, 27533, 30081, \
		32779, 35661, 38686, 41843, 45139, 48516, 51834, \
	75, 19260, 21526, 23897, 26444, 29102, 31889, 34833, \
		37973, 41307, 44844, 48563, 52443, 56450, 60441, \
	80, 22205, 24835, 27577, 30470, 33529, 36785, 40246, \
		43875, 47709, 51792, 56073, 60539, 65136, 69829, \
	85, 25541, 28569, 31730, 35100, 38656, 42410, 46370, \
		50586, 55037, 59739, 64663, 69805, 75153, 80688, \
	90, 29259, 32814, 36466, 40333, 44433, 48750, 53340, \
		58182, 63283, 68661, 74294, 80216, 86456, 92854, \
	95, 33451, 37500, 41717, 46093, 50777, 55716, 60958, \
		66462, 72302, 78484, 85012, 91860, 98936, 106273, \
	100, 38075, 42672, 47507, 52480, 57802, 63411, 69387, \
		75688, 82398, 89469, 96837, 104577, 112638, 121206, \
	105, 43112, 48298, 53754, 59445, 65472, 71876, 78681, \
		85813, 93308, 101250, 109664, 118538, 127752, 137508, \
	110, 48756, 54488, 60677, 67157, 73977, 81204, 88825, \
		96903, 105384, 114364, 123865, 133833, 144284, 155169, \
	115, 54912, 61361, 68195, 75441, 83167, 91265, 99807, \
		108863, 118382, 128428, 139084, 150355, 162210, 174549, \
	120, 61534, 68766, 76349, 84406, 93039, 102100, 111666, \
		121708, 132293, 143510, 155507, 168132, 181328, 195245, \
	125, 68446, 76597, 85251, 94281, 103887, 113827, 124416, \
		135621, 147450, 159960, 173017, 186856, 201584, 217092, \
}

#define CA53_TABLE_2 { \
	600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, \
		1250, \
	20, 417, 462, 507, 556, 607, 663, 721, \
		778, 831, 871, 891, 880, 819, 675, \
	25, 521, 573, 630, 690, 758, 828, 902, \
		971, 1043, 1110, 1151, 1168, 1098, 960, \
	30, 654, 723, 795, 867, 943, 1034, 1127, \
		1222, 1321, 1407, 1473, 1506, 1467, 1349, \
	35, 809, 895, 979, 1074, 1178, 1285, 1398, \
		1513, 1627, 1740, 1845, 1894, 1893, 1812, \
	40, 999, 1099, 1201, 1320, 1446, 1582, 1726, \
		1873, 2020, 2169, 2306, 2395, 2426, 2378, \
	45, 1221, 1341, 1470, 1608, 1755, 1919, 2097, \
		2279, 2469, 2663, 2828, 2956, 3050, 3040, \
	50, 1486, 1609, 1764, 1940, 2124, 2325, 2535, \
		2758, 2995, 3227, 3460, 3656, 3793, 3852, \
	55, 1785, 1942, 2131, 2342, 2558, 2792, 3048, \
		3317, 3601, 3893, 4182, 4440, 4643, 4806, \
	60, 2147, 2344, 2572, 2813, 3066, 3335, 3632, \
		3953, 4295, 4656, 5029, 5349, 5660, 5860, \
	65, 2562, 2784, 3043, 3315, 3604, 3925, 4299, \
		4658, 5065, 5471, 5933, 6419, 6839, 7143, \
	70, 3020, 3303, 3594, 3910, 4253, 4622, 5017, \
		5444, 5919, 6402, 6880, 7384, 7866, 8329, \
	75, 3625, 3945, 4297, 4660, 5067, 5495, 5957, \
		6465, 7010, 7605, 8204, 8808, 9399, 9986, \
	80, 4351, 4709, 5096, 5513, 5977, 6476, 7004, \
		7590, 8221, 8908, 9649, 10397, 11123, 11855, \
	85, 5143, 5568, 5969, 6472, 7005, 7565, 8201, \
		8897, 9625, 10401, 11225, 12093, 13020, 14071, \
	90, 6006, 6500, 7009, 7566, 8206, 8854, 9572, \
		10361, 11198, 12105, 13076, 14119, 15388, 16557, \
	95, 7038, 7558, 8180, 8832, 9541, 10293, 11099, \
		11972, 12922, 13982, 15209, 16532, 17835, 19141, \
	100, 8330, 8904, 9638, 10292, 11064, 11927, 12840, \
		13917, 15075, 16286, 17650, 19116, 20628, 22326, \
	105, 9572, 10292, 11079, 11876, 12759, 13797, 14901, \
		16133, 17456, 18793, 20228, 21921, 23793, 25814, \
	110, 11140, 11875, 12783, 13660, 14713, 15878, 17031, \
		18303, 19697, 21258, 22990, 24917, 27057, 29482, \
	115, 12726, 13661, 14615, 15691, 16847, 18042, 19368, \
		20870, 22491, 24267, 26285, 28452, 30821, 33412, \
	120, 14665, 15643, 16643, 17768, 19058, 20461, 21982, \
		23588, 25378, 27357, 29618, 32022, 34628, 37513, \
	125, 16803, 17965, 19061, 20294, 21606, 23092, 24703, \
		26489, 28571, 30796, 33220, 35767, 38538, 41652, \
}

int ca53_data[][VSIZE * TSIZE + VSIZE + TSIZE] = {
	CA53_TABLE_0, CA53_TABLE_1, CA53_TABLE_2,
};

struct spower_raw_t {
	int vsize;
	int tsize;
	int table_size;
	int *table[];
};

struct spower_raw_t ca53_spower_raw = {
	.vsize = VSIZE,
	.tsize = TSIZE,
	.table_size = 3,
	.table = {(int *)&ca53_data[0], (int *)&ca53_data[1],
		  (int *)&ca53_data[2]},
};

struct vrow_t {
	int mV[VSIZE];
};

struct trow_t {
	int deg;
	int mA[VSIZE];
};


struct sptbl_t {
	int vsize;
	int tsize;
	/* array[VSIZE + TSIZE + (VSIZE*TSIZE)]; */
	int *data;
	/* pointer to voltage row of data */
	struct vrow_t *vrow;
	/* pointer to temperature row of data */
	struct trow_t *trow;
};

#define trow(tab, ti)		((tab)->trow[ti])
#define mA(tab, vi, ti)	((tab)->trow[ti].mA[vi])
#define mV(tab, vi)		((tab)->vrow[0].mV[vi])
#define deg(tab, ti)		((tab)->trow[ti].deg)
#define vsize(tab)		((tab)->vsize)
#define tsize(tab)		((tab)->tsize)
#define tab_validate(tab)	((tab)->data != NULL)

static inline void spower_tab_construct
	(struct sptbl_t (*tab)[], struct spower_raw_t *raw)
{
	int i;
	struct sptbl_t *ptab = (struct sptbl_t *)tab;

	for (i = 0; i < raw->table_size; i++) {
		ptab->vsize = raw->vsize;
		ptab->tsize = raw->tsize;
		ptab->data = raw->table[i];
		ptab->vrow = (struct vrow_t *)ptab->data;
		ptab->trow = (struct trow_t *)(ptab->data + ptab->vsize);
		ptab++;
	}
}

#define MAX_TABLE_SIZE 5

/**
 * @argument
 * dev: the enum of MT_SPOWER_xxx
 * voltage: the operating voltage
 * degree: the Tj
 * @return
 *  -1, means sptab is not yet ready.
 *  other value: the mW of leakage value.
 **/
extern int mt_spower_get_leakage(int dev, int voltage, int degree);

#endif


