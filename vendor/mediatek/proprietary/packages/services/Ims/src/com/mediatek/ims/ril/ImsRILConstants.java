/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2017. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek Software")
 * have been modified by MediaTek Inc. All revisions are subject to any receiver's
 * applicable license agreements with MediaTek Inc.
 */

package com.mediatek.ims.ril;

/**
 * Contains IMS constants.
 *
 */
public interface ImsRILConstants {
    /* SS part : [MTK04070][111118][ALPS00093395] */
    /* Add for Line2 */
    public static final int SERVICE_CLASS_LINE2 = (1 << 8);

    /** SERVICE_CLASS_VIDEO Service Supplementary Information
     * codes for Video Telephony support.
     */
    public static final int SERVICE_CLASS_VIDEO = (1 << 9);
    public static final int SERVICE_CLASS_MTK_MAX = (1 << 9); // Max SERVICE_CLASS value for MTK
    public static final int CF_REASON_NOT_REGISTERED = 6;

    public static final int CONTROL_CALL_HOLD = 0;
    public static final int CONTROL_CALL_RESUME = 1;
    public static final int CONTROL_MEMBER_REMOVE = 0;
    public static final int CONTROL_MEMBER_ADD = 1;
   /*********************************************************************************/
    /*  Vendor request                                                               */
    /*********************************************************************************/
    int RIL_REQUEST_VENDOR_BASE = 2000;

    /// M: CC: Proprietary incoming call handling
    int RIL_REQUEST_SET_CALL_INDICATION = (RIL_REQUEST_VENDOR_BASE + 16);

    /// M: CC: HangupAll for FTA 31.4.4.2
    /**
     * "RIL_REQUEST_HANGUP_ALL"
     * Hang up all (like ATH, but use AT+CHLD=6 to prevent channel limitation)
     * For ATH, the channel usd to setup call and release must be the same.
     * AT+CHLD=6 has no such limitation
     */
    int RIL_REQUEST_HANGUP_ALL = RIL_REQUEST_VENDOR_BASE + 19;

    // Set ECC list to MD
    int RIL_REQUEST_SET_ECC_LIST = RIL_REQUEST_VENDOR_BASE + 30;

    int RIL_REQUEST_FORCE_RELEASE_CALL = (RIL_REQUEST_VENDOR_BASE + 34);

    /// M: CC: Vzw/CTVolte ECC @{
    int RIL_REQUEST_CURRENT_STATUS = (RIL_REQUEST_VENDOR_BASE + 35);
    /// @}

    /// [IMS] IMS RIL_REQUEST ==============================================================
    int RIL_REQUEST_SET_IMS_ENABLE = RIL_REQUEST_VENDOR_BASE + 69;
    int RIL_REQUEST_SET_VOLTE_ENABLE = RIL_REQUEST_VENDOR_BASE + 70;
    int RIL_REQUEST_SET_WFC_ENABLE = RIL_REQUEST_VENDOR_BASE + 71;
    int RIL_REQUEST_SET_VILTE_ENABLE = RIL_REQUEST_VENDOR_BASE + 72;
    int RIL_REQUEST_SET_VIWIFI_ENABLE = RIL_REQUEST_VENDOR_BASE + 73;
    int RIL_REQUEST_SET_IMS_VIDEO_ENABLE = RIL_REQUEST_VENDOR_BASE + 75;
    int RIL_REQUEST_VIDEO_CALL_ACCEPT = RIL_REQUEST_VENDOR_BASE + 76;
    int RIL_REQUEST_SET_IMSCFG = RIL_REQUEST_VENDOR_BASE + 77;
    /// [IMS] IMS Provision Configs
    int RIL_REQUEST_GET_PROVISION_VALUE = RIL_REQUEST_VENDOR_BASE + 78;
    int RIL_REQUEST_SET_PROVISION_VALUE = RIL_REQUEST_VENDOR_BASE + 79;
    /// [IMS] IMS Bearer Activate/Deactivate
    int RIL_REQUEST_IMS_BEARER_STATE_CONFIRM = RIL_REQUEST_VENDOR_BASE + 80;
    int RIL_REQUEST_IMS_DEREG_NOTIFICATION = RIL_REQUEST_VENDOR_BASE + 82;
    // IMS blind/assured ECT
    int RIL_REQUEST_IMS_ECT = RIL_REQUEST_VENDOR_BASE + 83;

    // [IMS] IMS Call
    int RIL_REQUEST_HOLD_CALL = RIL_REQUEST_VENDOR_BASE + 84;
    int RIL_REQUEST_RESUME_CALL = RIL_REQUEST_VENDOR_BASE + 85;
    int RIL_REQUEST_DIAL_WITH_SIP_URI = RIL_REQUEST_VENDOR_BASE + 86;
    // [IMS] Emergency Dial
    int RIL_REQUEST_IMS_EMERGENCY_DIAL = RIL_REQUEST_VENDOR_BASE + 87;

    int RIL_REQUEST_SET_IMS_RTP_REPORT = RIL_REQUEST_VENDOR_BASE + 88;

    // [IMS] IMS Conference Call
    int RIL_REQUEST_CONFERENCE_DIAL = RIL_REQUEST_VENDOR_BASE + 89;
    int RIL_REQUEST_ADD_IMS_CONFERENCE_CALL_MEMBER = RIL_REQUEST_VENDOR_BASE + 90;
    int RIL_REQUEST_REMOVE_IMS_CONFERENCE_CALL_MEMBER = RIL_REQUEST_VENDOR_BASE + 91;
    // [IMS] IMS Video Call
    int RIL_REQUEST_VT_DIAL_WITH_SIP_URI = RIL_REQUEST_VENDOR_BASE + 92;
    // [IMS] USSI
    int RIL_REQUEST_SEND_USSI = RIL_REQUEST_VENDOR_BASE + 93;
    int RIL_REQUEST_CANCEL_USSI = RIL_REQUEST_VENDOR_BASE + 94;
    // [IMS] WFC
    int RIL_REQUEST_SET_WFC_PROFILE = RIL_REQUEST_VENDOR_BASE + 95;
    // [IMS] Pull Call
    int RIL_REQUEST_PULL_CALL = RIL_REQUEST_VENDOR_BASE + 96;
    // [IMS] Registration Report
    int RIL_REQUEST_SET_IMS_REGISTRATION_REPORT = RIL_REQUEST_VENDOR_BASE + 97;
    // [IMS] Dial
    int RIL_REQUEST_IMS_DIAL = RIL_REQUEST_VENDOR_BASE + 98;
    // [IMS] VT Dial
    int RIL_REQUEST_IMS_VT_DIAL = RIL_REQUEST_VENDOR_BASE + 99;

    /// [IMS] IMS RIL_REQUEST ==============================================================

    // SS Start
    int RIL_REQUEST_SET_CLIP  = (RIL_REQUEST_VENDOR_BASE + 103);
    int RIL_REQUEST_GET_COLP  = (RIL_REQUEST_VENDOR_BASE + 104);
    int RIL_REQUEST_GET_COLR  = (RIL_REQUEST_VENDOR_BASE + 105);
    int RIL_REQUEST_SEND_CNAP = (RIL_REQUEST_VENDOR_BASE + 106);
    // SS End

    /// M: CC: Vzw/CTVolte ECC @{
    int RIL_REQUEST_ECC_PREFERRED_RAT = (RIL_REQUEST_VENDOR_BASE + 110);
    /// @}

    // VzW CC
    int RIL_REQUEST_SET_VOICE_DOMAIN_PREFERENCE = (RIL_REQUEST_VENDOR_BASE + 122);

    /// M: IMS SS @{
    int RIL_REQUEST_SET_COLP = (RIL_REQUEST_VENDOR_BASE + 123);
    int RIL_REQUEST_SET_COLR = (RIL_REQUEST_VENDOR_BASE + 124);
    int RIL_REQUEST_QUERY_CALL_FORWARD_IN_TIME_SLOT = (RIL_REQUEST_VENDOR_BASE + 125);
    int RIL_REQUEST_SET_CALL_FORWARD_IN_TIME_SLOT = (RIL_REQUEST_VENDOR_BASE + 126);
    int RIL_REQUEST_RUN_GBA = (RIL_REQUEST_VENDOR_BASE + 127);
    /// @}

    int RIL_REQUEST_SET_MD_IMSCFG = (RIL_REQUEST_VENDOR_BASE + 128);
    /// M: E911 ECBM. @{
    int RIL_REQUEST_SET_E911_STATE = (RIL_REQUEST_VENDOR_BASE + 129);
    // @}

    int RIL_REQUEST_IMS_SEND_SMS_EX = (RIL_REQUEST_VENDOR_BASE + 133);

    /// M: IMS DATA @{
    int RIL_REQUEST_SET_IMS_BEARER_NOTIFICATION = (RIL_REQUEST_VENDOR_BASE + 135);
    ///@}

    /// M: Telephonyware IMS Config Request @{
    int RIL_REQUEST_IMS_CONFIG_SET_FEATURE = (RIL_REQUEST_VENDOR_BASE + 136);

    int RIL_REQUEST_IMS_CONFIG_GET_FEATURE = (RIL_REQUEST_VENDOR_BASE + 137);

    int RIL_REQUEST_IMS_CONFIG_SET_PROVISION = (RIL_REQUEST_VENDOR_BASE + 138);

    int RIL_REQUEST_IMS_CONFIG_GET_PROVISION = (RIL_REQUEST_VENDOR_BASE + 139);

    int RIL_REQUEST_IMS_CONFIG_GET_RESOURCE_CAP = (RIL_REQUEST_VENDOR_BASE + 141);
    /// @}

    int RIL_REQUEST_GET_XCAP_STATUS = (RIL_REQUEST_VENDOR_BASE + 163);
    int RIL_REQUEST_RESET_SUPP_SERV = (RIL_REQUEST_VENDOR_BASE + 164);

    int RIL_REQUEST_SET_RCS_UA_ENABLE = RIL_REQUEST_VENDOR_BASE + 166;
    int RIL_REQUEST_SETUP_XCAP_USER_AGENT_STRING = RIL_REQUEST_VENDOR_BASE + 167;
    int RIL_REQUEST_SET_SS_PROPERTY = RIL_REQUEST_VENDOR_BASE + 168;

    int RIL_REQUEST_SMS_ACKNOWLEDGE_EX = (RIL_REQUEST_VENDOR_BASE + 170);
    int RIL_REQUEST_CDMA_SMS_ACKNOWLEDGE_EX = (RIL_REQUEST_VENDOR_BASE + 172);

    // M: RTT@{
    int RIL_REQUEST_SET_RTT_MODE = RIL_REQUEST_VENDOR_BASE + 174;
    int RIL_REQUEST_SEND_RTT_MODIFY_REQUEST = RIL_REQUEST_VENDOR_BASE + 175;
    int RIL_REQUEST_SEND_RTT_TEXT = RIL_REQUEST_VENDOR_BASE + 176;
    int RIL_REQUEST_RTT_MODIFY_REQUST_RESPONSE = RIL_REQUEST_VENDOR_BASE + 177;
    // @}
    int RIL_REQUEST_QUERY_VOPS_STATUS = (RIL_REQUEST_VENDOR_BASE + 178);

    int RIL_REQUEST_HANGUP_WITH_REASON = RIL_REQUEST_VENDOR_BASE + 179;
    // VzW Client API
    int RIL_REQUEST_SET_SIP_HEADER = (RIL_REQUEST_VENDOR_BASE + 180);
    int RIL_REQUEST_SIP_HEADER_REPORT = (RIL_REQUEST_VENDOR_BASE + 181);
    int RIL_REQUEST_SET_IMS_CALL_MODE = (RIL_REQUEST_VENDOR_BASE + 182);

    int RIL_REQUEST_QUERY_SSAC_STATUS = (RIL_REQUEST_VENDOR_BASE + 183);
    // toggle RTT audio indication
    int RIL_REQUEST_TOGGLE_RTT_AUDIO_INDICATION = (RIL_REQUEST_VENDOR_BASE + 184);

    int RIL_REQUEST_ECC_REDIAL_APPROVE = RIL_REQUEST_VENDOR_BASE + 185;

    /*********************************************************************************/
    /*  Vendor unsol                                                                 */
    /*********************************************************************************/
    int RIL_UNSOL_VENDOR_BASE = 3000;

    /// M: CC: Proprietary incoming call handling
    int RIL_UNSOL_INCOMING_CALL_INDICATION = (RIL_UNSOL_VENDOR_BASE + 15);

    /// M: CC: GSM 02.07 B.1.26 Ciphering Indicator support
    int RIL_UNSOL_CIPHER_INDICATION = (RIL_UNSOL_VENDOR_BASE + 24);

    /// M: CC: GSA HD Voice for 2/3G network support
    int RIL_UNSOL_SPEECH_CODEC_INFO = RIL_UNSOL_VENDOR_BASE + 27;

    /// [IMS] IMS RIL_UNSOL INDICATION =====================================================
    int RIL_UNSOL_CALL_INFO_INDICATION = RIL_UNSOL_VENDOR_BASE + 31;
    int RIL_UNSOL_ECONF_RESULT_INDICATION = RIL_UNSOL_VENDOR_BASE + 32;
    int RIL_UNSOL_SIP_CALL_PROGRESS_INDICATOR = RIL_UNSOL_VENDOR_BASE + 33;
    int RIL_UNSOL_CALLMOD_CHANGE_INDICATOR = RIL_UNSOL_VENDOR_BASE + 34;
    int RIL_UNSOL_VIDEO_CAPABILITY_INDICATOR = RIL_UNSOL_VENDOR_BASE + 35;
    int RIL_UNSOL_ON_USSI = RIL_UNSOL_VENDOR_BASE + 36;
    int RIL_UNSOL_GET_PROVISION_DONE = RIL_UNSOL_VENDOR_BASE + 37;
    int RIL_UNSOL_IMS_RTP_INFO = RIL_UNSOL_VENDOR_BASE + 38;
    int RIL_UNSOL_ON_XUI = RIL_UNSOL_VENDOR_BASE + 39;
    int RIL_UNSOL_IMS_EVENT_PACKAGE_INDICATION = RIL_UNSOL_VENDOR_BASE + 40;
    int RIL_UNSOL_IMS_REGISTRATION_INFO = RIL_UNSOL_VENDOR_BASE + 41;
    int RIL_UNSOL_IMS_ENABLE_DONE = RIL_UNSOL_VENDOR_BASE + 42;
    int RIL_UNSOL_IMS_DISABLE_DONE = RIL_UNSOL_VENDOR_BASE + 43;
    int RIL_UNSOL_IMS_ENABLE_START = RIL_UNSOL_VENDOR_BASE + 44;
    int RIL_UNSOL_IMS_DISABLE_START = RIL_UNSOL_VENDOR_BASE + 45;
    int RIL_UNSOL_ECT_INDICATION = RIL_UNSOL_VENDOR_BASE + 46;
    int RIL_UNSOL_VOLTE_SETTING = RIL_UNSOL_VENDOR_BASE + 47;
    int RIL_UNSOL_GTT_CAPABILITY_INDICATION = RIL_UNSOL_VENDOR_BASE + 48;
    int RIL_UNSOL_IMS_BEARER_STATE_NOTIFY = RIL_UNSOL_VENDOR_BASE + 49;
    int RIL_UNSOL_IMS_BEARER_INIT = RIL_UNSOL_VENDOR_BASE + 51;
    int RIL_UNSOL_IMS_DEREG_DONE = RIL_UNSOL_VENDOR_BASE + 52;
    /// [IMS] IMS RIL_UNSOL INDICATION ======================================================

    int RIL_UNSOL_ECONF_SRVCC_INDICATION = (RIL_UNSOL_VENDOR_BASE + 72);

    /// Ims Data Framework {@
    int RIL_UNSOL_DEDICATE_BEARER_ACTIVATED = (RIL_UNSOL_VENDOR_BASE + 82);
    int RIL_UNSOL_DEDICATE_BEARER_MODIFIED = (RIL_UNSOL_VENDOR_BASE + 83);
    int RIL_UNSOL_DEDICATE_BEARER_DEACTIVATED = (RIL_UNSOL_VENDOR_BASE + 84);
    ///@}

    /// M: Modem Multi-IMS support count
    int RIL_UNSOL_IMS_MULTIIMS_COUNT = (RIL_UNSOL_VENDOR_BASE + 85);

    /// M: IMS Event Indication 1.IMS conference info update 2.MWI info update @{
    int RIL_UNSOL_IMS_CONFERENCE_INFO_INDICATION = (RIL_UNSOL_VENDOR_BASE + 89);
    int RIL_UNSOL_LTE_MESSAGE_WAITING_INDICATION = (RIL_UNSOL_VENDOR_BASE + 90);
    /// @}

    /// Telephonyware IMS config @{
    int RIL_UNSOL_IMS_CONFIG_DYNAMIC_IMS_SWITCH_COMPLETE = (RIL_UNSOL_VENDOR_BASE + 91);
    int RIL_UNSOL_IMS_CONFIG_FEATURE_CHANGED = (RIL_UNSOL_VENDOR_BASE + 92);
    int RIL_UNSOL_IMS_CONFIG_CONFIG_CHANGED = (RIL_UNSOL_VENDOR_BASE + 93);
    int RIL_UNSOL_IMS_CONFIG_CONFIG_LOADED = (RIL_UNSOL_VENDOR_BASE + 94);
    /// @}

    int RIL_UNSOL_ON_VOLTE_SUBSCRIPTION = (RIL_UNSOL_VENDOR_BASE + 110);
    int RIL_UNSOL_IMS_DATA_INFO_NOTIFY = (RIL_UNSOL_VENDOR_BASE + 111);
    int RIL_UNSOL_RESPONSE_NEW_SMS_STATUS_REPORT_EX = (RIL_UNSOL_VENDOR_BASE + 112);
    int RIL_UNSOL_RESPONSE_NEW_SMS_EX = (RIL_UNSOL_VENDOR_BASE + 113);

    int RIL_UNSOL_RESPONSE_CDMA_NEW_SMS_EX = (RIL_UNSOL_VENDOR_BASE + 116);
    int RIL_UNSOL_NO_EMERGENCY_CALLBACK_MODE = (RIL_UNSOL_VENDOR_BASE + 117);

    // M: RTT @{
    int RIL_UNSOL_RTT_MODIFY_RESPONSE = RIL_UNSOL_VENDOR_BASE + 118;
    int RIL_UNSOL_RTT_TEXT_RECEIVE = RIL_UNSOL_VENDOR_BASE + 119;
    int RIL_UNSOL_RTT_CAPABILITY_INDICATION = RIL_UNSOL_VENDOR_BASE + 120;
    int RIL_UNSOL_RTT_MODIFY_REQUEST_RECEIVE = RIL_UNSOL_VENDOR_BASE + 121;
    int RIL_UNSOL_AUDIO_INDICATION = RIL_UNSOL_VENDOR_BASE + 122;
    // @}
    int RIL_UNSOL_VOPS_INDICATION = (RIL_UNSOL_VENDOR_BASE + 123);
    // VzW Client API
    int RIL_UNSOL_SIP_HEADER = (RIL_UNSOL_VENDOR_BASE + 124);
    int RIL_UNSOL_CALL_ADDITIONAL_INFO = (RIL_UNSOL_VENDOR_BASE + 126);

    int RIL_UNSOL_SSAC_STATUS = (RIL_UNSOL_VENDOR_BASE + 127);
    int RIL_UNSOL_CALL_RAT_INDICATION = (RIL_UNSOL_VENDOR_BASE + 128);
    int RIL_UNSOL_IMS_DIALOG_INDICATION = (RIL_UNSOL_VENDOR_BASE + 129);
}
