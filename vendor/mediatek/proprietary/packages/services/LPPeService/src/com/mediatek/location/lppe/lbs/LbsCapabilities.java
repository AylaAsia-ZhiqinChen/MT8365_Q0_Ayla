// This source code is generated by UdpGeneratorTool, not recommend to modify it directly
package com.mediatek.location.lppe.lbs;

import com.mediatek.socket.base.SocketUtils;
import com.mediatek.socket.base.SocketUtils.BaseBuffer;
import com.mediatek.socket.base.SocketUtils.Codable;

public class LbsCapabilities implements Codable {

    public final static LbsCapabilities _instance = new LbsCapabilities();

    /**
     * support to report SUPL INIT over SMS or WAP Push <br>
     */
    public boolean suplInitOverSms = false;
    public boolean batteryInfo = false;
    public String imei = "";    // maxSize 16

    public boolean equals(Object _obj) {
        if (_obj == null) {
            return false;
        }
        if (_obj == this) {
            return true;
        }
        if (!(_obj instanceof LbsCapabilities)) {
            return false;
        }

        LbsCapabilities _tmp = (LbsCapabilities) _obj;
        if (_tmp.suplInitOverSms != suplInitOverSms)
            return false;
        if (_tmp.batteryInfo != batteryInfo)
            return false;
        if (!_tmp.imei.equals(imei))
            return false;
        return true;
    }

    public String toString() {
        StringBuilder _o = new StringBuilder();
        _o.append("LbsCapabilities ");
        _o.append("suplInitOverSms=[" + suplInitOverSms + "] ");
        _o.append("batteryInfo=[" + batteryInfo + "] ");
        _o.append("imei=[***] ");
        return _o.toString();
    }

    @Override
    public void encode(BaseBuffer _buff) {
        _buff.putBool(suplInitOverSms);
        _buff.putBool(batteryInfo);
        SocketUtils.assertSize(imei, 16, 0);
        _buff.putString(imei);
    }

    @Override
    public LbsCapabilities decode(BaseBuffer _buff) {
        LbsCapabilities _out = new LbsCapabilities();
        _out.suplInitOverSms = _buff.getBool();
        _out.batteryInfo = _buff.getBool();
        _out.imei = _buff.getString();
        return _out;
    }

    @Override
    public LbsCapabilities[] getArray(Codable[] data) {
        LbsCapabilities[] _out = new LbsCapabilities[data.length];
        for (int _i = 0; _i < data.length; _i++) {
            _out[_i] = (LbsCapabilities) data[_i];
        }
        return _out;
    }

}
