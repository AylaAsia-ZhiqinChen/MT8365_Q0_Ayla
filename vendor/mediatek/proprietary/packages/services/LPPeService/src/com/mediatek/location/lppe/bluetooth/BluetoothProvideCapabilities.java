// This source code is generated by UdpGeneratorTool, not recommend to modify it directly
package com.mediatek.location.lppe.bluetooth;

import com.mediatek.socket.base.SocketUtils.BaseBuffer;
import com.mediatek.socket.base.SocketUtils.Codable;

/**
 * is used by the target to provide its LPPe BT/BTLE positioning capabilities <br>
 * to the server <br>
 */
public class BluetoothProvideCapabilities implements Codable {

    public final static BluetoothProvideCapabilities _instance = new BluetoothProvideCapabilities();

    /**
     * Whether target supports bluetooth <br>
     */
    public boolean btSupported = false;
    public boolean btRssi = false;
    public boolean btRtd = false;
    /**
     * This field specifies the BT assistance data types supported by the target device <br>
     * for target based mode <br>
     */
    public boolean btGroup = false;
    /**
     * This field specifies the BT assistance data types supported by the target device <br>
     * for target based mode <br>
     */
    public boolean btAntennaPattern = false;
    /**
     * Whether target supports bluetooth low energy <br>
     */
    public boolean btleSupported = false;
    public boolean btleRssi = false;
    public boolean btleRtd = false;
    /**
     * This field specifies the BTLE assistance data types supported by the target device <br>
     * for target based mode <br>
     */
    public boolean btleGroup = false;
    /**
     * This field specifies the BTLE assistance data types supported by the target device <br>
     * for target based mode <br>
     */
    public boolean btleAntennaPattern = false;

    public boolean equals(Object _obj) {
        if (_obj == null) {
            return false;
        }
        if (_obj == this) {
            return true;
        }
        if (!(_obj instanceof BluetoothProvideCapabilities)) {
            return false;
        }

        BluetoothProvideCapabilities _tmp = (BluetoothProvideCapabilities) _obj;
        if (_tmp.btSupported != btSupported)
            return false;
        if (_tmp.btRssi != btRssi)
            return false;
        if (_tmp.btRtd != btRtd)
            return false;
        if (_tmp.btGroup != btGroup)
            return false;
        if (_tmp.btAntennaPattern != btAntennaPattern)
            return false;
        if (_tmp.btleSupported != btleSupported)
            return false;
        if (_tmp.btleRssi != btleRssi)
            return false;
        if (_tmp.btleRtd != btleRtd)
            return false;
        if (_tmp.btleGroup != btleGroup)
            return false;
        if (_tmp.btleAntennaPattern != btleAntennaPattern)
            return false;
        return true;
    }

    public String toString() {
        StringBuilder _o = new StringBuilder();
        _o.append("BluetoothProvideCapabilities ");
        _o.append("btSupported=[" + btSupported + "] ");
        _o.append("btRssi=[" + btRssi + "] ");
        _o.append("btRtd=[" + btRtd + "] ");
        _o.append("btGroup=[" + btGroup + "] ");
        _o.append("btAntennaPattern=[" + btAntennaPattern + "] ");
        _o.append("btleSupported=[" + btleSupported + "] ");
        _o.append("btleRssi=[" + btleRssi + "] ");
        _o.append("btleRtd=[" + btleRtd + "] ");
        _o.append("btleGroup=[" + btleGroup + "] ");
        _o.append("btleAntennaPattern=[" + btleAntennaPattern + "] ");
        return _o.toString();
    }

    @Override
    public void encode(BaseBuffer _buff) {
        _buff.putBool(btSupported);
        _buff.putBool(btRssi);
        _buff.putBool(btRtd);
        _buff.putBool(btGroup);
        _buff.putBool(btAntennaPattern);
        _buff.putBool(btleSupported);
        _buff.putBool(btleRssi);
        _buff.putBool(btleRtd);
        _buff.putBool(btleGroup);
        _buff.putBool(btleAntennaPattern);
    }

    @Override
    public BluetoothProvideCapabilities decode(BaseBuffer _buff) {
        BluetoothProvideCapabilities _out = new BluetoothProvideCapabilities();
        _out.btSupported = _buff.getBool();
        _out.btRssi = _buff.getBool();
        _out.btRtd = _buff.getBool();
        _out.btGroup = _buff.getBool();
        _out.btAntennaPattern = _buff.getBool();
        _out.btleSupported = _buff.getBool();
        _out.btleRssi = _buff.getBool();
        _out.btleRtd = _buff.getBool();
        _out.btleGroup = _buff.getBool();
        _out.btleAntennaPattern = _buff.getBool();
        return _out;
    }

    @Override
    public BluetoothProvideCapabilities[] getArray(Codable[] data) {
        BluetoothProvideCapabilities[] _out = new BluetoothProvideCapabilities[data.length];
        for (int _i = 0; _i < data.length; _i++) {
            _out[_i] = (BluetoothProvideCapabilities) data[_i];
        }
        return _out;
    }

}
