// This source code is generated by UdpGeneratorTool, not recommend to modify it directly
package com.mediatek.location.lppe.ipaddr;

import com.mediatek.socket.base.SocketUtils.BaseBuffer;
import com.mediatek.socket.base.SocketUtils.Codable;

public enum Bearer implements Codable {
    unknown,
    gsm,
    utran,
    lte,
    wlan,
    wimax,
    dsl,
    pktcable,
    other,
;

    public final static Bearer _instance = Bearer.unknown;

    @Override
    public void encode(BaseBuffer buff) {
        switch (this) {
        case unknown:
            buff.putInt(0);
            break;
        case gsm:
            buff.putInt(1);
            break;
        case utran:
            buff.putInt(2);
            break;
        case lte:
            buff.putInt(3);
            break;
        case wlan:
            buff.putInt(4);
            break;
        case wimax:
            buff.putInt(5);
            break;
        case dsl:
            buff.putInt(6);
            break;
        case pktcable:
            buff.putInt(7);
            break;
        case other:
            buff.putInt(8);
            break;
        default:
            break;
        }
    }

    @Override
    public Bearer decode(BaseBuffer buff) {
        int _type = buff.getInt();
        switch (_type) {
        case 0:
            return unknown;
        case 1:
            return gsm;
        case 2:
            return utran;
        case 3:
            return lte;
        case 4:
            return wlan;
        case 5:
            return wimax;
        case 6:
            return dsl;
        case 7:
            return pktcable;
        case 8:
            return other;
        }
        return null;
    }

    @Override
    public Bearer[] getArray(Codable[] data) {
        Bearer[] _out = new Bearer[data.length];
        for (int _i = 0; _i < data.length; _i++) {
            _out[_i] = (Bearer) data[_i];
        }
        return _out;
    }

}
