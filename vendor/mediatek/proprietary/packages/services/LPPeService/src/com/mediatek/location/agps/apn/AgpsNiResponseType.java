// This source code is generated by UdpGeneratorTool, not recommend to modify it directly
package com.mediatek.location.agps.apn;

import com.mediatek.socket.base.SocketUtils.BaseBuffer;
import com.mediatek.socket.base.SocketUtils.Codable;

public enum AgpsNiResponseType implements Codable {
    AGPS_NI_RESPONSE_ACCEPT,
    AGPS_NI_RESPONSE_DENY,
    AGPS_NI_RESPONSE_NORESP,
    AGPS_NI_RESPONSE_IGNORE,
;

    public final static AgpsNiResponseType _instance = AgpsNiResponseType.AGPS_NI_RESPONSE_ACCEPT;

    @Override
    public void encode(BaseBuffer buff) {
        switch (this) {
        case AGPS_NI_RESPONSE_ACCEPT:
            buff.putInt(1);
            break;
        case AGPS_NI_RESPONSE_DENY:
            buff.putInt(2);
            break;
        case AGPS_NI_RESPONSE_NORESP:
            buff.putInt(3);
            break;
        case AGPS_NI_RESPONSE_IGNORE:
            buff.putInt(4);
            break;
        default:
            break;
        }
    }

    @Override
    public AgpsNiResponseType decode(BaseBuffer buff) {
        int _type = buff.getInt();
        switch (_type) {
        case 1:
            return AGPS_NI_RESPONSE_ACCEPT;
        case 2:
            return AGPS_NI_RESPONSE_DENY;
        case 3:
            return AGPS_NI_RESPONSE_NORESP;
        case 4:
            return AGPS_NI_RESPONSE_IGNORE;
        }
        return null;
    }

    @Override
    public AgpsNiResponseType[] getArray(Codable[] data) {
        AgpsNiResponseType[] _out = new AgpsNiResponseType[data.length];
        for (int _i = 0; _i < data.length; _i++) {
            _out[_i] = (AgpsNiResponseType) data[_i];
        }
        return _out;
    }

}
