// This source code is generated by UdpGeneratorTool, not recommend to modify it directly
package com.mediatek.location.lppe.wlan;

import com.mediatek.socket.base.SocketUtils.BaseBuffer;
import com.mediatek.socket.base.SocketUtils.Codable;

public class WlanRTD implements Codable {

    public final static WlanRTD _instance = new WlanRTD();

    /**
     * 0..16777215 <br>
     */
    public int value = 0;
    public WlanRTDUnit unit = WlanRTDUnit.microseconds;
    /**
     * 0..255 <br>
     */
    public short accuracy = (short) 0;

    public boolean equals(Object _obj) {
        if (_obj == null) {
            return false;
        }
        if (_obj == this) {
            return true;
        }
        if (!(_obj instanceof WlanRTD)) {
            return false;
        }

        WlanRTD _tmp = (WlanRTD) _obj;
        if (_tmp.value != value)
            return false;
        if (!_tmp.unit.equals(unit))
            return false;
        if (_tmp.accuracy != accuracy)
            return false;
        return true;
    }

    public String toString() {
        StringBuilder _o = new StringBuilder();
        _o.append("WlanRTD ");
        _o.append("value=[" + value + "] ");
        _o.append("unit=[" + unit + "] ");
        _o.append("accuracy=[" + accuracy + "] ");
        return _o.toString();
    }

    @Override
    public void encode(BaseBuffer _buff) {
        _buff.putInt(value);
        _buff.putCodable(unit);
        _buff.putShort(accuracy);
    }

    @Override
    public WlanRTD decode(BaseBuffer _buff) {
        WlanRTD _out = new WlanRTD();
        _out.value = _buff.getInt();
        _out.unit = (WlanRTDUnit) _buff.getCodable(WlanRTDUnit._instance);
        _out.accuracy = _buff.getShort();
        return _out;
    }

    @Override
    public WlanRTD[] getArray(Codable[] data) {
        WlanRTD[] _out = new WlanRTD[data.length];
        for (int _i = 0; _i < data.length; _i++) {
            _out[_i] = (WlanRTD) data[_i];
        }
        return _out;
    }

}
