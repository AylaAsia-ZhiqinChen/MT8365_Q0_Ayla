#include "code_translate.h"
#include "error_code.h"
#include "xflash_struct.h"
#include "common/common_include.h"


#define ENUM_TO_STRING(n) \
   case n:\
   return #n;

string code_translate::dev_ctrl_to_string(uint32 dc)
{
   switch(dc)
   {
      ENUM_TO_STRING(DEV_GET_CHIP_ID)
         ENUM_TO_STRING(DEV_BROM_SEND_DATA_TO)
         ENUM_TO_STRING(DEV_BROM_JUMP_TO)
         ENUM_TO_STRING(DEV_LOADER_JUMP_PARTITION)

   default:
      return (boost::format("unmapping device ctrl code: 0x%x")%dc).str();
   }
}

string code_translate::err_to_string(uint32 error_code)
{
   switch(error_code)
   {
      ENUM_TO_STRING(STATUS_OK)
         ENUM_TO_STRING(STATUS_ERR)
         ENUM_TO_STRING(STATUS_ABORT)
         ENUM_TO_STRING(STATUS_UNSUPPORT_CMD)
         ENUM_TO_STRING(STATUS_PROTOCOL_ERR)
         ENUM_TO_STRING(STATUS_BUFFER_OVERFLOW)
         ENUM_TO_STRING(STATUS_SECURITY_DENY)
         ENUM_TO_STRING(STATUS_CHECKSUM_ERR)
         ENUM_TO_STRING(STATUS_THREAD)
         ENUM_TO_STRING(STATUS_USB_SCAN_ERR)
         ENUM_TO_STRING(STATUS_INVALID_SESSION)
         ENUM_TO_STRING(STATUS_INVALID_STAGE)
         ENUM_TO_STRING(STATUS_NOT_IMPLEMENTED)

         //device err
         ENUM_TO_STRING(STATUS_UNSUPPORT_OP)
         ENUM_TO_STRING(STATUS_READ_DATA_FAIL)
         ENUM_TO_STRING(STATUS_WRITE_DATA_FAIL)
         ENUM_TO_STRING(STATUS_DATA_FAIL)
         ENUM_TO_STRING(STATUS_USB_FAIL)
         ENUM_TO_STRING(STATUS_TOO_LARGE)
         ENUM_TO_STRING(STATUS_SPARSE_INCOMPLETE)
         ENUM_TO_STRING(STATUS_UNKNOWN_TYPE)
         ENUM_TO_STRING(STATUS_UNSUPPORT_CTRL_CODE)
         ENUM_TO_STRING(STATUS_ERASE_FAIL)
         ENUM_TO_STRING(STATUS_PARTITON_NOT_FOUND)
         ENUM_TO_STRING(STATUS_READ_PT_FAIL)
         ENUM_TO_STRING(STATUS_EXCEED_MAX_PART_NUM)
         ENUM_TO_STRING(STATUS_UNKNOWN_STORAGE_TYPE)
         ENUM_TO_STRING(STATUS_DRAM_TEST_FAILED)
         ENUM_TO_STRING(STATUS_DETECT_DRAM_TEST_FAILED)


         //command
         ENUM_TO_STRING(STATUS_DEVICE_CTRL_EXCEPTION)
         ENUM_TO_STRING(STATUS_SHUTDOWN_CMD_FAIL)
         ENUM_TO_STRING(STATUS_DOWNLOAD_FAIL)

         /* security */
         ENUM_TO_STRING(ROM_INFO_NOT_FOUND)
         ENUM_TO_STRING(CUST_NAME_NOT_FOUND)
         ENUM_TO_STRING(ROM_INFO_DEVICE_NOT_SUPPORTED)

         //brom
         ENUM_TO_STRING(STATUS_BROM_CMD_STARTCMD_FAIL)
         ENUM_TO_STRING(STATUS_BROM_BBCHIP_HW_VER_INCORRECT)
         ENUM_TO_STRING(STATUS_BROM_CMD_SEND_DA_FAIL)
         ENUM_TO_STRING(STATUS_BROM_CMD_JUMP_DA_FAIL)
         ENUM_TO_STRING(STATUS_BROM_CMD_FAIL)
         //ENUM_TO_STRING(STATUS_BROM_CMD_SEND_DA_FAIL)
         //ENUM_TO_STRING(STATUS_BROM_CMD_SEND_DA_FAIL)




         //Lib
         ENUM_TO_STRING(STATUS_SCATTER_FILE_INVALID)
         ENUM_TO_STRING(STATUS_DA_FILE_INVALID)
         ENUM_TO_STRING(STATUS_INVALID_HSESSION)
         ENUM_TO_STRING(STATUS_DA_SELECTION_ERR)
         ENUM_TO_STRING(STATUS_FILE_NOT_FOUND)
         ENUM_TO_STRING(STATUS_PRELOADER_INVALID)
         ENUM_TO_STRING(STATUS_EMI_HDR_INVALID)
         ENUM_TO_STRING(STATUS_OPEN_FILE_ERR)
         ENUM_TO_STRING(STATUS_WRITE_FILE_ERR)
         ENUM_TO_STRING(STATUS_READ_FILE_ERR)
         ENUM_TO_STRING(STATUS_STORAGE_MISMATCH)
         ENUM_TO_STRING(STATUS_INVALID_PARAMETER)
         ENUM_TO_STRING(STATUS_INVALID_GPT)
         ENUM_TO_STRING(STATUS_INVALID_PMT)
         ENUM_TO_STRING(STATUS_WRITE_PT_FAILED)
         ENUM_TO_STRING(STATUS_INSUFFICIENT_BUFFER)
         ENUM_TO_STRING(STATUS_LAYOUT_CHANGED)
         ENUM_TO_STRING(STATUS_PARSE_XML_ERROR)
         ENUM_TO_STRING(STATUS_NODE_NOT_EXIST)
         ENUM_TO_STRING(STATUS_UNKNOWN_TEST_TYPE)

         ENUM_TO_STRING(STATUS_SEC_DL_FORBIDDEN)
         ENUM_TO_STRING(STATUS_SEC_IMG_TOO_LARGE)
         ENUM_TO_STRING(STATUS_SEC_PL_VFY_FAIL)
         ENUM_TO_STRING(STATUS_SEC_IMG_VFY_FAIL)
         ENUM_TO_STRING(STATUS_SEC_HASH_OP_FAIL)
         ENUM_TO_STRING(STATUS_SEC_HASH_BINDING_CHK_FAIL)
         ENUM_TO_STRING(STATUS_SEC_INVALID_BUF)
         ENUM_TO_STRING(STATUS_SEC_BINDING_HASH_NOT_AVAIL)
         ENUM_TO_STRING(STATUS_SEC_WRITE_DATA_NOT_ALLOWED)
         ENUM_TO_STRING(STATUS_SEC_FORMAT_NOT_ALLOWED)
         ENUM_TO_STRING(STATUS_SEC_SV5_PUBK_AUTH_FAIL)
         ENUM_TO_STRING(STATUS_SEC_SV5_HASH_VFY_FAIL)
         ENUM_TO_STRING(STATUS_SEC_SV5_RSA_OP_FAIL)
         ENUM_TO_STRING(STATUS_SEC_SV5_RSA_VFY_FAIL)
         ENUM_TO_STRING(STATUS_SEC_SV5_GFH_NOT_FOUND)
         ENUM_TO_STRING(STATUS_SEC_NOT_VALID_CERT1)
         ENUM_TO_STRING(STATUS_SEC_NOT_VALID_CERT2)
         ENUM_TO_STRING(STATUS_SEC_NOT_VALID_IMGHDR)
         ENUM_TO_STRING(STATUS_SEC_SIG_SZ_NOT_VALID)
         ENUM_TO_STRING(STATUS_SEC_PSS_OP_FAIL)
         ENUM_TO_STRING(STATUS_SEC_CERT_AUTH_FAIL)
         ENUM_TO_STRING(STATUS_SEC_PUBK_AUTH_MISMATCH_N_SIZE)
         ENUM_TO_STRING(STATUS_SEC_PUBK_AUTH_MISMATCH_E_SIZE)
         ENUM_TO_STRING(STATUS_SEC_PUBK_AUTH_MISMATCH_N)
         ENUM_TO_STRING(STATUS_SEC_PUBK_AUTH_MISMATCH_E)
         ENUM_TO_STRING(STATUS_SEC_PUBK_AUTH_MISMATCH_HASH)
         ENUM_TO_STRING(STATUS_SEC_CERT_OBJ_NOT_FOUND)
         ENUM_TO_STRING(STATUS_SEC_CERT_OID_NOT_FOUND)
         ENUM_TO_STRING(STATUS_SEC_CERT_OUT_OF_RANGE)
         ENUM_TO_STRING(STATUS_SEC_OID_NOT_MATCH)
         ENUM_TO_STRING(STATUS_SEC_LEN_NOT_MATCH)
         ENUM_TO_STRING(STATUS_SEC_ASN1_UNKNOWN_OP)
         ENUM_TO_STRING(STATUS_SEC_OID_IDX_OUT_OF_RANGE)
         ENUM_TO_STRING(STATUS_SEC_OID_TOO_LARGE)
         ENUM_TO_STRING(STATUS_SEC_PUBK_SZ_MISMATCH)
         ENUM_TO_STRING(STATUS_SEC_SWID_MISMATCH)
         ENUM_TO_STRING(STATUS_SEC_HASH_SZ_MISMATCH)
         ENUM_TO_STRING(STATUS_SEC_IMGHDR_TYPE_MISMATCH)
         ENUM_TO_STRING(STATUS_SEC_IMG_TYPE_MISMATCH)
         ENUM_TO_STRING(STATUS_SEC_IMGHDR_HASH_VFY_FAIL)
         ENUM_TO_STRING(STATUS_SEC_IMG_HASH_VFY_FAIL)
         ENUM_TO_STRING(STATUS_SEC_VIOLATE_ANTI_ROLLBACK)
         ENUM_TO_STRING(STATUS_SEC_SECCFG_NOT_FOUND)
         ENUM_TO_STRING(STATUS_SEC_SECCFG_MAGIC_INCORRECT)
         ENUM_TO_STRING(STATUS_SEC_SECCFG_NOT_VALID)
         ENUM_TO_STRING(STATUS_SEC_CIPHER_MODE_INVALID)
         ENUM_TO_STRING(STATUS_SEC_CIPHER_KEY_INVALID)
         ENUM_TO_STRING(STATUS_SEC_CIPHER_DATA_UNALIGNED)
   default:
      return (boost::format("unmapping error code: 0x%x")%error_code).str();
   }
}