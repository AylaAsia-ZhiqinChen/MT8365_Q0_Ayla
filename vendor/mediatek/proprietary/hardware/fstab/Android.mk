# Copyright Statement:
#
# This software/firmware and related documentation ("MediaTek Software") are
# protected under relevant copyright laws. The information contained herein
# is confidential and proprietary to MediaTek Inc. and/or its licensors.
# Without the prior written permission of MediaTek inc. and/or its licensors,
# any reproduction, modification, use or disclosure of MediaTek Software,
# and information contained herein, in whole or in part, shall be strictly prohibited.
#
# MediaTek Inc. (C) 2010. All rights reserved.
#
# BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
# THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
# RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
# AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
# NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
# SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
# SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
# THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
# THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
# CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
# SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
# STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
# CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
# AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
# OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
# MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
#
# The following software/firmware and/or related documentation ("MediaTek Software")
# have been modified by MediaTek Inc. All revisions are subject to any receiver's
# applicable license agreements with MediaTek Inc.
ifneq ($(MTK_EMULATOR_SUPPORT), yes)

ifdef MTK_PLATFORM
    FSTAB_PLATFORM := $(shell echo $(MTK_PLATFORM) | tr A-Z a-z )
else
    $(warning "the value of FSTAB_PLATFORM is not defined")
endif

LOCAL_PATH := $(call my-dir)
include $(CLEAR_VARS)
LOCAL_MODULE := fstab.$(FSTAB_PLATFORM)
LOCAL_PROPRIETARY_MODULE := true
LOCAL_MODULE_OWNER := mtk
LOCAL_MODULE_CLASS := ETC
VENDOR_FSTAB := $(call local-intermediates-dir)/fstab
LOCAL_PREBUILT_MODULE_FILE := $(VENDOR_FSTAB)
include $(BUILD_PREBUILT)


include $(CLEAR_VARS)
LOCAL_MODULE := fstab.$(FSTAB_PLATFORM).ramdisk
LOCAL_PROPRIETARY_MODULE := true
LOCAL_MODULE_OWNER := mtk
LOCAL_MODULE_CLASS := ETC
LOCAL_PREBUILT_MODULE_FILE := $(VENDOR_FSTAB)
ifeq ($(BOARD_USES_RECOVERY_AS_BOOT),true)
LOCAL_MODULE_PATH := $(TARGET_RECOVERY_ROOT_OUT)/first_stage_ramdisk
else
LOCAL_MODULE_PATH := $(TARGET_RAMDISK_OUT)
endif
LOCAL_MODULE_STEM := fstab.$(FSTAB_PLATFORM)
include $(BUILD_PREBUILT)

__CFLAGS :=
ifeq ($(strip $(MTK_NAND_MTK_FTL_SUPPORT)),yes)
__CFLAGS += -D__MTK_FTL_SUPPORT
endif
ifeq ($(strip $(MNTL_SUPPORT)),yes)
__CFLAGS += -D__MNTL_SUPPORT
endif
ifeq ($(strip $(MTK_SLC_BUFFER_SUPPORT)),yes)
__CFLAGS += -D__MTK_SLC_BUFFER_SUPPORT
endif

ifeq ($(strip $(MTK_PERSIST_PARTITION_SUPPORT)),yes)
__CFLAGS += -D__PERSIST_PARTITION_SUPPORT
endif
ifeq ($(strip $(MTK_CIP_SUPPORT)),yes)
__CFLAGS += -D__CIP_SUPPORT
endif
ifeq ($(strip $(MTK_ICUSB_SUPPORT)),yes)
__CFLAGS += -D__ICUSB_SUPPORT
endif
ifeq ($(strip $(MTK_MULTI_PARTITION_MOUNT_ONLY_SUPPORT)),yes)
__CFLAGS += -D__MULTI_PARTITION_MOUNT_ONLY_SUPPORT
endif
ifeq ($(strip $(MTK_FACTORY_RESET_PROTECTION_SUPPORT)),yes)
__CFLAGS += -D__MTK_FACTORY_RESET_PROTECTION_SUPPORT
endif
ifeq ($(strip $(MTK_ATF_SUPPORT)),yes)
__CFLAGS += -D__MTK_ATF_SUPPORT
endif
ifeq ($(strip $(MTK_TEE_SUPPORT)),yes)
__CFLAGS += -D__MTK_TEE_SUPPORT
endif
ifeq ($(strip $(MTK_TC1_FEATURE)),yes)
__CFLAGS += -D__MTK_TC1_FEATURE
endif
ifeq ($(strip $(MTK_AB_OTA_UPDATER)),yes)
__CFLAGS += -D__MTK_AB_OTA_UPDATER
endif
ifeq ($(strip $(MTK_GOOGLE_TRUSTY_SUPPORT)),yes)
__CFLAGS += -D__MTK_GOOGLE_TRUSTY_SUPPORT
endif
ifeq ($(strip $(MTK_EMMC_SUPPORT)),yes)
__CFLAGS += -D__MTK_EMMC_SUPPORT
endif
ifeq ($(strip $(MTK_UFS_SUPPORT)),yes)
__CFLAGS += -D__MTK_UFS_SUPPORT
endif
ifeq ($(strip $(MTK_PRIVACY_PROTECTION_LOCK)),yes)
__CFLAGS += -D__MTK_PRIVACY_PROTECTION_LOCK
endif
ifeq ($(strip $(MTK_NVCONFIG_PARTITION_SUPPORT)),yes)
__CFLAGS += -D__MTK_NVCONFIG_PARTITION_SUPPORT
endif
ifeq ($(strip $(MTK_EMMC_SUPPORT_OTP)),yes)
__CFLAGS += -D__MTK_OTP_SUPPORT
endif
ifeq ($(strip $(MTK_UFS_OTP)),yes)
__CFLAGS += -D__MTK_OTP_SUPPORT
endif
ifeq ($(strip $(MTK_TINYSYS_SCP_SUPPORT)),yes)
__CFLAGS += -D__MTK_TINYSYS_SCP_SUPPORT
endif
ifeq ($(strip $(MTK_TINYSYS_SSPM_SUPPORT)),yes)
__CFLAGS += -D__MTK_TINYSYS_SSPM_SUPPORT
endif
ifeq ($(strip $(MTK_EFUSE_WRITER_SUPPORT)),yes)
__CFLAGS += -D__MTK_EFUSE_WRITER_SUPPORT
endif
ifeq (true,$(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_SUPPORTS_VERITY))
__CFLAGS += -D__MTK_SEC_VERITY
endif

ifeq ($(strip $(MTK_IN_HOUSE_TEE_SUPPORT)),yes)
ifeq ($(strip $(MTK_DRM_KEY_MNG_SUPPORT)),yes)
__CFLAGS += -D__KB_DKB_PARTITION_SUPPORT
endif
endif

ifneq ($(strip $(BOARD_SYSTEMIMAGE_FILE_SYSTEM_TYPE)),)
__CFLAGS += -D__MTK_SYSIMG_FSTYPE=$(BOARD_SYSTEMIMAGE_FILE_SYSTEM_TYPE)
endif

ifeq ($(strip $(MTK_ENCRYPTION_DEFAULT_OFF)),yes)
  __CFLAGS += -D__MTK_FDE_NO_FORCE
else
ifeq ($(strip $(MTK_ENCRYPTION_TYPE_FILE)),yes)
  __CFLAGS += -D__MTK_FDE_TYPE_FILE
ifeq ($(strip $(MTK_ENCRYPTION_FDE_TO_FBE)),yes)
  __CFLAGS += -D__MTK_FDE_TO_FBE
endif
endif
endif
ifeq ($(strip $(MTK_VPU_SUPPORT)),yes)
  __CFLAGS += -D__MTK_VPU_SUPPORT
endif
ifeq ($(strip $(SPM_FW_USE_PARTITION)),yes)
  __CFLAGS += -D__SPM_FW_USE_PARTITION
endif
ifeq ($(strip $(MCUPM_FW_USE_PARTITION)),yes)
  __CFLAGS += -D__MCUPM_FW_USE_PARTITION
endif

ifeq ($(strip $(TARGET_COPY_OUT_VENDOR)),vendor)
  __CFLAGS += -D__VENDOR_PARTITION_SUPPORT
endif

ifeq ($(strip $(TARGET_COPY_OUT_PRODUCT)),product)
  __CFLAGS += -D__PRODUCT_PARTITION_SUPPORT
endif

ifeq ($(strip $(MTK_LOADER_BACKUP)),yes)
  __CFLAGS += -D__MTK_LOADER_BACKUP
endif

ifeq ($(strip $(MTK_DTBO_FEATURE)),yes)
  __CFLAGS += -D__MTK_DTBO_FEATURE
endif
ifeq ($(strip $(MTK_AB_OTA_UPDATER)),yes)
  __CFLAGS += -D__MTK_AB_OTA_UPDATER
endif

ifeq ($(strip $(TARGET_COPY_OUT_ODM)),odm)
  __CFLAGS += -D__ODM_PARTITION_SUPPORT
endif

ifeq ($(TARGET_BUILD_VARIANT),user)
  __CFLAGS += -D__TARGET_ENABLE_QUOTA
endif
ifeq ($(strip $(MTK_ENABLE_GENIEZONE)),yes)
  __CFLAGS += -D__MTK_ENABLE_GENIEZONE
endif

ifeq ($(strip $(TARGET_USERIMAGES_USE_F2FS)),true)
  __CFLAGS += -D__USERDATA_USE_F2FS
endif

ifeq ($(strip $(MTK_AUDIODSP_SUPPORT)),yes)
  __CFLAGS += -D__MTK_AUDIODSP_SUPPORT
endif

ifeq ($(strip $(BOARD_AVB_ENABLE)), true)
  __CFLAGS += -D__BOARD_AVB_ENABLE
endif

ifeq ($(strip $(BOARD_BUILD_SYSTEM_ROOT_IMAGE)),true)
  __CFLAGS += -D__SYSTEM_AS_ROOT
endif

ifeq ($(strip $(MTK_RECOVERY_RAMDISK_SPLIT)),yes)
  __CFLAGS += -D__MTK_RECOVERY_RAMDISK_SPLIT
endif

ifeq ($(strip $(PRODUCT_USE_DYNAMIC_PARTITIONS)),true)
  __CFLAGS += -D__DYNAMIC_PARTITION_SUPPORT
endif

ifeq ($(strip $(BOARD_USES_RECOVERY_AS_BOOT)),true)
  __CFLAGS += -D__BOARD_USES_RECOVERY_AS_BOOT
endif

ifeq ($(strip $(BOARD_USES_METADATA_PARTITION)),true)
  __CFLAGS += -D__BOARD_USES_METADATA_PARTITION
endif

ifneq ($(strip $(LINUX_KERNEL_VERSION)), kernel-3.18)
ifneq ($(strip $(BOARD_OTA_FRAMEWORK_VBMETA_VERSION_OVERRIDE)), 0.0)
  __CFLAGS += -D__BOOTDEV_PATH_SUPPORT
endif
endif

ifeq ($(strip $(MAIN_VBMETA_IN_BOOT)),yes)
  __CFLAGS += -D__MAIN_VBMETA_IN_BOOT
endif

$(VENDOR_FSTAB): __CFLAGS := $(__CFLAGS)
$(VENDOR_FSTAB): CLANG_PATH := $(TOP)/${LLVM_PREBUILTS_PATH}/clang
$(VENDOR_FSTAB): $(LOCAL_PATH)/$(FSTAB_PLATFORM)/fstab.in.$(FSTAB_PLATFORM)
	@echo "Generate fstab"
	@echo "MTK_NAND_MTK_FTL_SUPPORT $(MTK_NAND_MTK_FTL_SUPPORT)"
	@echo "MTK_PERSIST_PARTITION_SUPPORT $(MTK_PERSIST_PARTITION_SUPPORT)"
	@echo "MTK_CIP_SUPPORT $(MTK_CIP_SUPPORT)"
	@echo "MTK_PRIVACY_PROTECTION_LOCK $(MTK_PRIVACY_PROTECTION_LOCK)"
	@echo "MTK_NVCONFIG_PARTITION_SUPPORT $(MTK_NVCONFIG_PARTITION_SUPPORT)"
	@echo "MTK_ICUSB_SUPPORT $(MTK_ICUSB_SUPPORT)"
	@echo "MTK_MULTI_PARTITION_MOUNT_ONLY_SUPPORT $(MTK_MULTI_PARTITION_MOUNT_ONLY_SUPPORT)"
	@echo "MTK_FACTORY_RESET_PROTECTION_SUPPORT $(MTK_FACTORY_RESET_PROTECTION_SUPPORT)"
	@echo "MTK_ATF_SUPPORT $(MTK_ATF_SUPPORT)"
	@echo "MTK_TEE_SUPPORT $(MTK_TEE_SUPPORT)"
	@echo "MTK_IN_HOUSE_TEE_SUPPORT $(MTK_IN_HOUSE_TEE_SUPPORT)"
	@echo "MTK_DRM_KEY_MNG_SUPPORT $(MTK_DRM_KEY_MNG_SUPPORT)"
	@echo "MTK_TC1_FEATURE $(MTK_TC1_FEATURE)"
	@echo "MTK_GOOGLE_TRUSTY_SUPPORT $(MTK_GOOGLE_TRUSTY_SUPPORT)"
	@echo "MTK_EMMC_SUPPORT $(MTK_EMMC_SUPPORT)"
	@echo "MTK_UFS_SUPPORT $(MTK_UFS_SUPPORT)"
	@echo "MTK_TINYSYS_SCP_SUPPORT $(MTK_TINYSYS_SCP_SUPPORT)"
	@echo "MTK_EFUSE_WRITER_SUPPORT $(MTK_EFUSE_WRITER_SUPPORT)"
	@echo "PRODUCT_SUPPORTS_VERITY $(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_SUPPORTS_VERITY)"
	@echo "BOARD_SYSTEMIMAGE_FILE_SYSTEM_TYPE $(BOARD_SYSTEMIMAGE_FILE_SYSTEM_TYPE)"
	@echo "MTK_FDE_NO_FORCE $(MTK_FDE_NO_FORCE)"
	@echo "MTK_FDE_TYPE_FILE $(MTK_FDE_TYPE_FILE)"
	@echo "CUSTOM_CONFIG_MAX_DRAM_SIZE $(CUSTOM_CONFIG_MAX_DRAM_SIZE)"
	@echo "MTK_TINYSYS_SSPM_SUPPORT $(MTK_TINYSYS_SSPM_SUPPORT)"
	@echo "MTK_VPU_SUPPORT $(MTK_VPU_SUPPORT)"
	@echo "SPM_FW_USE_PARTITION $(SPM_FW_USE_PARTITION)"
	@echo "MCUPM_FW_USE_PARTITION $(MCUPM_FW_USE_PARTITION)"
	@echo "MTK_ENABLE_GENIEZONE $(MTK_ENABLE_GENIEZONE)"
	@echo "TARGET_COPY_OUT_VENDOR $(TARGET_COPY_OUT_VENDOR)"
	@echo "TARGET_COPY_OUT_PRODUCT $(TARGET_COPY_OUT_PRODUCT)"
	@echo "MTK_DTBO_FEATURE $(MTK_DTBO_FEATURE)"
	@echo "MTK_AB_OTA_UPDATER $(MTK_AB_OTA_UPDATER)"
	@echo "TARGET_COPY_OUT_ODM $(TARGET_COPY_OUT_ODM)"
	@echo "TARGET_USERIMAGES_USE_F2FS $(TARGET_USERIMAGES_USE_F2FS)"
	@echo "MTK_AUDIODSP_SUPPORT $(MTK_AUDIODSP_SUPPORT)"
	@echo "BOARD_AVB_ENABLE $(BOARD_AVB_ENABLE)"
	@echo "BOARD_BUILD_SYSTEM_ROOT_IMAGE $(BOARD_BUILD_SYSTEM_ROOT_IMAGE)"
	@echo "MTK_RECOVERY_RAMDISK_SPLIT $(MTK_RECOVERY_RAMDISK_SPLIT)"
	@echo "PRODUCT_USE_DYNAMIC_PARTITIONS $(PRODUCT_USE_DYNAMIC_PARTITIONS)"
	@echo "BOARD_USES_RECOVERY_AS_BOOT $(BOARD_USES_RECOVERY_AS_BOOT)"
	@echo "BOARD_USES_METADATA_PARTITION $(BOARD_USES_METADATA_PARTITION)"
	@echo "MAIN_VBMETA_IN_BOOT $(MAIN_VBMETA_IN_BOOT)"
	@mkdir -p $(dir $@)
	@$(CLANG_PATH) $(__CFLAGS) -x c -E $< -o $@

endif # ifneq ($(MTK_EMULATOR_SUPPORT), yes)
