/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.mediatek.hardware.radio@3.10;

import @3.9::IRadio;

/**
 * This interface is used by telephony & telecom to talk to cellular radio.
 * All the functions have minimum one parameter:
 * serial: which corresponds to serial no. of request. Serial numbers must only be memorized for the
 * duration of a method call. If clients provide colliding serials (including passing the same
 * serial to different methods), multiple responses (one for each method call) must still be served.
 */
interface IRadio extends @3.9::IRadio {

    /**
     * Proprietary incoming call handling.
     * RIL Request: "RIL_REQUEST_SET_CALL_INDICATION_WITH_CAUSE"
     *
     * @param serial Serial number of request.
     * @param mode allow/disallow for the call
     * @param callId id of the call
     * @param seqNumber sequence number of the call
     * @param cause reason to set the mode
     *
     * Response function is IRadioResponse.setCallIndicationResponse()
     */
    oneway setCallIndicationWithCause(int32_t serial, int32_t mode, int32_t callId,
            int32_t seqNumber, int32_t cause);

    /**
     * Hang up a specific line (like AT+CHLD=1x)
     * After this HANGUP request returns, Radio must show the connection is NOT
     * active anymore in next requestGetCurrentCalls query.
     *
     * @param serial Serial number of request.
     * @param gsmIndex Connection index (value of 'x' in CHLD above)
     * @param cause the hangup with specified cause to RIL
     *
     * Response function is IRadioResponse.hangupResponse()
     *
     */
    oneway hangupWithCause(int32_t serial, int32_t gsmIndex, int32_t cause);

};
