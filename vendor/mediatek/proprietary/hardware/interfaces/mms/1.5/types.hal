/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.mediatek.hardware.mms@1.5;
import @1.0::types;
import @1.1::types;
import @1.2::types;
import @1.3::types;
import @1.4::types;

/**
 * Enum of MMS_ORIENTATION_ENUM
 * Alternative representation of rotation and mirror
 */

enum MMS_ORIENTATION_ENUM : uint32_t {
    MMS_ROT_0   = 0x00000000,
    MMS_FLIP_H  = 0x00000001,
    MMS_FLIP_V  = 0x00000002,
    MMS_ROT_90  = 0x00000004,
    MMS_ROT_180 = MMS_FLIP_H | MMS_FLIP_V,
    MMS_ROT_270 = MMS_ROT_180 | MMS_ROT_90,
};

struct HwMDPParamAUX {
    /* src width */
    int32_t src_width;

    /* src height */
    int32_t src_height;

    /* src yPitch */
    int32_t src_yPitch;

    /* src uvPitch */
    int32_t src_uvPitch;

    /* src format */
    int32_t src_format;

    /* src format compression */
    int32_t src_compressed;

    /* src color profile */
    MMS_PROFILE_ENUM src_profile;

    /* src InterlaceFormat */
    int32_t src_field;

    /* src crop */
    DpRect src_rect;

    /* src VA list */
    uint64_t[3] src_VAList;

    /* src MVA list */
    uint32_t[3] src_MVAList;

    /* handle to the input image */
    handle inputHandle;

    /* src size list*/
    uint32_t[3] src_sizeList;

    /* src plane number*/
    int32_t src_planeNumber;

    /* dst width */
    int32_t dst_width;

    /* dst height */
    int32_t dst_height;

    /* dst yPitch */
    int32_t dst_yPitch;

    /* dst uvPitch */
    int32_t dst_uvPitch;

    /* dst format */
    int32_t dst_format;

    /* dst format compression */
    int32_t dst_compressed;

    /* dst color profile */
    MMS_PROFILE_ENUM dst_profile;

    /* dst InterlaceFormat */
    int32_t dst_field;

    /* dst roi */
    DpRect dst_rect;

    /* dst VA list */
    uint64_t[3] dst_VAList;

    /* dst MVA list */
    uint32_t[3] dst_MVAList;

    /* handle to the output image */
    handle outputHandle;

    /* dst size list */
    uint32_t[3] dst_sizeList;

    /* dst plane number */
    int32_t dst_planeNumber;

    /* pid for session key */
    uint32_t pid;

    /* user_id for session key */
    uint32_t user_id;

    /* n x 90 rotation degree */
    int32_t rotation;

    /* mirror mode*/
    int32_t flip;

    /* transform orientation */
    uint32_t transform;

    /* pq param */
    DpPqParam pq_param;

    /* expected completed time */
    struct timeval_t {
        int64_t sec;
        int64_t usec;
    } end_time;
};
