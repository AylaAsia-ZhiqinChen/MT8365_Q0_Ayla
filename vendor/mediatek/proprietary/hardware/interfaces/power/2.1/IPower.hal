/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package vendor.mediatek.hardware.power@2.1;
import android.hardware.power@1.2::types;
import android.hardware.power@1.2::IPower;
import vendor.mediatek.hardware.power@2.0;
import vendor.mediatek.hardware.power@2.1::types;

interface IPower extends vendor.mediatek.hardware.power@2.0::IPower {
    typedef vendor.mediatek.hardware.power@2.0::MtkActState MtkActState;

    /**
     * notifyAppState() is called to pass information of foreground application
     * It should called by AMS. MTK power service could use these info to
     * implement some power/performance enhancement
     *
     * @param packName Package name of foreground app
     * @param actName  Activity name of foreground
     * @param pid      pid of foreground app
     * @param state    Activity state
     * @param uid      uid of foreground app
     */
    oneway notifyAppState_2_1(string packName, string actName, int32_t pid, MtkActState state, int32_t uid);

    /**
     * Following functions provide mechanism for user program to control
     * power/performance parameters themshelves. It is used to substitute for
     * MTK PerfService. Please refer to following flow
     *
     * example:
     *     handle = scnReg();
     *     scnConfig(handle, CMD_SET_CLUSTER_CPU_CORE_MIN, 0, 2, -1, -1); // cluster 0: 2 core
     *     scnEnable(handle, 1000);  // enable for 1000ms
     *     scnDisable*handle);
     */
    oneway scnConfig_2_1(int32_t hdl, MtkPowerCmd cmd, int32_t param1, int32_t param2, int32_t param3, int32_t param4);

    /**
     * setSysInfo() is called to set system information(string type)
     *
     * @param type  SysInfo command
     * @param data  Input string data of command
     */
    oneway setSysInfo(int32_t type, string data);
};
