/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.mediatek.hardware.camera.device@1.1;

import android.hardware.camera.device@1.0::types;

typedef vec<uint8_t> CameraMetadata;

/*
 * Extend notify message type used in notifyCallback functions
 */
enum MtkNotifyCallbackMsg : NotifyCallbackMsg {
    MTK_CAMERA_MSG_EXT_NOTIFY       = 0x40000000
};

/*
 * Extend notify messages related to MTK_CAMERA_MSG_EXT_NOTIFY used in
 * notifyCallback function
 */
enum MtkNotifyCallbackMsgExt : uint32_t {
    //  Smile Detection
    MTK_CAMERA_MSG_EXT_NOTIFY_SMILE_DETECT      = 0x00000001,

    //  Auto Scene Detection
    MTK_CAMERA_MSG_EXT_NOTIFY_ASD               = 0x00000002,

    //  Multi Angle View
    MTK_CAMERA_MSG_EXT_NOTIFY_MAV               = 0x00000003,

    // Burst Shutter Callback
    //  ext2: count-down shutter number; 0: the last one shutter.
    MTK_CAMERA_MSG_EXT_NOTIFY_BURST_SHUTTER     = 0x00000004,

    // Continuous Shutter Callback
    //  ext2: current continuous shutter number.
    MTK_CAMERA_MSG_EXT_NOTIFY_CONTINUOUS_SHUTTER= 0x00000005,

    // Continuous EndCallback
    MTK_CAMERA_MSG_EXT_NOTIFY_CONTINUOUS_END    = 0x00000006,

    // ZSD preview done
    MTK_CAMERA_MSG_EXT_NOTIFY_ZSD_PREVIEW_DONE  = 0x00000007,

    // Capture done (disable CAMERA_MSG_SHUTTER / CAMERA_MSG_COMPRESSED_IMAGE)
    MTK_CAMERA_MSG_EXT_NOTIFY_CAPTURE_DONE      = 0x00000010,

    // Shutter Callback (not disable CAMERA_MSG_SHUTTER)
    //  ext2: 1: CameraService will play shutter sound.
    MTK_CAMERA_MSG_EXT_NOTIFY_SHUTTER           = 0x00000011,

    // for EM preview raw dump error notify
    MTK_CAMERA_MSG_EXT_NOTIFY_RAW_DUMP_STOPPED  = 0x00000012,

    // Gesture Detection
    MTK_CAMERA_MSG_EXT_NOTIFY_GESTURE_DETECT    = 0x00000013,

    // Stereo Feature: warning message
    MTK_CAMERA_MSG_EXT_NOTIFY_STEREO_WARNING    = 0x00000014,

    // Stereo Feature: distance value
    MTK_CAMERA_MSG_EXT_NOTIFY_STEREO_DISTANCE   = 0x00000015,

    // Result & Static metadata
    MTK_CAMERA_MSG_EXT_NOTIFY_METADATA_DONE     = 0x00000016,

    // ZSD capture early callback
    MTK_CAMERA_MSG_EXT_NOTIFY_P2DONE            = 0x00000017,
};

/*
 * Extend data messages type used in dataCallback functions
 */
enum MtkDataCallbackMsg : DataCallbackMsg {
    MTK_CAMERA_MSG_EXT_DATA         = 0x20000000
};

/*
 * Extend data messages related to MTK_CAMERA_MSG_EXT_DATA used in dataCallback function
 * extend data header is located at the top of dataPrt in dataCallback functions
 *  DATA: Header + Params
 */
enum MtkDataCallbackMsgExt : uint32_t {

    // Auto Panorama
    //  Params:
    //      int[0]: 0:mAUTORAMAMVCallback, 1:mAUTORAMACallback
    //      int[1~]:depends on
    //
    MTK_CAMERA_MSG_EXT_DATA_AUTORAMA            = 0x00000001,

    // AF Window Results
    MTK_CAMERA_MSG_EXT_DATA_AF                  = 0x00000002,

    // Burst Shot (EV Shot)
    //      int[0]: the total shut count.
    //      int[1]: count-down shut number; 0: the last one shut.
    MTK_CAMERA_MSG_EXT_DATA_BURST_SHOT          = 0x00000003,

    //    Continuous Shot
    //        int[0]: current continuous shut number.
    MTK_CAMERA_MSG_EXT_DATA_CONTINUOUS_SHOT     = 0x00000004,


    MTK_CAMERA_MSG_EXT_DATA_OT                  = 0x00000005,

    //  Facebeauty Shot
    //      int[0]: data type. 0:original image.
    MTK_CAMERA_MSG_EXT_DATA_FACEBEAUTY          = 0x00000006,

    //  MAV Shot
    //      int[0]: data type. 0:original image.
    MTK_CAMERA_MSG_EXT_DATA_MAV                 = 0x00000007,

    //  HDR Shot
    //      int[0]: data type. 0:0EV image.
    MTK_CAMERA_MSG_EXT_DATA_HDR                 = 0x00000008,

    // Motion Track
    //  Params:
    //      int[0]: 0: frame EIS, 1: captured image, 2: blended image, 3: intermediate data
    //      int[1~]:depends on
    //
    MTK_CAMERA_MSG_EXT_DATA_MOTIONTRACK         = 0x00000009,

    //  Compressed Image (not disable CAMERA_MSG_COMPRESSED_IMAGE)
    //      int[0]: current shut index; 0: the first one shut.
    MTK_CAMERA_MSG_EXT_DATA_COMPRESSED_IMAGE    = 0x00000010,

    //  Stereo Shot
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_JPS                 = 0x00000011,

    //  Stereo Debug Data
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_STEREO_DBG          = 0x00000012,

    // raw16
    MTK_CAMERA_MSG_EXT_DATA_RAW16               = 0x00000013,

    // Stereo Shot
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_DEPTHMAP            = 0x00000014,

    // Stereo Shot
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_STEREO_CLEAR_IMAGE  = 0x00000015,

    // LDC image
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_STEREO_LDC          = 0x00000016,

    // MAIN1 YUV image
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_STEREO_MAIN1_YUV    = 0x00000017,

    // MAIN2 YUV image
    //      int[0]: data type.
    MTK_CAMERA_MSG_EXT_DATA_STEREO_MAIN2_YUV    = 0x00000018,
};

/*
 * Extend metadata message type used in MtkCallback functions
 */
enum MtkMetadataCallbackMsg : uint32_t {
    // static & result metadata for raw16
    MTK_CAMERA_MSG_EXT_METADATA_RAW16            = 0x00000001,

    // static & result metadata for 3rd party
    MTK_CAMERA_MSG_EXT_METADATA_3RDPARTY         = 0x00000002
};

enum MtkCmdMsg : CommandType {
    CAMERA_CMD_MTK_DEFINE_START     = 0x10000000,
    CAMERA_CMD_DO_PANORAMA,
    CAMERA_CMD_CANCEL_PANORAMA,
    CAMERA_CMD_START_SD_PREVIEW,            //(Smile Detection)
    CAMERA_CMD_CANCEL_SD_PREVIEW,           //(Smile Detection)
    CAMERA_CMD_START_OT,
    CAMERA_CMD_STOP_OT,
    CAMERA_CMD_START_MAV,
    CAMERA_CMD_STOP_MAV,
    CAMERA_CMD_START_AUTORAMA,
    CAMERA_CMD_STOP_AUTORAMA,
    CAMERA_CMD_GET_MEM_INFO,                //For Video to get PMEM buffer info
    CAMERA_CMD_GET_REC_BUF_INFO,
    CAMERA_CMD_CANCEL_CSHOT,
    CAMERA_CMD_SET_CSHOT_SPEED,
    CAMERA_CMD_START_3DSHOT,
    CAMERA_CMD_STOP_3DSHOT,
    CAMERA_CMD_START_MOTIONTRACK,
    CAMERA_CMD_STOP_MOTIONTRACK,
    CAMERA_CMD_START_CLONECAMERA,
    CAMERA_CMD_SHOT_CLONECAMERA,
    CAMERA_CMD_STOP_CLONECAMERA,
    CAMERA_CMD_START_GD_PREVIEW,            //(Gesture Detection)
    CAMERA_CMD_CANCEL_GD_PREVIEW,           //(Gesture Detection)

    // For SDK Heartrate
    CAMERA_CMD_START_HR_PREVIEW,            //(Heartrate Detection)
    CAMERA_CMD_STOP_HR_PREVIEW,             //(Heartrate Detection)
    CAMERA_CMD_SETCB_HR_PREVIEW,            //(Heartrate Detection)
    CAMERA_CMD_SETUSER_HR_PREVIEW,          //(Heartrate Detection)
    CAMERA_CMD_SETMODE_HR_PREVIEW,          //(Heartrate Detection)
    CAMERA_CMD_CHECKPARA_HR_PREVIEW,        //(Heartrate Detection)

    // For Main face informatin
    CAMERA_CMD_SET_MAIN_FACE_COORDINATE,
    CAMERA_CMD_CANCEL_MAIN_FACE,
    //
    CAMERA_CMD_ENABLE_RAW16_CALLBACK
};
