/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2010. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek Software")
 * have been modified by MediaTek Inc. All revisions are subject to any receiver's
 * applicable license agreements with MediaTek Inc.
 */

/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/
#ifndef _IDX_CACHE_H_
#define _IDX_CACHE_H_

#include <aaa_types.h>
#include <isp_tuning_cam_info.h>
#include <tuning_mapping/cam_idx_struct_ext.h>

using namespace NSIspTuning;

namespace NSIspTuning
{

typedef enum
{
    IDXCACHE_STAGE_P1,
    IDXCACHE_STAGE_P2,
    IDXCACHE_STAGE_NUM
} IDXCACHE_STAGE;

typedef enum
{
    IDXCACHE_QRYMODE_NORMAL,
    IDXCACHE_QRYMODE_FORCE,
    IDXCACHE_QRYMODE_NUM
} IDXCACHE_QRYMODE;

typedef enum
{
    IDXCACHE_VALTYPE_CURRENT,
    IDXCACHE_VALTYPE_LOWERISO,
    IDXCACHE_VALTYPE_UPPERISO,
    IDXCACHE_VALTYPE_LOWERLV,
    IDXCACHE_VALTYPE_UPPERLV,
    IDXCACHE_VALTYPE_LOWERLV_LOWERCT,
    IDXCACHE_VALTYPE_LOWERLV_UPPERCT,
    IDXCACHE_VALTYPE_UPPERLV_LOWERCT,
    IDXCACHE_VALTYPE_UPPERLV_UPPERCT,
    IDXCACHE_VALTYPE_NUM
} IDXCACHE_VALTYPE;

typedef union
{
    MUINT16 val[4];
    struct
    {
        MUINT16 u2Val0;
        MUINT16 u2Val1;
        MUINT16 u2Val2;
        MUINT16 u2Val3;
    };
} IDXCACHE_VAL_T;

class IdxCache
{
public:
    IdxCache(MUINT32);

    MVOID setEnable(MBOOL bEnable);
    MVOID updateKey(CAM_IDX_QRY_COMB& sQry, IDXCACHE_STAGE eStage);
    MUINT16 query(EModule_T eMod, IDXCACHE_STAGE eStage, IDXCACHE_VALTYPE eType, CAM_IDX_QRY_COMB& sQry, IDXCACHE_QRYMODE eMode = IDXCACHE_QRYMODE_NORMAL);
    MBOOL isSameKey(IDXCACHE_STAGE eStage);

    MUINT16 getCacheValue(EModule_T eMod, IDXCACHE_STAGE eStage, IDXCACHE_VALTYPE eType) const;
    MUINT16 getSceneIdx(IDXCACHE_STAGE eStage) const;
    MUINT16 getIsoGroupValue(EModule_T eMod, IDXCACHE_STAGE eStage, IDXCACHE_VALTYPE eType) const;
    MVOID setLogEnable();
private:

    CAM_IDX_QRY_COMB    m_key[IDXCACHE_STAGE_NUM];
    MBOOL               m_cacheSameKey[IDXCACHE_STAGE_NUM];
    MUINT8              m_cacheValid[IDXCACHE_STAGE_NUM][EModule_NUM];
    IDXCACHE_VAL_T      m_cacheVal[IDXCACHE_STAGE_NUM][EModule_NUM];
    IDXCACHE_VAL_T      m_cacheIsoGroup[IDXCACHE_STAGE_NUM][EModule_NUM];
    MUINT16             m_scnIdx[IDXCACHE_STAGE_NUM];
    MBOOL               m_bEnabled;
    MBOOL               m_bLogEnable;
    MBOOL               m_bDumpLogEnable;
    MUINT32        m_eSensorDev;
    char                (*m_pScenarios)[][64];
    MUINT16             m_scenarioNs;

    static MUINT8       s_idxReMapping[IDXCACHE_VALTYPE_NUM];
};

};  //  NSIspTuning
#endif // _IDX_CACHE_H_

