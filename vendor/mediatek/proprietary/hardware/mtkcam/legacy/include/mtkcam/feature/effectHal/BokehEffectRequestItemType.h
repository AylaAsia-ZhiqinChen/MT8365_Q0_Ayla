/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */
#ifndef _MTK_CAMERA_INCLUDE_BOKEH_EFFECT_REQUEST_ITEM_TYPE_H
#define _MTK_CAMERA_INCLUDE_BOKEH_EFFECT_REQUEST_ITEM_TYPE_H

#define BOKEH_EFFECT_REQUEST_ERROR_MSG "BOKEH_EFFECT_HAL_ERROR_MSG"
// used by bokehNode
#define BOKEH_PIPELINE_NODE_USERDATA "userData"
// used by BokehEffectHal
#define BOKEH_EFFECT_HAL_PREVIEW_INPUT_BUF_COUNT 0
#define BOKEH_EFFECT_HAL_PREVIEW_OUTPUT_BUF_COUNT 0
#define BOKEH_EFFECT_HAL_CAPTURE_INPUT_BUF_COUNT 0
#define BOKEH_EFFECT_HAL_CAPTURE_OUTPUT_BUF_COUNT 0
#define BOKEH_EFFECT_HAL_RECORD_INPUT_BUF_COUNT 0
#define BOKEH_EFFECT_HAL_RECORD_OUTPUT_BUF_COUNT 0
// used by GuidedFilterNode
#define GF_PIPELINE_FRAME_DMG_BUFFER_SIZE 2
#define GF_PIPELINE_FRAME_DMBG_BUFFER_SIZE 2
#define GF_PIPELINE_FRAME_MYS_WIDTH 240
#define GF_PIPELINE_FRAME_MYS_HEIGHT 135
#define GF_PIPELINE_FRAME_DMW_WIDTH 240
#define GF_PIPELINE_FRAME_DMW_HEIGHT 135
#define GF_PIPELINE_FRAME_DMG_WIDTH 240
#define GF_PIPELINE_FRAME_DMG_HEIGHT 135
#define GF_PIPELINE_FRAME_DMBG_WIDTH 240
#define GF_PIPELINE_FRAME_DMBG_HEIGHT 135
// used by P2B
#define BOKEH_PIPELINE_FRAME_SCENARIO_ID "BOKEH_SCENARIO_ID"
#define BOKEH_PIPELINE_FRAME_3DNR_BUFFER_SIZE 2
#define BOKEH_PIPELINE_FRAME_3DNR_FLAG "NR3D_FLAG"
#define BOKEH_PIPELINE_FRAME_3DNR_WIDTH 1920
#define BOKEH_PIPELINE_FRAME_3DNR_HEIGHT 1080
#define BOKEH_PIPELINE_FRAME_GMV_X "BOKEH_GMV_X"
#define BOKEH_PIPELINE_FRAME_GMV_Y "BOKEH_GMV_Y"
#define BOKEH_PIPELINE_FRAME_CMV_X "BOKEH_CMV_X"
#define BOKEH_PIPELINE_FRAME_CMV_Y "BOKEH_CMV_Y"
#define BOKEH_PIPELINE_FRAME_ISO "BOKEH_ISO"
// -----------------------------------------------------------
typedef enum BokehEffectRequestBufferType
{
    BOKEH_ER_BUF_NONE = 0,
    // The tag of Bokeh input buffer.
    BOKEH_ER_BUF_MYS,
    BOKEH_ER_BUF_DMW,
    BOKEH_ER_BUF_MAIN1,
    BOKEH_ER_BUF_DMG,
    BOKEH_ER_BUF_DMBG,
    BOKEH_ER_BUF_3DNR_INPUT,
    // The tag of Bokeh output buffer.
    BOKEH_ER_BUF_3DNR_OUTPUT,
    BOKEH_ER_BUF_VSDOF_IMG,
    BOKEH_ER_BUF_CLEAN_IMG,
    BOKEH_ER_BUF_RECORD,
    BOKEH_ER_BUF_DISPLAY,
}BokehEffectRequestBufferType;
typedef enum BokehEffectRequestScenarioType
{
    BOKEH_ER_SCENARIO_NONE = 0,
    BOKEH_ER_SCENARIO_PREVIEW,
    BOKEH_ER_SCENARIO_CAPTURE,
    BOKEH_ER_SCENARIO_RECAORD,
}BokehEffectRequestScenarioType;

enum BokehDataID {
    ID_INVALID,
    ID_ROOT_ENQUE,
    GF_BOKEH_REQUEST,
    P2B_OUT,
    GF_ERROR,
    P2B_ERROR,
    GF_BOKEH_DMG,
    GF_BOKEH_DMBG,
};

enum BOKEH_ERROR_MESSAGE
{
    PROCESS_SUCCESS,
    
    GF_ALGO_BUF_MYS_NULL,
    GF_ALGO_BUF_DMW_NULL,
    GF_ALGO_BUF_MYS_NOT_EXIST,
    GF_ALGO_BUF_DMW_NOT_EXIST,
    GF_ALGO_BUF_MYS_FORMAT_INVALID, // 5
    
    GF_ALGO_BUF_DMW_FORMAT_INVALID,
    GF_ALGO_BUF_MYS_SIZE_INVALID,
    GF_ALGO_BUF_DMW_SIZE_INVALID,
    P2B_BUF_MAIN_IMG_NOT_EXIST,
    P2B_BUF_DISPLAY_IMG_NOT_EXIST, // 10
    
    P2B_BUF_RECORD_IMG_NOT_EXIST,
    P2B_BUF_VSDOF_IMG_NOT_EXIST,
    P2B_BUF_MAIN_IMG_SET_PORT_FAILED,
};
#endif //_MTK_CAMERA_INCLUDE_DEPTHMAP_FEATURE_PIPE_P2AFM_NODE_H