  ptr->writeReg(0x0d50, 0xf, CAM_B);            //CAM.CAM_B.ADBS.CTL
  ptr->writeReg(0x0d54, 0x0, CAM_B);            //CAM.CAM_B.ADBS.GRAY_BLD_0
  ptr->writeReg(0x0d58, 0x10d, CAM_B);          //CAM.CAM_B.ADBS.GRAY_BLD_1
  ptr->writeReg(0x0d5c, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_R0
  ptr->writeReg(0x0d60, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_R1
  ptr->writeReg(0x0d64, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_R2
  ptr->writeReg(0x0d68, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_R3
  ptr->writeReg(0x0d6c, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_G0
  ptr->writeReg(0x0d70, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_G1
  ptr->writeReg(0x0d74, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_G2
  ptr->writeReg(0x0d78, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_G3
  ptr->writeReg(0x0d7c, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_B0
  ptr->writeReg(0x0d80, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_B1
  ptr->writeReg(0x0d84, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_B2
  ptr->writeReg(0x0d88, 0x0, CAM_B);            //CAM.CAM_B.ADBS.BIAS_LUT_B3
  ptr->writeReg(0x0d8c, 0x2000200, CAM_B);      //CAM.CAM_B.ADBS.GAIN_0
  ptr->writeReg(0x0d90, 0x200, CAM_B);          //CAM.CAM_B.ADBS.GAIN_1
  ptr->writeReg(0x0d94, 0x2000200, CAM_B);      //CAM.CAM_B.ADBS.IVGN_0
  ptr->writeReg(0x0d98, 0x200, CAM_B);          //CAM.CAM_B.ADBS.IVGN_1
  ptr->writeReg(0x0d9c, 0xffa04008, CAM_B);     //CAM.CAM_B.ADBS.HDR
  ptr->writeReg(0x0da0, 0x0, CAM_B);            //CAM.CAM_B.ADBS.CMDL_ONLY_1
  ptr->writeReg(0x0900, 0x2000200, CAM_B);      //CAM.CAM_B.AE.GAIN2_0
  ptr->writeReg(0x0904, 0x200, CAM_B);          //CAM.CAM_B.AE.GAIN2_1
  ptr->writeReg(0x0908, 0xfff0fff, CAM_B);      //CAM.CAM_B.AE.LMT2_0
  ptr->writeReg(0x090c, 0xfff, CAM_B);          //CAM.CAM_B.AE.LMT2_1
  ptr->writeReg(0x0910, 0x200, CAM_B);          //CAM.CAM_B.AE.RC_CNV_0
  ptr->writeReg(0x0914, 0x0, CAM_B);            //CAM.CAM_B.AE.RC_CNV_1
  ptr->writeReg(0x0918, 0x200, CAM_B);          //CAM.CAM_B.AE.RC_CNV_2
  ptr->writeReg(0x091c, 0x0, CAM_B);            //CAM.CAM_B.AE.RC_CNV_3
  ptr->writeReg(0x0920, 0x90200, CAM_B);        //CAM.CAM_B.AE.RC_CNV_4
  ptr->writeReg(0x0924, 0x0, CAM_B);            //CAM.CAM_B.AE.YGAMMA_0
  ptr->writeReg(0x0928, 0x0, CAM_B);            //CAM.CAM_B.AE.YGAMMA_1
  ptr->writeReg(0x092c, 0x0, CAM_B);            //CAM.CAM_B.AE.OVER_EXPO_CFG
  ptr->writeReg(0x0930, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST_CTL
  ptr->writeReg(0x0934, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST_SET
  ptr->writeReg(0x0938, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST_SET_1
  ptr->writeReg(0x093c, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST0_YRNG
  ptr->writeReg(0x0940, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST0_XRNG
  ptr->writeReg(0x0944, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST1_YRNG
  ptr->writeReg(0x0948, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST1_XRNG
  ptr->writeReg(0x094c, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST2_YRNG
  ptr->writeReg(0x0950, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST2_XRNG
  ptr->writeReg(0x0954, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST3_YRNG
  ptr->writeReg(0x0958, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST3_XRNG
  ptr->writeReg(0x095c, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST4_YRNG
  ptr->writeReg(0x0960, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST4_XRNG
  ptr->writeReg(0x0964, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST5_YRNG
  ptr->writeReg(0x0968, 0x0, CAM_B);            //CAM.CAM_B.AE.PIX_HST5_XRNG
  ptr->writeReg(0x096c, 0x0, CAM_B);            //CAM.CAM_B.AE.STAT_EN
  ptr->writeReg(0x0970, 0x295, CAM_B);          //CAM.CAM_B.AE.YCOEF
  ptr->writeReg(0x0974, 0x50, CAM_B);           //CAM.CAM_B.AE.CCU_HST_END_Y
  ptr->writeReg(0x0978, 0x0, CAM_B);            //CAM.CAM_B.AE.SPARE
  ptr->writeReg(0x0610, 0x200000, CAM_B);       //CAM.CAM_B.AF.CON
  ptr->writeReg(0x0614, 0x0, CAM_B);            //CAM.CAM_B.AF.TH_0
  ptr->writeReg(0x0618, 0xffffff00, CAM_B);     //CAM.CAM_B.AF.TH_1
  ptr->writeReg(0x061c, 0xc0b0a17, CAM_B);      //CAM.CAM_B.AF.FLT_1
  ptr->writeReg(0x0620, 0xb0c0d0d, CAM_B);      //CAM.CAM_B.AF.FLT_2
  ptr->writeReg(0x0624, 0x2040709, CAM_B);      //CAM.CAM_B.AF.FLT_3
  ptr->writeReg(0x0628, 0xc0b0a17, CAM_B);      //CAM.CAM_B.AF.FLT_4
  ptr->writeReg(0x062c, 0xb0c0d0d, CAM_B);      //CAM.CAM_B.AF.FLT_5
  ptr->writeReg(0x0630, 0x2040709, CAM_B);      //CAM.CAM_B.AF.FLT_6
  ptr->writeReg(0x0634, 0x1000100, CAM_B);      //CAM.CAM_B.AF.FLT_7
  ptr->writeReg(0x0638, 0x1000100, CAM_B);      //CAM.CAM_B.AF.FLT_8
  ptr->writeReg(0x0640, 0x0, CAM_B);            //CAM.CAM_B.AF.SIZE
  ptr->writeReg(0x0644, 0x0, CAM_B);            //CAM.CAM_B.AF.VLD
  ptr->writeReg(0x0648, 0x320032, CAM_B);       //CAM.CAM_B.AF.BLK_0
  ptr->writeReg(0x064c, 0x200020, CAM_B);       //CAM.CAM_B.AF.BLK_1
  ptr->writeReg(0x0650, 0xffffffff, CAM_B);     //CAM.CAM_B.AF.TH_2
  ptr->writeReg(0x0654, 0x1000100, CAM_B);      //CAM.CAM_B.AF.FLT_9
  ptr->writeReg(0x0658, 0x7000700, CAM_B);      //CAM.CAM_B.AF.FLT_10
  ptr->writeReg(0x065c, 0x7000700, CAM_B);      //CAM.CAM_B.AF.FLT_11
  ptr->writeReg(0x0660, 0x7000700, CAM_B);      //CAM.CAM_B.AF.FLT_12
  ptr->writeReg(0x0670, 0x100, CAM_B);          //CAM.CAM_B.AF.LUT_H0_0
  ptr->writeReg(0x0674, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H0_1
  ptr->writeReg(0x0678, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H0_2
  ptr->writeReg(0x067c, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H0_3
  ptr->writeReg(0x0680, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H0_4
  ptr->writeReg(0x0690, 0x100, CAM_B);          //CAM.CAM_B.AF.LUT_H1_0
  ptr->writeReg(0x0694, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H1_1
  ptr->writeReg(0x0698, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H1_2
  ptr->writeReg(0x069c, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H1_3
  ptr->writeReg(0x06a0, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_H1_4
  ptr->writeReg(0x06b0, 0x100, CAM_B);          //CAM.CAM_B.AF.LUT_V_0
  ptr->writeReg(0x06b4, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_V_1
  ptr->writeReg(0x06b8, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_V_2
  ptr->writeReg(0x06bc, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_V_3
  ptr->writeReg(0x06c0, 0x0, CAM_B);            //CAM.CAM_B.AF.LUT_V_4
  ptr->writeReg(0x06c4, 0x40, CAM_B);           //CAM.CAM_B.AF.CON2
  ptr->writeReg(0x06c8, 0x100010, CAM_B);       //CAM.CAM_B.AF.BLK_2
  ptr->writeReg(0x0a50, 0xf01b0, CAM_B);        //CAM.CAM_B.AMX.CTL
  ptr->writeReg(0x0a54, 0xb70018, CAM_B);       //CAM.CAM_B.AMX.CROP
  ptr->writeReg(0x0a58, 0xf0, CAM_B);           //CAM.CAM_B.AMX.VSIZE
  ptr->writeReg(0x0870, 0x0, CAM_B);            //CAM.CAM_B.AWB.L0_Y
  ptr->writeReg(0x08b8, 0x0, CAM_B);            //CAM.CAM_B.AWB.L9_Y
  ptr->writeReg(0x08a0, 0x0, CAM_B);            //CAM.CAM_B.AWB.L6_Y
  ptr->writeReg(0x0874, 0x0, CAM_B);            //CAM.CAM_B.AWB.L1_X
  ptr->writeReg(0x0878, 0x0, CAM_B);            //CAM.CAM_B.AWB.L1_Y
  ptr->writeReg(0x08a8, 0x0, CAM_B);            //CAM.CAM_B.AWB.L7_Y
  ptr->writeReg(0x087c, 0x0, CAM_B);            //CAM.CAM_B.AWB.L2_X
  ptr->writeReg(0x0880, 0x0, CAM_B);            //CAM.CAM_B.AWB.L2_Y
  ptr->writeReg(0x08ac, 0x0, CAM_B);            //CAM.CAM_B.AWB.L8_X
  ptr->writeReg(0x0884, 0x0, CAM_B);            //CAM.CAM_B.AWB.L3_X
  ptr->writeReg(0x0888, 0x0, CAM_B);            //CAM.CAM_B.AWB.L3_Y
  ptr->writeReg(0x088c, 0x0, CAM_B);            //CAM.CAM_B.AWB.L4_X
  ptr->writeReg(0x08b0, 0x0, CAM_B);            //CAM.CAM_B.AWB.L8_Y
  ptr->writeReg(0x0890, 0x0, CAM_B);            //CAM.CAM_B.AWB.L4_Y
  ptr->writeReg(0x0894, 0x0, CAM_B);            //CAM.CAM_B.AWB.L5_X
  ptr->writeReg(0x08b4, 0x0, CAM_B);            //CAM.CAM_B.AWB.L9_X
  ptr->writeReg(0x08a4, 0x0, CAM_B);            //CAM.CAM_B.AWB.L7_X
  ptr->writeReg(0x0898, 0x0, CAM_B);            //CAM.CAM_B.AWB.L5_Y
  ptr->writeReg(0x089c, 0x0, CAM_B);            //CAM.CAM_B.AWB.L6_X
  ptr->writeReg(0x0830, 0x0, CAM_B);            //CAM.CAM_B.AWB.WIN_ORG
  ptr->writeReg(0x0834, 0x20004, CAM_B);        //CAM.CAM_B.AWB.WIN_SIZE
  ptr->writeReg(0x0838, 0x20004, CAM_B);        //CAM.CAM_B.AWB.WIN_PIT
  ptr->writeReg(0x083c, 0x10001, CAM_B);        //CAM.CAM_B.AWB.WIN_NUM
  ptr->writeReg(0x0840, 0x2000200, CAM_B);      //CAM.CAM_B.AWB.GAIN1_0
  ptr->writeReg(0x0844, 0x200, CAM_B);          //CAM.CAM_B.AWB.GAIN1_1
  ptr->writeReg(0x0848, 0xfff0fff, CAM_B);      //CAM.CAM_B.AWB.LMT1_0
  ptr->writeReg(0x084c, 0xfff, CAM_B);          //CAM.CAM_B.AWB.LMT1_1
  ptr->writeReg(0x0850, 0x0, CAM_B);            //CAM.CAM_B.AWB.LOW_THR
  ptr->writeReg(0x0854, 0xffffff, CAM_B);       //CAM.CAM_B.AWB.HI_THR
  ptr->writeReg(0x0858, 0x0, CAM_B);            //CAM.CAM_B.AWB.PIXEL_CNT0
  ptr->writeReg(0x085c, 0x0, CAM_B);            //CAM.CAM_B.AWB.PIXEL_CNT1
  ptr->writeReg(0x0860, 0x0, CAM_B);            //CAM.CAM_B.AWB.PIXEL_CNT2
  ptr->writeReg(0x0864, 0x100, CAM_B);          //CAM.CAM_B.AWB.ERR_THR
  ptr->writeReg(0x0868, 0x100, CAM_B);          //CAM.CAM_B.AWB.ROT
  ptr->writeReg(0x086c, 0x0, CAM_B);            //CAM.CAM_B.AWB.L0_X
  ptr->writeReg(0x08bc, 0x0, CAM_B);            //CAM.CAM_B.AWB.SPARE
  ptr->writeReg(0x08c0, 0x0, CAM_B);            //CAM.CAM_B.AWB.MOTION_THR
  ptr->writeReg(0x08c4, 0x200, CAM_B);          //CAM.CAM_B.AWB.RC_CNV_0
  ptr->writeReg(0x08c8, 0x0, CAM_B);            //CAM.CAM_B.AWB.RC_CNV_1
  ptr->writeReg(0x08cc, 0x200, CAM_B);          //CAM.CAM_B.AWB.RC_CNV_2
  ptr->writeReg(0x08d0, 0x0, CAM_B);            //CAM.CAM_B.AWB.RC_CNV_3
  ptr->writeReg(0x08d4, 0x90200, CAM_B);        //CAM.CAM_B.AWB.RC_CNV_4
  ptr->writeReg(0x0a70, 0x2, CAM_B);            //CAM.CAM_B.BIN.CTL
  ptr->writeReg(0x0a74, 0x0, CAM_B);            //CAM.CAM_B.BIN.FTH
  ptr->writeReg(0x0a78, 0x0, CAM_B);            //CAM.CAM_B.BIN.SPARE
  ptr->writeReg(0x0580, 0xf00d8, CAM_B);        //CAM.CAM_B.BMX.CTL
  ptr->writeReg(0x0584, 0xb70018, CAM_B);       //CAM.CAM_B.BMX.CROP
  ptr->writeReg(0x0588, 0xf0, CAM_B);           //CAM.CAM_B.BMX.VSIZE
  ptr->writeReg(0x0d30, 0xf02a0, CAM_B);        //CAM.CAM_B.BMX2.CTL
  ptr->writeReg(0x0d34, 0x7fff0000, CAM_B);     //CAM.CAM_B.BMX2.CROP
  ptr->writeReg(0x0d38, 0xffff, CAM_B);         //CAM.CAM_B.BMX2.VSIZE
  ptr->writeReg(0x0424, 0x50c606e, CAM_B);      //CAM.CAM_B.BNR.BPC_TH1
  ptr->writeReg(0x0420, 0xf5008020, CAM_B);     //CAM.CAM_B.BNR.BPC_CON
  ptr->writeReg(0x0428, 0x40000258, CAM_B);     //CAM.CAM_B.BNR.BPC_TH2
  ptr->writeReg(0x042c, 0xb1200100, CAM_B);     //CAM.CAM_B.BNR.BPC_TH3
  ptr->writeReg(0x0430, 0xbb2c616e, CAM_B);     //CAM.CAM_B.BNR.BPC_TH4
  ptr->writeReg(0x0434, 0x30031, CAM_B);        //CAM.CAM_B.BNR.BPC_DTC
  ptr->writeReg(0x0438, 0x5090519, CAM_B);      //CAM.CAM_B.BNR.BPC_COR
  ptr->writeReg(0x043c, 0x0, CAM_B);            //CAM.CAM_B.BNR.BPC_TBLI1
  ptr->writeReg(0x0440, 0x0, CAM_B);            //CAM.CAM_B.BNR.BPC_TBLI2
  ptr->writeReg(0x0444, 0xc606e, CAM_B);        //CAM.CAM_B.BNR.BPC_TH1_C
  ptr->writeReg(0x0448, 0xc82258, CAM_B);       //CAM.CAM_B.BNR.BPC_TH2_C
  ptr->writeReg(0x044c, 0xb1200100, CAM_B);     //CAM.CAM_B.BNR.BPC_TH3_C
  ptr->writeReg(0x0450, 0x0, CAM_B);            //CAM.CAM_B.BNR.NR1_CON
  ptr->writeReg(0x0454, 0x50802003, CAM_B);     //CAM.CAM_B.BNR.NR1_CT_CON
  ptr->writeReg(0x0458, 0x0, CAM_B);            //CAM.CAM_B.BNR.NR1_CT_CON2
  ptr->writeReg(0x045c, 0x101, CAM_B);          //CAM.CAM_B.BNR.NR1_CT_CON3
  ptr->writeReg(0x0460, 0x10110, CAM_B);        //CAM.CAM_B.BNR.PDC_CON
  ptr->writeReg(0x0464, 0x100, CAM_B);          //CAM.CAM_B.BNR.PDC_GAIN_L0
  ptr->writeReg(0x0468, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_L1
  ptr->writeReg(0x046c, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_L2
  ptr->writeReg(0x0470, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_L3
  ptr->writeReg(0x0474, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_L4
  ptr->writeReg(0x0478, 0x100, CAM_B);          //CAM.CAM_B.BNR.PDC_GAIN_R0
  ptr->writeReg(0x047c, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_R1
  ptr->writeReg(0x0480, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_R2
  ptr->writeReg(0x0484, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_R3
  ptr->writeReg(0x0488, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_GAIN_R4
  ptr->writeReg(0x048c, 0x2800c8, CAM_B);       //CAM.CAM_B.BNR.PDC_TH_GB
  ptr->writeReg(0x0490, 0x12c0000, CAM_B);      //CAM.CAM_B.BNR.PDC_TH_IA
  ptr->writeReg(0x0494, 0x2000050, CAM_B);      //CAM.CAM_B.BNR.PDC_TH_HD
  ptr->writeReg(0x0498, 0x87768, CAM_B);        //CAM.CAM_B.BNR.PDC_SL
  ptr->writeReg(0x049c, 0x0, CAM_B);            //CAM.CAM_B.BNR.PDC_POS
  ptr->writeReg(0x09e0, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPG.SATU_1
  ptr->writeReg(0x09e4, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPG.SATU_2
  ptr->writeReg(0x09e8, 0x2000200, CAM_B);      //CAM.CAM_B.CPG.GAIN_1
  ptr->writeReg(0x09ec, 0x2000200, CAM_B);      //CAM.CAM_B.CPG.GAIN_2
  ptr->writeReg(0x09f0, 0x0, CAM_B);            //CAM.CAM_B.CPG.OFST_1
  ptr->writeReg(0x09f4, 0x0, CAM_B);            //CAM.CAM_B.CPG.OFST_2
  ptr->writeReg(0x0df0, 0xf0, CAM_B);           //CAM.CAM_B.CPN.HDR_CTL_EN
  ptr->writeReg(0x0df4, 0x0, CAM_B);            //CAM.CAM_B.CPN.IN_IMG_SIZE
  ptr->writeReg(0x0df8, 0x400040, CAM_B);       //CAM.CAM_B.CPN.ALGO_PARAM1
  ptr->writeReg(0x0dfc, 0x4000000, CAM_B);      //CAM.CAM_B.CPN.ALGO_PARAM2
  ptr->writeReg(0x0e00, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPN.GTM_X0X1
  ptr->writeReg(0x0e04, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPN.GTM_X2X3
  ptr->writeReg(0x0e08, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPN.GTM_X4X5
  ptr->writeReg(0x0e0c, 0xfff, CAM_B);          //CAM.CAM_B.CPN.GTM_X6
  ptr->writeReg(0x0e10, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPN.GTM_Y0Y1
  ptr->writeReg(0x0e14, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPN.GTM_Y2Y3
  ptr->writeReg(0x0e18, 0xfff0fff, CAM_B);      //CAM.CAM_B.CPN.GTM_Y4Y5
  ptr->writeReg(0x0e1c, 0xfff, CAM_B);          //CAM.CAM_B.CPN.GTM_Y6
  ptr->writeReg(0x0e20, 0x100, CAM_B);          //CAM.CAM_B.CPN.GTM_S0S1
  ptr->writeReg(0x0e24, 0x0, CAM_B);            //CAM.CAM_B.CPN.GTM_S2S3
  ptr->writeReg(0x0e28, 0x0, CAM_B);            //CAM.CAM_B.CPN.GTM_S4S5
  ptr->writeReg(0x0e2c, 0x0, CAM_B);            //CAM.CAM_B.CPN.GTM_S6S7
  ptr->writeReg(0x0190, 0x10, CAM_B);           //CAM.CAM_B.CQ.EN
  ptr->writeReg(0x0194, 0x10, CAM_B);           //CAM.CAM_B.CQ.THR0_CTL
  //ptr->writeReg(0x0198, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR0_BASEADDR
  ptr->writeReg(0x019c, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR0_DESC_SIZE
  ptr->writeReg(0x01a0, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR1_CTL
  //ptr->writeReg(0x01a4, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR1_BASEADDR
  ptr->writeReg(0x01a8, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR1_DESC_SIZE
  ptr->writeReg(0x01ac, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR2_CTL
  //ptr->writeReg(0x01b0, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR2_BASEADDR
  ptr->writeReg(0x01b4, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR2_DESC_SIZE
  ptr->writeReg(0x01b8, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR3_CTL
  //ptr->writeReg(0x01bc, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR3_BASEADDR
  ptr->writeReg(0x01c0, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR3_DESC_SIZE
  ptr->writeReg(0x01c4, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR4_CTL
  //ptr->writeReg(0x01c8, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR4_BASEADDR
  ptr->writeReg(0x01cc, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR4_DESC_SIZE
  ptr->writeReg(0x01d0, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR5_CTL
  //ptr->writeReg(0x01d4, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR5_BASEADDR
  ptr->writeReg(0x01d8, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR5_DESC_SIZE
  ptr->writeReg(0x01dc, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR6_CTL
  //ptr->writeReg(0x01e0, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR6_BASEADDR
  ptr->writeReg(0x01e4, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR6_DESC_SIZE
  ptr->writeReg(0x01e8, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR7_CTL
  //ptr->writeReg(0x01ec, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR7_BASEADDR
  ptr->writeReg(0x01f0, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR7_DESC_SIZE
  ptr->writeReg(0x01f4, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR8_CTL
  //ptr->writeReg(0x01f8, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR8_BASEADDR
  ptr->writeReg(0x01fc, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR8_DESC_SIZE
  ptr->writeReg(0x0200, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR9_CTL
  //ptr->writeReg(0x0204, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR9_BASEADDR
  ptr->writeReg(0x0208, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR9_DESC_SIZE
  ptr->writeReg(0x020c, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR10_CTL
  //ptr->writeReg(0x0210, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR10_BASEADDR
  ptr->writeReg(0x0214, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR10_DESC_SIZE
  ptr->writeReg(0x0218, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR11_CTL
  //ptr->writeReg(0x021c, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR11_BASEADDR
  ptr->writeReg(0x0220, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR11_DESC_SIZE
  ptr->writeReg(0x0224, 0x20, CAM_B);           //CAM.CAM_B.CQ.THR12_CTL
  //ptr->writeReg(0x0228, 0x0, CAM_B);              //CAM.CAM_B.CQ.THR12_BASEADDR
  ptr->writeReg(0x022c, 0x0, CAM_B);            //CAM.CAM_B.CQ.THR12_DESC_SIZE
  ptr->writeReg(0x0000, 0x0, CAM_B);            //CAM.CAM_B.CTL.START
  ptr->writeReg(0x0004, 0x8100a402, CAM_B);     //CAM.CAM_B.CTL.EN
  ptr->writeReg(0x0008, 0x5, CAM_B);            //CAM.CAM_B.CTL.DMA_EN
  ptr->writeReg(0x000c, 0x824e1094, CAM_B);     //CAM.CAM_B.CTL.FMT_SEL
  ptr->writeReg(0x0010, 0x6021011, CAM_B);      //CAM.CAM_B.CTL.SEL
  ptr->writeReg(0x0014, 0x10, CAM_B);           //CAM.CAM_B.CTL.MISC
  ptr->writeReg(0x0018, 0x2010000, CAM_B);      //CAM.CAM_B.CTL.EN2
  ptr->writeReg(0x0020, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT_EN
  ptr->writeReg(0x0024, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT_STATUS
  ptr->writeReg(0x0028, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT_STATUSX
  ptr->writeReg(0x0030, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT2_EN
  ptr->writeReg(0x0034, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT2_STATUS
  ptr->writeReg(0x0038, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT2_STATUSX
  ptr->writeReg(0x0040, 0x2, CAM_B);            //CAM.CAM_B.CTL.SW_CTL
  ptr->writeReg(0x0044, 0x0, CAM_B);            //CAM.CAM_B.CTL.AB_DONE_SEL
  ptr->writeReg(0x0048, 0x0, CAM_B);            //CAM.CAM_B.CTL.CD_DONE_SEL
  ptr->writeReg(0x004c, 0x0, CAM_B);            //CAM.CAM_B.CTL.UNI_DONE_SEL
  ptr->writeReg(0x0050, 0x0, CAM_B);            //CAM.CAM_B.CTL.SPARE0
  ptr->writeReg(0x0054, 0x0, CAM_B);            //CAM.CAM_B.CTL.SPARE1
  ptr->writeReg(0x0058, 0x0, CAM_B);            //CAM.CAM_B.CTL.SPARE2
  ptr->writeReg(0x005c, 0x0, CAM_B);            //CAM.CAM_B.CTL.SW_PASS1_DONE
  ptr->writeReg(0x0060, 0x0, CAM_B);            //CAM.CAM_B.CTL.FBC_RCNT_INC
  ptr->writeReg(0x0070, 0xf000, CAM_B);         //CAM.CAM_B.CTL.DBG_SET
  ptr->writeReg(0x0074, 0x0, CAM_B);            //CAM.CAM_B.CTL.DBG_PORT
  ptr->writeReg(0x0078, 0x20140831, CAM_B);     //CAM.CAM_B.CTL.DATE_CODE
  ptr->writeReg(0x007c, 0x65990000, CAM_B);     //CAM.CAM_B.CTL.PROJ_CODE
  ptr->writeReg(0x0080, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_DCM_DIS
  ptr->writeReg(0x0084, 0x0, CAM_B);            //CAM.CAM_B.CTL.DMA_DCM_DIS
  ptr->writeReg(0x0088, 0x0, CAM_B);            //CAM.CAM_B.CTL.TOP_DCM_DIS
  ptr->writeReg(0x0090, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_DCM_STATUS
  ptr->writeReg(0x0094, 0x0, CAM_B);            //CAM.CAM_B.CTL.DMA_DCM_STATUS
  ptr->writeReg(0x0098, 0x0, CAM_B);            //CAM.CAM_B.CTL.TOP_DCM_STATUS
  ptr->writeReg(0x00a0, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_REQ_STATUS
  ptr->writeReg(0x00a4, 0x0, CAM_B);            //CAM.CAM_B.CTL.DMA_REQ_STATUS
  ptr->writeReg(0x00a8, 0xf9ffffff, CAM_B);     //CAM.CAM_B.CTL.RAW_RDY_STATUS
  ptr->writeReg(0x00ac, 0x10fff, CAM_B);        //CAM.CAM_B.CTL.DMA_RDY_STATUS
  ptr->writeReg(0x00b0, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_CCU_INT_EN
  ptr->writeReg(0x00b4, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_CCU_INT_STATUS
  ptr->writeReg(0x00b8, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_CCU_INT2_EN
  ptr->writeReg(0x00bc, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_CCU_INT2_STATUS
  ptr->writeReg(0x00c0, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT3_EN
  ptr->writeReg(0x00c4, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT3_STATUS
  ptr->writeReg(0x00c8, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_INT3_STATUSX
  ptr->writeReg(0x00d0, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_CCU_INT3_EN
  ptr->writeReg(0x00d4, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW_CCU_INT3_STATUS
  ptr->writeReg(0x00d8, 0x0, CAM_B);            //CAM.CAM_B.CTL.UNI_B_DONE_SEL
  ptr->writeReg(0x00e0, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW2_DCM_DIS
  ptr->writeReg(0x00e4, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW2_DCM_STATUS
  ptr->writeReg(0x00e8, 0x0, CAM_B);            //CAM.CAM_B.CTL.RAW2_REQ_STATUS
  ptr->writeReg(0x00ec, 0xffffff00, CAM_B);     //CAM.CAM_B.CTL.RAW2_RDY_STATUS
  ptr->writeReg(0x0a90, 0x200, CAM_B);          //CAM.CAM_B.DBN.GAIN
  ptr->writeReg(0x0a94, 0x0, CAM_B);            //CAM.CAM_B.DBN.OFST
  ptr->writeReg(0x0a98, 0x0, CAM_B);            //CAM.CAM_B.DBN.SPARE
  ptr->writeReg(0x0ac0, 0x150005, CAM_B);       //CAM.CAM_B.DBS.SIGMA
  ptr->writeReg(0x0ac4, 0x10204, CAM_B);        //CAM.CAM_B.DBS.BSTBL_0
  ptr->writeReg(0x0ac8, 0x0, CAM_B);            //CAM.CAM_B.DBS.BSTBL_1
  ptr->writeReg(0x0acc, 0x0, CAM_B);            //CAM.CAM_B.DBS.BSTBL_2
  ptr->writeReg(0x0ad0, 0x0, CAM_B);            //CAM.CAM_B.DBS.BSTBL_3
  ptr->writeReg(0x0ad4, 0x840f000, CAM_B);      //CAM.CAM_B.DBS.CTL
  ptr->writeReg(0x0ad8, 0xffa, CAM_B);          //CAM.CAM_B.DBS.CTL_2
  ptr->writeReg(0x0adc, 0x0, CAM_B);            //CAM.CAM_B.DBS.SIGMA_2
  ptr->writeReg(0x0ae0, 0x20202020, CAM_B);     //CAM.CAM_B.DBS.YGN
  ptr->writeReg(0x0ae4, 0x0, CAM_B);            //CAM.CAM_B.DBS.SL_Y12
  ptr->writeReg(0x0ae8, 0x0, CAM_B);            //CAM.CAM_B.DBS.SL_Y34
  ptr->writeReg(0x0aec, 0x0, CAM_B);            //CAM.CAM_B.DBS.SL_G12
  ptr->writeReg(0x0af0, 0x0, CAM_B);            //CAM.CAM_B.DBS.SL_G34
  ptr->writeReg(0x0db0, 0xf0, CAM_B);           //CAM.CAM_B.DCPN.HDR_EN
  ptr->writeReg(0x0db4, 0x0, CAM_B);            //CAM.CAM_B.DCPN.IN_IMG_SIZE
  ptr->writeReg(0x0db8, 0x400040, CAM_B);       //CAM.CAM_B.DCPN.ALGO_PARAM1
  ptr->writeReg(0x0dbc, 0x4000000, CAM_B);      //CAM.CAM_B.DCPN.ALGO_PARAM2
  ptr->writeReg(0x0dc0, 0xfff, CAM_B);          //CAM.CAM_B.DCPN.GTM_X0
  ptr->writeReg(0x0dc4, 0xffff, CAM_B);         //CAM.CAM_B.DCPN.GTM_Y0
  ptr->writeReg(0x0dc8, 0x100, CAM_B);          //CAM.CAM_B.DCPN.GTM_S0
  ptr->writeReg(0x0dcc, 0x10, CAM_B);           //CAM.CAM_B.DCPN.GTM_S1
  ptr->writeReg(0x1000, 0xf8fff, CAM_B);        //CAM.CAM_B.DMA.SOFT_RSTSTAT
  ptr->writeReg(0x1004, 0x0, CAM_B);            //CAM.CAM_B.DMA.CQ0I_BASE_ADDR
  ptr->writeReg(0x1008, 0x0, CAM_B);            //CAM.CAM_B.DMA.CQ0I_XSIZE
  ptr->writeReg(0x100c, 0x0, CAM_B);            //CAM.CAM_B.DMA.VERTICAL_FLIP_EN
  ptr->writeReg(0x1010, 0x0, CAM_B);            //CAM.CAM_B.DMA.SOFT_RESET
  ptr->writeReg(0x1014, 0x0, CAM_B);            //CAM.CAM_B.DMA.LAST_ULTRA_EN
  ptr->writeReg(0x1018, 0x69000000, CAM_B);     //CAM.CAM_B.DMA.SPECIAL_FUN_EN
  ptr->writeReg(0x1020, 0x50661800, CAM_B);     //CAM.CAM_B.DMA.IMGO_BASE_ADDR
  ptr->writeReg(0x1028, 0x190, CAM_B);          //CAM.CAM_B.DMA.IMGO_OFST_ADDR
  ptr->writeReg(0x102c, 0x1000100, CAM_B);      //CAM.CAM_B.DMA.IMGO_DRS
  ptr->writeReg(0x1030, 0x18f, CAM_B);          //CAM.CAM_B.DMA.IMGO_XSIZE
  ptr->writeReg(0x1034, 0xef, CAM_B);           //CAM.CAM_B.DMA.IMGO_YSIZE
  ptr->writeReg(0x1038, 0x10320, CAM_B);        //CAM.CAM_B.DMA.IMGO_STRIDE
  ptr->writeReg(0x103c, 0x400000f2, CAM_B);     //CAM.CAM_B.DMA.IMGO_CON
  ptr->writeReg(0x1040, 0x5b004e, CAM_B);       //CAM.CAM_B.DMA.IMGO_CON2
  ptr->writeReg(0x1044, 0x8e0004, CAM_B);       //CAM.CAM_B.DMA.IMGO_CON3
  ptr->writeReg(0x1048, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_CROP
  ptr->writeReg(0x104c, 0x809d000c, CAM_B);     //CAM.CAM_B.DMA.IMGO_CON4
  ptr->writeReg(0x1050, 0x50bb0a00, CAM_B);     //CAM.CAM_B.DMA.RRZO_BASE_ADDR
  ptr->writeReg(0x1058, 0xf0, CAM_B);           //CAM.CAM_B.DMA.RRZO_OFST_ADDR
  ptr->writeReg(0x105c, 0x1000100, CAM_B);      //CAM.CAM_B.DMA.RRZO_DRS
  ptr->writeReg(0x1060, 0x7f, CAM_B);           //CAM.CAM_B.DMA.RRZO_XSIZE
  ptr->writeReg(0x1064, 0x73, CAM_B);           //CAM.CAM_B.DMA.RRZO_YSIZE
  ptr->writeReg(0x1068, 0xf0180, CAM_B);        //CAM.CAM_B.DMA.RRZO_STRIDE
  ptr->writeReg(0x106c, 0x80000175, CAM_B);     //CAM.CAM_B.DMA.RRZO_CON
  ptr->writeReg(0x1070, 0x1140062, CAM_B);      //CAM.CAM_B.DMA.RRZO_CON2
  ptr->writeReg(0x1074, 0x8a0072, CAM_B);       //CAM.CAM_B.DMA.RRZO_CON3
  ptr->writeReg(0x1078, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_CROP
  ptr->writeReg(0x107c, 0x1340111, CAM_B);      //CAM.CAM_B.DMA.RRZO_CON4
  ptr->writeReg(0x1080, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_BASE_ADDR
  ptr->writeReg(0x1088, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_OFST_ADDR
  ptr->writeReg(0x108c, 0x400040, CAM_B);       //CAM.CAM_B.DMA.AAO_DRS
  ptr->writeReg(0x1090, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_XSIZE
  ptr->writeReg(0x1094, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_YSIZE
  ptr->writeReg(0x1098, 0x282, CAM_B);          //CAM.CAM_B.DMA.AAO_STRIDE
  ptr->writeReg(0x109c, 0x80000040, CAM_B);     //CAM.CAM_B.DMA.AAO_CON
  ptr->writeReg(0x10a0, 0x400040, CAM_B);       //CAM.CAM_B.DMA.AAO_CON2
  ptr->writeReg(0x10a4, 0x400040, CAM_B);       //CAM.CAM_B.DMA.AAO_CON3
  ptr->writeReg(0x10ac, 0x400040, CAM_B);       //CAM.CAM_B.DMA.AAO_CON4
  ptr->writeReg(0x10b0, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_BASE_ADDR
  ptr->writeReg(0x10b8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_OFST_ADDR
  ptr->writeReg(0x10bc, 0x800080, CAM_B);       //CAM.CAM_B.DMA.AFO_DRS
  ptr->writeReg(0x10c0, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_XSIZE
  ptr->writeReg(0x10c4, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_YSIZE
  ptr->writeReg(0x10c8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_STRIDE
  ptr->writeReg(0x10cc, 0x80000080, CAM_B);     //CAM.CAM_B.DMA.AFO_CON
  ptr->writeReg(0x10d0, 0x800080, CAM_B);       //CAM.CAM_B.DMA.AFO_CON2
  ptr->writeReg(0x10d4, 0x800080, CAM_B);       //CAM.CAM_B.DMA.AFO_CON3
  ptr->writeReg(0x10dc, 0x800080, CAM_B);       //CAM.CAM_B.DMA.AFO_CON4
  ptr->writeReg(0x10e0, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_BASE_ADDR
  ptr->writeReg(0x10e8, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_OFST_ADDR
  ptr->writeReg(0x10ec, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LCSO_DRS
  ptr->writeReg(0x10f0, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_XSIZE
  ptr->writeReg(0x10f4, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_YSIZE
  ptr->writeReg(0x10f8, 0x25, CAM_B);           //CAM.CAM_B.DMA.LCSO_STRIDE
  ptr->writeReg(0x10fc, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.LCSO_CON
  ptr->writeReg(0x1100, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LCSO_CON2
  ptr->writeReg(0x1104, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LCSO_CON3
  ptr->writeReg(0x110c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LCSO_CON4
  ptr->writeReg(0x1110, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_BASE_ADDR
  ptr->writeReg(0x1118, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_OFST_ADDR
  ptr->writeReg(0x111c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFEO_DRS
  ptr->writeReg(0x1120, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_XSIZE
  ptr->writeReg(0x1124, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_YSIZE
  ptr->writeReg(0x1128, 0x8, CAM_B);            //CAM.CAM_B.DMA.UFEO_STRIDE
  ptr->writeReg(0x112c, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.UFEO_CON
  ptr->writeReg(0x1130, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFEO_CON2
  ptr->writeReg(0x1134, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFEO_CON3
  ptr->writeReg(0x113c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFEO_CON4
  ptr->writeReg(0x1140, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_BASE_ADDR
  ptr->writeReg(0x1148, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_OFST_ADDR
  ptr->writeReg(0x114c, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PDO_DRS
  ptr->writeReg(0x1150, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_XSIZE
  ptr->writeReg(0x1154, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_YSIZE
  ptr->writeReg(0x1158, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_STRIDE
  ptr->writeReg(0x115c, 0x80000040, CAM_B);     //CAM.CAM_B.DMA.PDO_CON
  ptr->writeReg(0x1160, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PDO_CON2
  ptr->writeReg(0x1164, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PDO_CON3
  ptr->writeReg(0x116c, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PDO_CON4
  ptr->writeReg(0x1170, 0x0, CAM_B);            //CAM.CAM_B.DMA.BPCI_BASE_ADDR
  ptr->writeReg(0x1178, 0x0, CAM_B);            //CAM.CAM_B.DMA.BPCI_OFST_ADDR
  ptr->writeReg(0x117c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.BPCI_DRS
  ptr->writeReg(0x1180, 0x0, CAM_B);            //CAM.CAM_B.DMA.BPCI_XSIZE
  ptr->writeReg(0x1184, 0x0, CAM_B);            //CAM.CAM_B.DMA.BPCI_YSIZE
  ptr->writeReg(0x1188, 0x30, CAM_B);           //CAM.CAM_B.DMA.BPCI_STRIDE
  ptr->writeReg(0x118c, 0x4000001e, CAM_B);     //CAM.CAM_B.DMA.BPCI_CON
  ptr->writeReg(0x1190, 0x1e0018, CAM_B);       //CAM.CAM_B.DMA.BPCI_CON2
  ptr->writeReg(0x1194, 0xa000a, CAM_B);        //CAM.CAM_B.DMA.BPCI_CON3
  ptr->writeReg(0x119c, 0x80000000, CAM_B);     //CAM.CAM_B.DMA.BPCI_CON4
  ptr->writeReg(0x11a0, 0x0, CAM_B);            //CAM.CAM_B.DMA.CACI_BASE_ADDR
  ptr->writeReg(0x11a8, 0x0, CAM_B);            //CAM.CAM_B.DMA.CACI_OFST_ADDR
  ptr->writeReg(0x11ac, 0x200020, CAM_B);       //CAM.CAM_B.DMA.CACI_DRS
  ptr->writeReg(0x11b0, 0x0, CAM_B);            //CAM.CAM_B.DMA.CACI_XSIZE
  ptr->writeReg(0x11b4, 0x0, CAM_B);            //CAM.CAM_B.DMA.CACI_YSIZE
  ptr->writeReg(0x11b8, 0x0, CAM_B);            //CAM.CAM_B.DMA.CACI_STRIDE
  ptr->writeReg(0x11bc, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.CACI_CON
  ptr->writeReg(0x11c0, 0x200020, CAM_B);       //CAM.CAM_B.DMA.CACI_CON2
  ptr->writeReg(0x11c4, 0x200020, CAM_B);       //CAM.CAM_B.DMA.CACI_CON3
  ptr->writeReg(0x11cc, 0x200020, CAM_B);       //CAM.CAM_B.DMA.CACI_CON4
  ptr->writeReg(0x11d0, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSCI_BASE_ADDR
  ptr->writeReg(0x11d8, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSCI_OFST_ADDR
  ptr->writeReg(0x11dc, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LSCI_DRS
  ptr->writeReg(0x11e0, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSCI_XSIZE
  ptr->writeReg(0x11e4, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSCI_YSIZE
  ptr->writeReg(0x11e8, 0x16005d, CAM_B);       //CAM.CAM_B.DMA.LSCI_STRIDE
  ptr->writeReg(0x11ec, 0x1000000f, CAM_B);     //CAM.CAM_B.DMA.LSCI_CON
  ptr->writeReg(0x11f0, 0xf0009, CAM_B);        //CAM.CAM_B.DMA.LSCI_CON2
  ptr->writeReg(0x11f4, 0x60004, CAM_B);        //CAM.CAM_B.DMA.LSCI_CON3
  ptr->writeReg(0x11fc, 0xf000f, CAM_B);        //CAM.CAM_B.DMA.LSCI_CON4
  ptr->writeReg(0x1200, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSC3I_BASE_ADDR
  ptr->writeReg(0x1208, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSC3I_OFST_ADDR
  ptr->writeReg(0x120c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LSC3I_DRS
  ptr->writeReg(0x1210, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSC3I_XSIZE
  ptr->writeReg(0x1214, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSC3I_YSIZE
  ptr->writeReg(0x1218, 0x0, CAM_B);            //CAM.CAM_B.DMA.LSC3I_STRIDE
  ptr->writeReg(0x121c, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.LSC3I_CON
  ptr->writeReg(0x1220, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LSC3I_CON2
  ptr->writeReg(0x1224, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LSC3I_CON3
  ptr->writeReg(0x122c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LSC3I_CON4
  ptr->writeReg(0x1230, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDI_BASE_ADDR
  ptr->writeReg(0x1234, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDI_OFST_ADDR
  ptr->writeReg(0x123c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.PDI_DRS
  ptr->writeReg(0x1240, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDI_XSIZE
  ptr->writeReg(0x1244, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDI_YSIZE
  ptr->writeReg(0x1248, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDI_STRIDE
  ptr->writeReg(0x124c, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.PDI_CON
  ptr->writeReg(0x1250, 0x200020, CAM_B);       //CAM.CAM_B.DMA.PDI_CON2
  ptr->writeReg(0x1254, 0x200020, CAM_B);       //CAM.CAM_B.DMA.PDI_CON3
  ptr->writeReg(0x125c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.PDI_CON4
  ptr->writeReg(0x1260, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_BASE_ADDR
  ptr->writeReg(0x1264, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_OFST_ADDR
  ptr->writeReg(0x126c, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PSO_DRS
  ptr->writeReg(0x1270, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_XSIZE
  ptr->writeReg(0x1274, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_YSIZE
  ptr->writeReg(0x1278, 0x2a9, CAM_B);          //CAM.CAM_B.DMA.PSO_STRIDE
  ptr->writeReg(0x127c, 0x80000040, CAM_B);     //CAM.CAM_B.DMA.PSO_CON
  ptr->writeReg(0x1280, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PSO_CON2
  ptr->writeReg(0x1284, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PSO_CON3
  ptr->writeReg(0x128c, 0x400040, CAM_B);       //CAM.CAM_B.DMA.PSO_CON4
  ptr->writeReg(0x1290, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_BASE_ADDR
  ptr->writeReg(0x1294, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_OFST_ADDR
  ptr->writeReg(0x129c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LMVO_DRS
  ptr->writeReg(0x12a0, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_XSIZE
  ptr->writeReg(0x12a4, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_YSIZE
  ptr->writeReg(0x12a8, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_STRIDE
  ptr->writeReg(0x12ac, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.LMVO_CON
  ptr->writeReg(0x12b0, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LMVO_CON2
  ptr->writeReg(0x12b4, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LMVO_CON3
  ptr->writeReg(0x12bc, 0x200020, CAM_B);       //CAM.CAM_B.DMA.LMVO_CON4
  ptr->writeReg(0x12c0, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_BASE_ADDR
  ptr->writeReg(0x12c4, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_OFST_ADDR
  ptr->writeReg(0x12cc, 0x200020, CAM_B);       //CAM.CAM_B.DMA.FLKO_DRS
  ptr->writeReg(0x12d0, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_XSIZE
  ptr->writeReg(0x12d4, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_YSIZE
  ptr->writeReg(0x12d8, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_STRIDE
  ptr->writeReg(0x12dc, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.FLKO_CON
  ptr->writeReg(0x12e0, 0x200020, CAM_B);       //CAM.CAM_B.DMA.FLKO_CON2
  ptr->writeReg(0x12e4, 0x200020, CAM_B);       //CAM.CAM_B.DMA.FLKO_CON3
  ptr->writeReg(0x12ec, 0x200020, CAM_B);       //CAM.CAM_B.DMA.FLKO_CON4
  ptr->writeReg(0x12f0, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_BASE_ADDR
  ptr->writeReg(0x12f4, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_OFST_ADDR
  ptr->writeReg(0x12fc, 0x400040, CAM_B);       //CAM.CAM_B.DMA.RSSO_A_DRS
  ptr->writeReg(0x1300, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_XSIZE
  ptr->writeReg(0x1304, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_YSIZE
  ptr->writeReg(0x1308, 0x2, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_STRIDE
  ptr->writeReg(0x130c, 0x80000040, CAM_B);     //CAM.CAM_B.DMA.RSSO_A_CON
  ptr->writeReg(0x1310, 0x400040, CAM_B);       //CAM.CAM_B.DMA.RSSO_A_CON2
  ptr->writeReg(0x1314, 0x400040, CAM_B);       //CAM.CAM_B.DMA.RSSO_A_CON3
  ptr->writeReg(0x131c, 0x400040, CAM_B);       //CAM.CAM_B.DMA.RSSO_A_CON4
  ptr->writeReg(0x1320, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_BASE_ADDR
  ptr->writeReg(0x1324, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_OFST_ADDR
  ptr->writeReg(0x132c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFGO_DRS
  ptr->writeReg(0x1330, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_XSIZE
  ptr->writeReg(0x1334, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_YSIZE
  ptr->writeReg(0x1338, 0x8, CAM_B);            //CAM.CAM_B.DMA.UFGO_STRIDE
  ptr->writeReg(0x133c, 0x80000020, CAM_B);     //CAM.CAM_B.DMA.UFGO_CON
  ptr->writeReg(0x1340, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFGO_CON2
  ptr->writeReg(0x1344, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFGO_CON3
  ptr->writeReg(0x134c, 0x200020, CAM_B);       //CAM.CAM_B.DMA.UFGO_CON4
  ptr->writeReg(0x1350, 0x0, CAM_B);            //CAM.CAM_B.DMA.ERR_CTRL
  ptr->writeReg(0x1360, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.IMGO_ERR_STAT
  ptr->writeReg(0x1364, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.RRZO_ERR_STAT
  ptr->writeReg(0x1368, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.AAO_ERR_STAT
  ptr->writeReg(0x136c, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.AFO_ERR_STAT
  ptr->writeReg(0x1370, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.LCSO_ERR_STAT
  ptr->writeReg(0x1374, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.UFEO_ERR_STAT
  ptr->writeReg(0x1378, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.PDO_ERR_STAT
  ptr->writeReg(0x137c, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.BPCI_ERR_STAT
  ptr->writeReg(0x1380, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.CACI_ERR_STAT
  ptr->writeReg(0x1384, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.LSCI_ERR_STAT
  ptr->writeReg(0x1388, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.LSC3I_ERR_STAT
  ptr->writeReg(0x138c, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.PDI_ERR_STAT
  ptr->writeReg(0x1390, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.LMVO_ERR_STAT
  ptr->writeReg(0x1394, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.FLKO_ERR_STAT
  ptr->writeReg(0x1398, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.RSSO_A_ERR_STAT
  ptr->writeReg(0x139c, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.UFGO_ERR_STAT
  ptr->writeReg(0x13a0, 0xffff0000, CAM_B);     //CAM.CAM_B.DMA.PSO_ERR_STAT
  ptr->writeReg(0x13ac, 0x0, CAM_B);            //CAM.CAM_B.DMA.DEBUG_ADDR
  ptr->writeReg(0x13b0, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSV1
  ptr->writeReg(0x13b4, 0xffffffff, CAM_B);     //CAM.CAM_B.DMA.RSV2
  ptr->writeReg(0x13b8, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSV3
  ptr->writeReg(0x13bc, 0xffffffff, CAM_B);     //CAM.CAM_B.DMA.RSV4
  ptr->writeReg(0x13c0, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSV5
  ptr->writeReg(0x13c4, 0xffffffff, CAM_B);     //CAM.CAM_B.DMA.RSV6
  ptr->writeReg(0x13c8, 0x0, CAM_B);            //CAM.CAM_B.DMA.DEBUG_SEL
  ptr->writeReg(0x13cc, 0x0, CAM_B);            //CAM.CAM_B.DMA.BW_SELF_TEST
  ptr->writeReg(0x1400, 0x0, CAM_B);            //CAM.CAM_B.DMA.FRAME_HEADER_EN
  ptr->writeReg(0x1404, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_BASE_ADDR
  ptr->writeReg(0x1408, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_BASE_ADDR
  ptr->writeReg(0x140c, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_BASE_ADDR
  ptr->writeReg(0x1410, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_BASE_ADDR
  ptr->writeReg(0x1414, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_BASE_ADDR
  ptr->writeReg(0x1418, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_BASE_ADDR
  ptr->writeReg(0x141c, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_BASE_ADDR
  ptr->writeReg(0x1420, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_BASE_ADDR
  ptr->writeReg(0x1424, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_BASE_ADDR
  ptr->writeReg(0x1428, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_BASE_ADDR
  ptr->writeReg(0x142c, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_BASE_ADDR
  ptr->writeReg(0x1430, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_BASE_ADDR
  ptr->writeReg(0x1434, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_2
  ptr->writeReg(0x1438, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_3
  ptr->writeReg(0x143c, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_4
  ptr->writeReg(0x1440, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_5
  ptr->writeReg(0x1444, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_6
  ptr->writeReg(0x1448, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_7
  ptr->writeReg(0x144c, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_8
  ptr->writeReg(0x1450, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_9
  ptr->writeReg(0x1454, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_10
  ptr->writeReg(0x1458, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_11
  ptr->writeReg(0x145c, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_12
  ptr->writeReg(0x1460, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_13
  ptr->writeReg(0x1464, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_14
  ptr->writeReg(0x1468, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_15
  ptr->writeReg(0x146c, 0x0, CAM_B);            //CAM.CAM_B.DMA.IMGO_FH_SPARE_16
  ptr->writeReg(0x1474, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_2
  ptr->writeReg(0x1478, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_3
  ptr->writeReg(0x147c, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_4
  ptr->writeReg(0x1480, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_5
  ptr->writeReg(0x1484, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_6
  ptr->writeReg(0x1488, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_7
  ptr->writeReg(0x148c, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_8
  ptr->writeReg(0x1490, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_9
  ptr->writeReg(0x1494, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_10
  ptr->writeReg(0x1498, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_11
  ptr->writeReg(0x149c, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_12
  ptr->writeReg(0x14a0, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_13
  ptr->writeReg(0x14a4, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_14
  ptr->writeReg(0x14a8, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_15
  ptr->writeReg(0x14ac, 0x0, CAM_B);            //CAM.CAM_B.DMA.RRZO_FH_SPARE_16
  ptr->writeReg(0x14b4, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_2
  ptr->writeReg(0x14b8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_3
  ptr->writeReg(0x14bc, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_4
  ptr->writeReg(0x14c0, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_5
  ptr->writeReg(0x14c4, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_6
  ptr->writeReg(0x14c8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_7
  ptr->writeReg(0x14cc, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_8
  ptr->writeReg(0x14d0, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_9
  ptr->writeReg(0x14d4, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_10
  ptr->writeReg(0x14d8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_11
  ptr->writeReg(0x14dc, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_12
  ptr->writeReg(0x14e0, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_13
  ptr->writeReg(0x14e4, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_14
  ptr->writeReg(0x14e8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_15
  ptr->writeReg(0x14ec, 0x0, CAM_B);            //CAM.CAM_B.DMA.AAO_FH_SPARE_16
  ptr->writeReg(0x14f4, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_2
  ptr->writeReg(0x14f8, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_3
  ptr->writeReg(0x14fc, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_4
  ptr->writeReg(0x1500, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_5
  ptr->writeReg(0x1504, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_6
  ptr->writeReg(0x1508, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_7
  ptr->writeReg(0x150c, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_8
  ptr->writeReg(0x1510, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_9
  ptr->writeReg(0x1514, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_10
  ptr->writeReg(0x1518, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_11
  ptr->writeReg(0x151c, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_12
  ptr->writeReg(0x1520, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_13
  ptr->writeReg(0x1524, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_14
  ptr->writeReg(0x1528, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_15
  ptr->writeReg(0x152c, 0x0, CAM_B);            //CAM.CAM_B.DMA.AFO_FH_SPARE_16
  ptr->writeReg(0x1534, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_2
  ptr->writeReg(0x1538, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_3
  ptr->writeReg(0x153c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_4
  ptr->writeReg(0x1540, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_5
  ptr->writeReg(0x1544, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_6
  ptr->writeReg(0x1548, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_7
  ptr->writeReg(0x154c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_8
  ptr->writeReg(0x1550, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_9
  ptr->writeReg(0x1554, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_10
  ptr->writeReg(0x1558, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_11
  ptr->writeReg(0x155c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_12
  ptr->writeReg(0x1560, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_13
  ptr->writeReg(0x1564, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_14
  ptr->writeReg(0x1568, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_15
  ptr->writeReg(0x156c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LCSO_FH_SPARE_16
  ptr->writeReg(0x1574, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_2
  ptr->writeReg(0x1578, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_3
  ptr->writeReg(0x157c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_4
  ptr->writeReg(0x1580, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_5
  ptr->writeReg(0x1584, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_6
  ptr->writeReg(0x1588, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_7
  ptr->writeReg(0x158c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_8
  ptr->writeReg(0x1590, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_9
  ptr->writeReg(0x1594, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_10
  ptr->writeReg(0x1598, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_11
  ptr->writeReg(0x159c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_12
  ptr->writeReg(0x15a0, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_13
  ptr->writeReg(0x15a4, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_14
  ptr->writeReg(0x15a8, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_15
  ptr->writeReg(0x15ac, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFEO_FH_SPARE_16
  ptr->writeReg(0x15b4, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_2
  ptr->writeReg(0x15b8, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_3
  ptr->writeReg(0x15bc, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_4
  ptr->writeReg(0x15c0, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_5
  ptr->writeReg(0x15c4, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_6
  ptr->writeReg(0x15c8, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_7
  ptr->writeReg(0x15cc, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_8
  ptr->writeReg(0x15d0, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_9
  ptr->writeReg(0x15d4, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_10
  ptr->writeReg(0x15d8, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_11
  ptr->writeReg(0x15dc, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_12
  ptr->writeReg(0x15e0, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_13
  ptr->writeReg(0x15e4, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_14
  ptr->writeReg(0x15e8, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_15
  ptr->writeReg(0x15ec, 0x0, CAM_B);            //CAM.CAM_B.DMA.PDO_FH_SPARE_16
  ptr->writeReg(0x15f0, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_4
  ptr->writeReg(0x15f4, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_2
  ptr->writeReg(0x15f8, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_3
  ptr->writeReg(0x1600, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_5
  ptr->writeReg(0x1604, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_6
  ptr->writeReg(0x1608, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_7
  ptr->writeReg(0x160c, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_8
  ptr->writeReg(0x1614, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_9
  ptr->writeReg(0x1618, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_10
  ptr->writeReg(0x161c, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_11
  ptr->writeReg(0x1620, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_12
  ptr->writeReg(0x1624, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_13
  ptr->writeReg(0x1628, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_14
  ptr->writeReg(0x162c, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_15
  ptr->writeReg(0x1630, 0x0, CAM_B);            //CAM.CAM_B.DMA.PSO_FH_SPARE_16
  ptr->writeReg(0x1634, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_2
  ptr->writeReg(0x1638, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_3
  ptr->writeReg(0x163c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_4
  ptr->writeReg(0x1640, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_5
  ptr->writeReg(0x1644, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_6
  ptr->writeReg(0x1648, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_7
  ptr->writeReg(0x164c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_8
  ptr->writeReg(0x1654, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_9
  ptr->writeReg(0x1658, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_10
  ptr->writeReg(0x165c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_11
  ptr->writeReg(0x1660, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_12
  ptr->writeReg(0x1664, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_13
  ptr->writeReg(0x1668, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_14
  ptr->writeReg(0x166c, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_15
  ptr->writeReg(0x1670, 0x0, CAM_B);            //CAM.CAM_B.DMA.LMVO_FH_SPARE_16
  ptr->writeReg(0x1674, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_2
  ptr->writeReg(0x1678, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_3
  ptr->writeReg(0x167c, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_4
  ptr->writeReg(0x1680, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_5
  ptr->writeReg(0x1684, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_6
  ptr->writeReg(0x1688, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_7
  ptr->writeReg(0x168c, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_8
  ptr->writeReg(0x1694, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_9
  ptr->writeReg(0x1698, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_10
  ptr->writeReg(0x169c, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_11
  ptr->writeReg(0x16a0, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_12
  ptr->writeReg(0x16a4, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_13
  ptr->writeReg(0x16a8, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_14
  ptr->writeReg(0x16ac, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_15
  ptr->writeReg(0x16b0, 0x0, CAM_B);            //CAM.CAM_B.DMA.FLKO_FH_SPARE_16
  ptr->writeReg(0x16b4, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_2
  ptr->writeReg(0x16b8, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_3
  ptr->writeReg(0x16bc, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_4
  ptr->writeReg(0x16e0, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_5
  ptr->writeReg(0x16e4, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_6
  ptr->writeReg(0x16e8, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_7
  ptr->writeReg(0x16ec, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_8
  ptr->writeReg(0x16f4, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_9
  ptr->writeReg(0x16f8, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_10
  ptr->writeReg(0x16fc, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_11
  ptr->writeReg(0x1700, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_12
  ptr->writeReg(0x1704, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_13
  ptr->writeReg(0x1708, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_14
  ptr->writeReg(0x170c, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_15
  ptr->writeReg(0x1710, 0x0, CAM_B);            //CAM.CAM_B.DMA.RSSO_A_FH_SPARE_16
  ptr->writeReg(0x1714, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_2
  ptr->writeReg(0x1718, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_3
  ptr->writeReg(0x171c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_4
  ptr->writeReg(0x1720, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_5
  ptr->writeReg(0x1724, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_6
  ptr->writeReg(0x1728, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_7
  ptr->writeReg(0x172c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_8
  ptr->writeReg(0x1730, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_9
  ptr->writeReg(0x1734, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_10
  ptr->writeReg(0x1738, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_11
  ptr->writeReg(0x173c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_12
  ptr->writeReg(0x1740, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_13
  ptr->writeReg(0x1744, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_14
  ptr->writeReg(0x1748, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_15
  ptr->writeReg(0x174c, 0x0, CAM_B);            //CAM.CAM_B.DMA.UFGO_FH_SPARE_16
  ptr->writeReg(0x0330, 0xf01b0, CAM_B);        //CAM.CAM_B.DMX.CTL
  ptr->writeReg(0x0334, 0x27f0128, CAM_B);      //CAM.CAM_B.DMX.CROP
  ptr->writeReg(0x0338, 0xf0, CAM_B);           //CAM.CAM_B.DMX.VSIZE
  ptr->writeReg(0x0c70, 0x9, CAM_B);            //CAM.CAM_B.EIS.PREP_ME_CTRL1
  ptr->writeReg(0x0c74, 0x506c, CAM_B);         //CAM.CAM_B.EIS.PREP_ME_CTRL2
  ptr->writeReg(0x0c78, 0x0, CAM_B);            //CAM.CAM_B.EIS.LMV_TH
  ptr->writeReg(0x0c7c, 0x0, CAM_B);            //CAM.CAM_B.EIS.FL_OFFSET
  ptr->writeReg(0x0c80, 0x0, CAM_B);            //CAM.CAM_B.EIS.MB_OFFSET
  ptr->writeReg(0x0c84, 0x0, CAM_B);            //CAM.CAM_B.EIS.MB_INTERVAL
  ptr->writeReg(0x0c88, 0x0, CAM_B);            //CAM.CAM_B.EIS.GMV
  ptr->writeReg(0x0c8c, 0xf0000, CAM_B);        //CAM.CAM_B.EIS.ERR_CTRL
  ptr->writeReg(0x0c90, 0x0, CAM_B);            //CAM.CAM_B.EIS.IMAGE_CTRL
  ptr->writeReg(0x0110, 0x0, CAM_B);            //CAM.CAM_B.FBC_IMGO.CTL1
  ptr->writeReg(0x0114, 0x0, CAM_B);            //CAM.CAM_B.FBC_IMGO.CTL2
  ptr->writeReg(0x0118, 0x0, CAM_B);            //CAM.CAM_B.FBC_RRZO.CTL1
  ptr->writeReg(0x011c, 0x0, CAM_B);            //CAM.CAM_B.FBC_RRZO.CTL2
  ptr->writeReg(0x0120, 0x0, CAM_B);            //CAM.CAM_B.FBC_UFEO.CTL1
  ptr->writeReg(0x0124, 0x0, CAM_B);            //CAM.CAM_B.FBC_UFEO.CTL2
  ptr->writeReg(0x0128, 0x0, CAM_B);            //CAM.CAM_B.FBC_LCSO.CTL1
  ptr->writeReg(0x012c, 0x0, CAM_B);            //CAM.CAM_B.FBC_LCSO.CTL2
  ptr->writeReg(0x0130, 0x0, CAM_B);            //CAM.CAM_B.FBC_AFO.CTL1
  ptr->writeReg(0x0134, 0x0, CAM_B);            //CAM.CAM_B.FBC_AFO.CTL2
  ptr->writeReg(0x0138, 0x0, CAM_B);            //CAM.CAM_B.FBC_AAO.CTL1
  ptr->writeReg(0x013c, 0x0, CAM_B);            //CAM.CAM_B.FBC_AAO.CTL2
  ptr->writeReg(0x0140, 0x0, CAM_B);            //CAM.CAM_B.FBC_PDO.CTL1
  ptr->writeReg(0x0144, 0x0, CAM_B);            //CAM.CAM_B.FBC_PDO.CTL2
  ptr->writeReg(0x0148, 0x0, CAM_B);            //CAM.CAM_B.FBC_PSO.CTL1
  ptr->writeReg(0x014c, 0x0, CAM_B);            //CAM.CAM_B.FBC_PSO.CTL2
  ptr->writeReg(0x0150, 0x0, CAM_B);            //CAM.CAM_B.FBC_FLKO.CTL1
  ptr->writeReg(0x0154, 0x0, CAM_B);            //CAM.CAM_B.FBC_FLKO.CTL2
  ptr->writeReg(0x0158, 0x0, CAM_B);            //CAM.CAM_B.FBC_LMVO.CTL1
  ptr->writeReg(0x015c, 0x0, CAM_B);            //CAM.CAM_B.FBC_LMVO.CTL2
  ptr->writeReg(0x0160, 0x0, CAM_B);            //CAM.CAM_B.FBC_RSSO.CTL1
  ptr->writeReg(0x0164, 0x0, CAM_B);            //CAM.CAM_B.FBC_RSSO.CTL2
  ptr->writeReg(0x0168, 0x0, CAM_B);            //CAM.CAM_B.FBC_UFGO.CTL1
  ptr->writeReg(0x016c, 0x0, CAM_B);            //CAM.CAM_B.FBC_UFGO.CTL2
  ptr->writeReg(0x0c50, 0x0, CAM_B);            //CAM.CAM_B.FLK_A.CON
  ptr->writeReg(0x0c54, 0x0, CAM_B);            //CAM.CAM_B.FLK_A.OFST
  ptr->writeReg(0x0c58, 0x0, CAM_B);            //CAM.CAM_B.FLK_A.SIZE
  ptr->writeReg(0x0c5c, 0x66, CAM_B);           //CAM.CAM_B.FLK_A.NUM
  ptr->writeReg(0x0cc0, 0x0, CAM_B);            //CAM.CAM_B.HDS.MODE
  ptr->writeReg(0x0710, 0xf2008014, CAM_B);     //CAM.CAM_B.HLR.CFG
  ptr->writeReg(0x0718, 0x2000200, CAM_B);      //CAM.CAM_B.HLR.GAIN
  ptr->writeReg(0x071c, 0x2000200, CAM_B);      //CAM.CAM_B.HLR.GAIN_1
  ptr->writeReg(0x0720, 0x0, CAM_B);            //CAM.CAM_B.HLR.OFST
  ptr->writeReg(0x0724, 0x0, CAM_B);            //CAM.CAM_B.HLR.OFST_1
  ptr->writeReg(0x0728, 0x4000400, CAM_B);      //CAM.CAM_B.HLR.IVGN
  ptr->writeReg(0x072c, 0x4000400, CAM_B);      //CAM.CAM_B.HLR.IVGN_1
  ptr->writeReg(0x0730, 0x0, CAM_B);            //CAM.CAM_B.HLR.KC
  ptr->writeReg(0x0734, 0x40, CAM_B);           //CAM.CAM_B.HLR.CFG_1
  ptr->writeReg(0x0738, 0x800080, CAM_B);       //CAM.CAM_B.HLR.SL_PARA
  ptr->writeReg(0x073c, 0x800080, CAM_B);       //CAM.CAM_B.HLR.SL_PARA_1
  ptr->writeReg(0x0790, 0xf014001, CAM_B);      //CAM.CAM_B.LCS25.CON
  ptr->writeReg(0x0794, 0x0, CAM_B);            //CAM.CAM_B.LCS25.ST
  ptr->writeReg(0x0798, 0x0, CAM_B);            //CAM.CAM_B.LCS25.AWS
  ptr->writeReg(0x079c, 0x10000, CAM_B);        //CAM.CAM_B.LCS25.FLR
  ptr->writeReg(0x07a0, 0x0, CAM_B);            //CAM.CAM_B.LCS25.LRZR_1
  ptr->writeReg(0x07a4, 0x0, CAM_B);            //CAM.CAM_B.LCS25.LRZR_2
  ptr->writeReg(0x07a8, 0xfff0fff, CAM_B);      //CAM.CAM_B.LCS25.SATU_1
  ptr->writeReg(0x07ac, 0xfff0fff, CAM_B);      //CAM.CAM_B.LCS25.SATU_2
  ptr->writeReg(0x07b0, 0x2000200, CAM_B);      //CAM.CAM_B.LCS25.GAIN_1
  ptr->writeReg(0x07b4, 0x2000200, CAM_B);      //CAM.CAM_B.LCS25.GAIN_2
  ptr->writeReg(0x07b8, 0x0, CAM_B);            //CAM.CAM_B.LCS25.OFST_1
  ptr->writeReg(0x07bc, 0x0, CAM_B);            //CAM.CAM_B.LCS25.OFST_2
  ptr->writeReg(0x07c0, 0x200, CAM_B);          //CAM.CAM_B.LCS25.G2G_CNV_1
  ptr->writeReg(0x07c4, 0x0, CAM_B);            //CAM.CAM_B.LCS25.G2G_CNV_2
  ptr->writeReg(0x07c8, 0x200, CAM_B);          //CAM.CAM_B.LCS25.G2G_CNV_3
  ptr->writeReg(0x07cc, 0x0, CAM_B);            //CAM.CAM_B.LCS25.G2G_CNV_4
  ptr->writeReg(0x07d0, 0x90200, CAM_B);        //CAM.CAM_B.LCS25.G2G_CNV_5
  ptr->writeReg(0x07d4, 0x12c0000, CAM_B);      //CAM.CAM_B.LCS25.LPF
  ptr->writeReg(0x05d0, 0x20400000, CAM_B);     //CAM.CAM_B.LSC.CTL1
  ptr->writeReg(0x05d4, 0xc000, CAM_B);         //CAM.CAM_B.LSC.CTL2
  ptr->writeReg(0x05d8, 0xc000, CAM_B);         //CAM.CAM_B.LSC.CTL3
  ptr->writeReg(0x05dc, 0xff00ff, CAM_B);       //CAM.CAM_B.LSC.LBLOCK
  ptr->writeReg(0x05e0, 0x20202020, CAM_B);     //CAM.CAM_B.LSC.RATIO_0
  ptr->writeReg(0x05e4, 0x0, CAM_B);            //CAM.CAM_B.LSC.TPIPE_OFST
  ptr->writeReg(0x05e8, 0x0, CAM_B);            //CAM.CAM_B.LSC.TPIPE_SIZE
  ptr->writeReg(0x05ec, 0x0, CAM_B);            //CAM.CAM_B.LSC.GAIN_TH
  ptr->writeReg(0x05f0, 0x20202020, CAM_B);     //CAM.CAM_B.LSC.RATIO_1
  ptr->writeReg(0x05f4, 0xffc0ffc, CAM_B);      //CAM.CAM_B.LSC.UPB_B_GB
  ptr->writeReg(0x05f8, 0xffc0ffc, CAM_B);      //CAM.CAM_B.LSC.UPB_GR_R
  ptr->writeReg(0x03f0, 0x0, CAM_B);            //CAM.CAM_B.OBC.OFFST0
  ptr->writeReg(0x03f4, 0x0, CAM_B);            //CAM.CAM_B.OBC.OFFST1
  ptr->writeReg(0x03f8, 0x0, CAM_B);            //CAM.CAM_B.OBC.OFFST2
  ptr->writeReg(0x03fc, 0x0, CAM_B);            //CAM.CAM_B.OBC.OFFST3
  ptr->writeReg(0x0400, 0x0, CAM_B);            //CAM.CAM_B.OBC.GAIN0
  ptr->writeReg(0x0404, 0x0, CAM_B);            //CAM.CAM_B.OBC.GAIN1
  ptr->writeReg(0x0408, 0x0, CAM_B);            //CAM.CAM_B.OBC.GAIN2
  ptr->writeReg(0x040c, 0x0, CAM_B);            //CAM.CAM_B.OBC.GAIN3
  ptr->writeReg(0x0aa0, 0x0, CAM_B);            //CAM.CAM_B.PBN.TYPE
  ptr->writeReg(0x0aa4, 0x0, CAM_B);            //CAM.CAM_B.PBN.LST
  ptr->writeReg(0x0aa8, 0xffff, CAM_B);         //CAM.CAM_B.PBN.VSIZE
  ptr->writeReg(0x0b80, 0x0, CAM_B);            //CAM.CAM_B.PCP.CROP_CON1
  ptr->writeReg(0x0b84, 0x0, CAM_B);            //CAM.CAM_B.PCP.CROP_CON2
  ptr->writeReg(0x0bb0, 0x0, CAM_B);            //CAM.CAM_B.PDE.TBLI1
  ptr->writeReg(0x0bb4, 0x0, CAM_B);            //CAM.CAM_B.PDE.CTL
  ptr->writeReg(0x0bd0, 0x0, CAM_B);            //CAM.CAM_B.PS.AWB_WIN_ORG
  ptr->writeReg(0x0bd4, 0x20004, CAM_B);        //CAM.CAM_B.PS.AWB_WIN_SIZE
  ptr->writeReg(0x0bd8, 0x20004, CAM_B);        //CAM.CAM_B.PS.AWB_WIN_PIT
  ptr->writeReg(0x0bdc, 0x10001, CAM_B);        //CAM.CAM_B.PS.AWB_WIN_NUM
  ptr->writeReg(0x0be0, 0x0, CAM_B);            //CAM.CAM_B.PS.AWB_PIXEL_CNT0
  ptr->writeReg(0x0be4, 0x0, CAM_B);            //CAM.CAM_B.PS.AWB_PIXEL_CNT1
  ptr->writeReg(0x0be8, 0x0, CAM_B);            //CAM.CAM_B.PS.AWB_PIXEL_CNT2
  ptr->writeReg(0x0bec, 0x0, CAM_B);            //CAM.CAM_B.PS.AWB_PIXEL_CNT3
  ptr->writeReg(0x0bf0, 0x12c91323, CAM_B);     //CAM.CAM_B.PS.AE_YCOEF0
  ptr->writeReg(0x0bf4, 0x74b12c9, CAM_B);      //CAM.CAM_B.PS.AE_YCOEF1
  ptr->writeReg(0x0bf8, 0x0, CAM_B);            //CAM.CAM_B.PS.DATA_TYPE
  ptr->writeReg(0x0bfc, 0x9, CAM_B);            //CAM.CAM_B.PS.HST_CFG
  ptr->writeReg(0x0c00, 0x0, CAM_B);            //CAM.CAM_B.PS.HST_ROI_X
  ptr->writeReg(0x0c04, 0x0, CAM_B);            //CAM.CAM_B.PS.HST_ROI_Y
  ptr->writeReg(0x0ba0, 0x0, CAM_B);            //CAM.CAM_B.PSB.CON
  ptr->writeReg(0x0ba4, 0x0, CAM_B);            //CAM.CAM_B.PSB.SIZE
  ptr->writeReg(0x09d0, 0x11, CAM_B);           //CAM.CAM_B.QBN1.MODE
  ptr->writeReg(0x0820, 0x0, CAM_B);            //CAM.CAM_B.QBN2.MODE
  ptr->writeReg(0x0c30, 0x0, CAM_B);            //CAM.CAM_B.QBN3.MODE
  ptr->writeReg(0x0800, 0x0, CAM_B);            //CAM.CAM_B.RCP.CROP_CON1
  ptr->writeReg(0x0804, 0x0, CAM_B);            //CAM.CAM_B.RCP.CROP_CON2
  ptr->writeReg(0x0ab0, 0x1570018, CAM_B);      //CAM.CAM_B.RCP3.CROP_CON1
  ptr->writeReg(0x0ab4, 0xef0000, CAM_B);       //CAM.CAM_B.RCP3.CROP_CON2
  ptr->writeReg(0x0bc0, 0x0, CAM_B);            //CAM.CAM_B.RMB.MODE
  ptr->writeReg(0x0350, 0xffa000e2, CAM_B);     //CAM.CAM_B.RMG.HDR_CFG
  ptr->writeReg(0x0354, 0x400040, CAM_B);       //CAM.CAM_B.RMG.HDR_GAIN
  ptr->writeReg(0x0358, 0x400, CAM_B);          //CAM.CAM_B.RMG.HDR_CFG2
  ptr->writeReg(0x0390, 0xf01143ec, CAM_B);     //CAM.CAM_B.RMM.OSC
  ptr->writeReg(0x0394, 0x40245, CAM_B);        //CAM.CAM_B.RMM.MC
  ptr->writeReg(0x0398, 0x4000400, CAM_B);      //CAM.CAM_B.RMM.REVG_1
  ptr->writeReg(0x039c, 0x4000400, CAM_B);      //CAM.CAM_B.RMM.REVG_2
  ptr->writeReg(0x03a0, 0x200, CAM_B);          //CAM.CAM_B.RMM.LEOS
  ptr->writeReg(0x03a4, 0x50080, CAM_B);        //CAM.CAM_B.RMM.MC2
  ptr->writeReg(0x03a8, 0x0, CAM_B);            //CAM.CAM_B.RMM.DIFF_LB
  ptr->writeReg(0x03ac, 0x8088408, CAM_B);      //CAM.CAM_B.RMM.MA
  ptr->writeReg(0x03b0, 0x70800013, CAM_B);     //CAM.CAM_B.RMM.TUNE
  ptr->writeReg(0x0540, 0xf0130, CAM_B);        //CAM.CAM_B.RMX.CTL
  ptr->writeReg(0x0544, 0x170000, CAM_B);       //CAM.CAM_B.RMX.CROP
  ptr->writeReg(0x0548, 0x74, CAM_B);           //CAM.CAM_B.RMX.VSIZE
  ptr->writeReg(0x04c0, 0xfff0fff, CAM_B);      //CAM.CAM_B.RPG.SATU_1
  ptr->writeReg(0x04c4, 0xfff0fff, CAM_B);      //CAM.CAM_B.RPG.SATU_2
  ptr->writeReg(0x04c8, 0x2000200, CAM_B);      //CAM.CAM_B.RPG.GAIN_1
  ptr->writeReg(0x04cc, 0x2000200, CAM_B);      //CAM.CAM_B.RPG.GAIN_2
  ptr->writeReg(0x04d0, 0x0, CAM_B);            //CAM.CAM_B.RPG.OFST_1
  ptr->writeReg(0x04d4, 0x0, CAM_B);            //CAM.CAM_B.RPG.OFST_2
  ptr->writeReg(0x04e0, 0x191000df, CAM_B);     //CAM.CAM_B.RRZ.CTL
  ptr->writeReg(0x04e4, 0xf00158, CAM_B);       //CAM.CAM_B.RRZ.IN_IMG
  ptr->writeReg(0x04e8, 0x740034, CAM_B);       //CAM.CAM_B.RRZ.OUT_IMG
  ptr->writeReg(0x04ec, 0x17546, CAM_B);        //CAM.CAM_B.RRZ.HORI_STEP
  ptr->writeReg(0x04f0, 0xca92, CAM_B);         //CAM.CAM_B.RRZ.VERT_STEP
  ptr->writeReg(0x04f4, 0x8c, CAM_B);           //CAM.CAM_B.RRZ.HORI_INT_OFST
  ptr->writeReg(0x04f8, 0x6f0b, CAM_B);         //CAM.CAM_B.RRZ.HORI_SUB_OFST
  ptr->writeReg(0x04fc, 0x30, CAM_B);           //CAM.CAM_B.RRZ.VERT_INT_OFST
  ptr->writeReg(0x0500, 0x40d6, CAM_B);         //CAM.CAM_B.RRZ.VERT_SUB_OFST
  ptr->writeReg(0x0504, 0x7c5907a2, CAM_B);     //CAM.CAM_B.RRZ.MODE_TH
  ptr->writeReg(0x0508, 0xd142, CAM_B);         //CAM.CAM_B.RRZ.MODE_CTL
  ptr->writeReg(0x050c, 0x1fc8, CAM_B);         //CAM.CAM_B.RRZ.RLB_AOFST
  ptr->writeReg(0x0510, 0x14017a, CAM_B);       //CAM.CAM_B.RRZ.LBLD_CFG
  ptr->writeReg(0x0514, 0x3423, CAM_B);         //CAM.CAM_B.RRZ.NNIR_TBL_SEL
  ptr->writeReg(0x0ce0, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.CONTROL
  ptr->writeReg(0x0ce4, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.IN_IMG
  ptr->writeReg(0x0ce8, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.OUT_IMG
  ptr->writeReg(0x0cec, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.HORI_STEP
  ptr->writeReg(0x0cf0, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.VERT_STEP
  ptr->writeReg(0x0cf4, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.HORI_INT_OFST
  ptr->writeReg(0x0cf8, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.HORI_SUB_OFST
  ptr->writeReg(0x0cfc, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.VERT_INT_OFST
  ptr->writeReg(0x0d00, 0x0, CAM_B);            //CAM.CAM_B.RSS_A.VERT_SUB_OFST
  ptr->writeReg(0x04b0, 0x0, CAM_B);            //CAM.CAM_B.SCM.CFG0
  ptr->writeReg(0x04b4, 0xf, CAM_B);            //CAM.CAM_B.SCM.CFG1
  ptr->writeReg(0x0810, 0x10, CAM_B);           //CAM.CAM_B.SGG1.PGN
  ptr->writeReg(0x0814, 0x10080402, CAM_B);     //CAM.CAM_B.SGG1.GMRC_1
  ptr->writeReg(0x0818, 0x804020, CAM_B);       //CAM.CAM_B.SGG1.GMRC_2
  ptr->writeReg(0x0b90, 0x10, CAM_B);           //CAM.CAM_B.SGG2.PGN
  ptr->writeReg(0x0b94, 0x10080402, CAM_B);     //CAM.CAM_B.SGG2.GMRC_1
  ptr->writeReg(0x0b98, 0x804020, CAM_B);       //CAM.CAM_B.SGG2.GMRC_2
  ptr->writeReg(0x0c40, 0x10, CAM_B);           //CAM.CAM_B.SGG3.PGN
  ptr->writeReg(0x0c44, 0x10080402, CAM_B);     //CAM.CAM_B.SGG3.GMRC_1
  ptr->writeReg(0x0c48, 0x804020, CAM_B);       //CAM.CAM_B.SGG3.GMRC_2
  ptr->writeReg(0x0cb0, 0x10, CAM_B);           //CAM.CAM_B.SGG5.PGN
  ptr->writeReg(0x0cb4, 0x10080402, CAM_B);     //CAM.CAM_B.SGG5.GMRC_1
  ptr->writeReg(0x0cb8, 0x804020, CAM_B);       //CAM.CAM_B.SGG5.GMRC_2
  ptr->writeReg(0x0fa0, 0x0, CAM_B);            //CAM.CAM_B.SGM.R_OFST_TABLE0_3
  ptr->writeReg(0x0fa4, 0x0, CAM_B);            //CAM.CAM_B.SGM.R_OFST_TABLE4_7
  ptr->writeReg(0x0fa8, 0x0, CAM_B);            //CAM.CAM_B.SGM.R_OFST_TABLE8_11
  ptr->writeReg(0x0fac, 0x0, CAM_B);            //CAM.CAM_B.SGM.R_OFST_TABLE12_15
  ptr->writeReg(0x0fb0, 0x0, CAM_B);            //CAM.CAM_B.SGM.G_OFST_TABLE0_3
  ptr->writeReg(0x0fb4, 0x0, CAM_B);            //CAM.CAM_B.SGM.G_OFST_TABLE4_7
  ptr->writeReg(0x0fb8, 0x0, CAM_B);            //CAM.CAM_B.SGM.G_OFST_TABLE8_11
  ptr->writeReg(0x0fbc, 0x0, CAM_B);            //CAM.CAM_B.SGM.G_OFST_TABLE12_15
  ptr->writeReg(0x0fc0, 0x0, CAM_B);            //CAM.CAM_B.SGM.B_OFST_TABLE0_3
  ptr->writeReg(0x0fc4, 0x0, CAM_B);            //CAM.CAM_B.SGM.B_OFST_TABLE4_7
  ptr->writeReg(0x0fc8, 0x0, CAM_B);            //CAM.CAM_B.SGM.B_OFST_TABLE8_11
  ptr->writeReg(0x0fcc, 0x0, CAM_B);            //CAM.CAM_B.SGM.B_OFST_TABLE12_15
  ptr->writeReg(0x0b00, 0x0, CAM_B);            //CAM.CAM_B.SL2F.CEN
  ptr->writeReg(0x0b04, 0x0, CAM_B);            //CAM.CAM_B.SL2F.RR_CON0
  ptr->writeReg(0x0b08, 0x40000000, CAM_B);     //CAM.CAM_B.SL2F.RR_CON1
  ptr->writeReg(0x0b0c, 0xffc080, CAM_B);       //CAM.CAM_B.SL2F.GAIN
  ptr->writeReg(0x0b10, 0x8000800, CAM_B);      //CAM.CAM_B.SL2F.RZ
  ptr->writeReg(0x0b14, 0x0, CAM_B);            //CAM.CAM_B.SL2F.XOFF
  ptr->writeReg(0x0b18, 0x0, CAM_B);            //CAM.CAM_B.SL2F.YOFF
  ptr->writeReg(0x0b1c, 0x100, CAM_B);          //CAM.CAM_B.SL2F.SLP_CON0
  ptr->writeReg(0x0b20, 0x100, CAM_B);          //CAM.CAM_B.SL2F.SLP_CON1
  ptr->writeReg(0x0b24, 0x100, CAM_B);          //CAM.CAM_B.SL2F.SLP_CON2
  ptr->writeReg(0x0b28, 0x100, CAM_B);          //CAM.CAM_B.SL2F.SLP_CON3
  ptr->writeReg(0x0b2c, 0x0, CAM_B);            //CAM.CAM_B.SL2F.SIZE
  ptr->writeReg(0x0b40, 0x0, CAM_B);            //CAM.CAM_B.SL2J.CEN
  ptr->writeReg(0x0b44, 0x0, CAM_B);            //CAM.CAM_B.SL2J.RR_CON0
  ptr->writeReg(0x0b48, 0x40000000, CAM_B);     //CAM.CAM_B.SL2J.RR_CON1
  ptr->writeReg(0x0b4c, 0xffc080, CAM_B);       //CAM.CAM_B.SL2J.GAIN
  ptr->writeReg(0x0b50, 0x8000800, CAM_B);      //CAM.CAM_B.SL2J.RZ
  ptr->writeReg(0x0b54, 0x0, CAM_B);            //CAM.CAM_B.SL2J.XOFF
  ptr->writeReg(0x0b58, 0x0, CAM_B);            //CAM.CAM_B.SL2J.YOFF
  ptr->writeReg(0x0b5c, 0x100, CAM_B);          //CAM.CAM_B.SL2J.SLP_CON0
  ptr->writeReg(0x0b60, 0x100, CAM_B);          //CAM.CAM_B.SL2J.SLP_CON1
  ptr->writeReg(0x0b64, 0x100, CAM_B);          //CAM.CAM_B.SL2J.SLP_CON2
  ptr->writeReg(0x0b68, 0x100, CAM_B);          //CAM.CAM_B.SL2J.SLP_CON3
  ptr->writeReg(0x0b6c, 0x0, CAM_B);            //CAM.CAM_B.SL2J.SIZE
  ptr->writeReg(0x04a0, 0x0, CAM_B);            //CAM.CAM_B.STM.CFG0
  ptr->writeReg(0x04a4, 0xf, CAM_B);            //CAM.CAM_B.STM.CFG1
  ptr->writeReg(0x0230, 0x0, CAM_B);            //CAM.CAM_B.TG.SEN_MODE
  ptr->writeReg(0x0234, 0x0, CAM_B);            //CAM.CAM_B.TG.VF_CON
  ptr->writeReg(0x0238, 0x7fff0000, CAM_B);     //CAM.CAM_B.TG.SEN_GRAB_PXL
  ptr->writeReg(0x023c, 0x400000, CAM_B);       //CAM.CAM_B.TG.SEN_GRAB_LIN
  ptr->writeReg(0x0240, 0x0, CAM_B);            //CAM.CAM_B.TG.PATH_CFG
  ptr->writeReg(0x0244, 0x1430, CAM_B);         //CAM.CAM_B.TG.MEMIN_CTL
  ptr->writeReg(0x0248, 0x0, CAM_B);            //CAM.CAM_B.TG.INT1
  ptr->writeReg(0x024c, 0x0, CAM_B);            //CAM.CAM_B.TG.INT2
  ptr->writeReg(0x0250, 0x0, CAM_B);            //CAM.CAM_B.TG.SOF_CNT
  ptr->writeReg(0x0254, 0x10, CAM_B);           //CAM.CAM_B.TG.SOT_CNT
  ptr->writeReg(0x0258, 0xfffffff, CAM_B);      //CAM.CAM_B.TG.EOT_CNT
  ptr->writeReg(0x025c, 0x0, CAM_B);            //CAM.CAM_B.TG.ERR_CTL
  ptr->writeReg(0x0260, 0x0, CAM_B);            //CAM.CAM_B.TG.DAT_NO
  ptr->writeReg(0x0264, 0x0, CAM_B);            //CAM.CAM_B.TG.FRM_CNT_ST
  ptr->writeReg(0x0268, 0x0, CAM_B);            //CAM.CAM_B.TG.FRMSIZE_ST
  ptr->writeReg(0x026c, 0x102, CAM_B);          //CAM.CAM_B.TG.INTER_ST
  ptr->writeReg(0x0270, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHA_CTL
  ptr->writeReg(0x0274, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHA_LINE_CNT
  ptr->writeReg(0x0278, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHA_POS
  ptr->writeReg(0x027c, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHB_CTL
  ptr->writeReg(0x0280, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHB_LINE_CNT
  ptr->writeReg(0x0284, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHB_POS
  ptr->writeReg(0x0288, 0x0, CAM_B);            //CAM.CAM_B.TG.FLASHB_POS1
  ptr->writeReg(0x0290, 0x0, CAM_B);            //CAM.CAM_B.TG.I2C_CQ_TRIG
  ptr->writeReg(0x0294, 0x0, CAM_B);            //CAM.CAM_B.TG.CQ_TIMING
  ptr->writeReg(0x0298, 0x0, CAM_B);            //CAM.CAM_B.TG.CQ_NUM
  ptr->writeReg(0x02a0, 0x0, CAM_B);            //CAM.CAM_B.TG.TIME_STAMP
  ptr->writeReg(0x02a4, 0x0, CAM_B);            //CAM.CAM_B.TG.SUB_PERIOD
  ptr->writeReg(0x02a8, 0x0, CAM_B);            //CAM.CAM_B.TG.DAT_NO_R
  ptr->writeReg(0x02ac, 0x0, CAM_B);            //CAM.CAM_B.TG.FRMSIZE_ST_R
  ptr->writeReg(0x02b0, 0x0, CAM_B);            //CAM.CAM_B.TG.TIME_STAMP_CTL
  ptr->writeReg(0x02b4, 0x0, CAM_B);            //CAM.CAM_B.TG.TIME_STAMP_MSB
  ptr->writeReg(0x0d20, 0x0, CAM_B);            //CAM.CAM_B.UFE.CON
  ptr->writeReg(0x05c0, 0x0, CAM_B);            //CAM.CAM_B.UFEG.CON
  ptr->writeReg(0x0a30, 0x200, CAM_B);          //CAM.CAM_B.VBN.GAIN
  ptr->writeReg(0x0a34, 0x0, CAM_B);            //CAM.CAM_B.VBN.OFST
  ptr->writeReg(0x0a38, 0x0, CAM_B);            //CAM.CAM_B.VBN.TYPE
  ptr->writeReg(0x0a3c, 0x0, CAM_B);            //CAM.CAM_B.VBN.SPARE
