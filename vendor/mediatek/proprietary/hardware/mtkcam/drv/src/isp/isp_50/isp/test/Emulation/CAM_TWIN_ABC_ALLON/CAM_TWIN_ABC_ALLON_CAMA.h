 ptr->writeReg(0x0d9c, 0xffa04008, CAM_A);      //CAM.CAM_A.ADBS.HDR
 ptr->writeReg(0x0da0, 0x0, CAM_A);             //CAM.CAM_A.ADBS.CMDL_ONLY_1
 ptr->writeReg(0x0d50, 0xf, CAM_A);             //CAM.CAM_A.ADBS.CTL
 ptr->writeReg(0x0d54, 0x0, CAM_A);             //CAM.CAM_A.ADBS.GRAY_BLD_0
 ptr->writeReg(0x0d58, 0x10d, CAM_A);           //CAM.CAM_A.ADBS.GRAY_BLD_1
 ptr->writeReg(0x0d5c, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_R0
 ptr->writeReg(0x0d60, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_R1
 ptr->writeReg(0x0d64, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_R2
 ptr->writeReg(0x0d68, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_R3
 ptr->writeReg(0x0d6c, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_G0
 ptr->writeReg(0x0d70, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_G1
 ptr->writeReg(0x0d74, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_G2
 ptr->writeReg(0x0d78, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_G3
 ptr->writeReg(0x0d7c, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_B0
 ptr->writeReg(0x0d80, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_B1
 ptr->writeReg(0x0d84, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_B2
 ptr->writeReg(0x0d88, 0x0, CAM_A);             //CAM.CAM_A.ADBS.BIAS_LUT_B3
 ptr->writeReg(0x0d8c, 0x2000200, CAM_A);       //CAM.CAM_A.ADBS.GAIN_0
 ptr->writeReg(0x0d90, 0x200, CAM_A);           //CAM.CAM_A.ADBS.GAIN_1
 ptr->writeReg(0x0d94, 0x2000200, CAM_A);       //CAM.CAM_A.ADBS.IVGN_0
 ptr->writeReg(0x0d98, 0x200, CAM_A);           //CAM.CAM_A.ADBS.IVGN_1
 ptr->writeReg(0x0948, 0x60002, CAM_A);         //CAM.CAM_A.AE.PIX_HST1_XRNG
 ptr->writeReg(0x0930, 0x3b, CAM_A);            //CAM.CAM_A.AE.PIX_HST_CTL
 ptr->writeReg(0x093c, 0x1f0003, CAM_A);        //CAM.CAM_A.AE.PIX_HST0_YRNG
 ptr->writeReg(0x094c, 0x130012, CAM_A);        //CAM.CAM_A.AE.PIX_HST2_YRNG
 ptr->writeReg(0x0940, 0x2f001f, CAM_A);        //CAM.CAM_A.AE.PIX_HST0_XRNG
 ptr->writeReg(0x091c, 0x1000705, CAM_A);       //CAM.CAM_A.AE.RC_CNV_3
 ptr->writeReg(0x0920, 0x9039a, CAM_A);         //CAM.CAM_A.AE.RC_CNV_4
 ptr->writeReg(0x092c, 0xf8, CAM_A);            //CAM.CAM_A.AE.OVER_EXPO_CFG
 ptr->writeReg(0x0924, 0xc06a0501, CAM_A);      //CAM.CAM_A.AE.YGAMMA_0
 ptr->writeReg(0x0928, 0xce, CAM_A);            //CAM.CAM_A.AE.YGAMMA_1
 ptr->writeReg(0x0908, 0xff90cda, CAM_A);       //CAM.CAM_A.AE.LMT2_0
 ptr->writeReg(0x0970, 0xf27, CAM_A);           //CAM.CAM_A.AE.YCOEF
 ptr->writeReg(0x0900, 0xf27020f, CAM_A);       //CAM.CAM_A.AE.GAIN2_0
 ptr->writeReg(0x0950, 0x370023, CAM_A);        //CAM.CAM_A.AE.PIX_HST2_XRNG
 ptr->writeReg(0x095c, 0x560045, CAM_A);        //CAM.CAM_A.AE.PIX_HST4_YRNG
 ptr->writeReg(0x0954, 0x2f002c, CAM_A);        //CAM.CAM_A.AE.PIX_HST3_YRNG
 ptr->writeReg(0x0960, 0x37000f, CAM_A);        //CAM.CAM_A.AE.PIX_HST4_XRNG
 ptr->writeReg(0x0974, 0x2, CAM_A);             //CAM.CAM_A.AE.CCU_HST_END_Y
 ptr->writeReg(0x0964, 0x70002c, CAM_A);        //CAM.CAM_A.AE.PIX_HST5_YRNG
 ptr->writeReg(0x0958, 0x240013, CAM_A);        //CAM.CAM_A.AE.PIX_HST3_XRNG
 ptr->writeReg(0x0968, 0x370034, CAM_A);        //CAM.CAM_A.AE.PIX_HST5_XRNG
 ptr->writeReg(0x090c, 0xc4c, CAM_A);           //CAM.CAM_A.AE.LMT2_1
 ptr->writeReg(0x096c, 0x17, CAM_A);            //CAM.CAM_A.AE.STAT_EN
 ptr->writeReg(0x0944, 0x67003d, CAM_A);        //CAM.CAM_A.AE.PIX_HST1_YRNG
 ptr->writeReg(0x0904, 0x5f7, CAM_A);           //CAM.CAM_A.AE.GAIN2_1
 ptr->writeReg(0x0910, 0x50b06ed, CAM_A);       //CAM.CAM_A.AE.RC_CNV_0
 ptr->writeReg(0x0918, 0x7850425, CAM_A);       //CAM.CAM_A.AE.RC_CNV_2
 ptr->writeReg(0x0914, 0x45072b, CAM_A);        //CAM.CAM_A.AE.RC_CNV_1
 ptr->writeReg(0x0934, 0x1050003, CAM_A);       //CAM.CAM_A.AE.PIX_HST_SET
 ptr->writeReg(0x0938, 0x4122, CAM_A);          //CAM.CAM_A.AE.PIX_HST_SET_1
 ptr->writeReg(0x0978, 0x356c94a9, CAM_A);      //CAM.CAM_A.AE.SPARE
 ptr->writeReg(0x0610, 0x200000, CAM_A);        //CAM.CAM_A.AF.CON
 ptr->writeReg(0x0614, 0x0, CAM_A);             //CAM.CAM_A.AF.TH_0
 ptr->writeReg(0x0618, 0xffffff00, CAM_A);      //CAM.CAM_A.AF.TH_1
 ptr->writeReg(0x061c, 0xc0b0a17, CAM_A);       //CAM.CAM_A.AF.FLT_1
 ptr->writeReg(0x0620, 0xb0c0d0d, CAM_A);       //CAM.CAM_A.AF.FLT_2
 ptr->writeReg(0x0624, 0x2040709, CAM_A);       //CAM.CAM_A.AF.FLT_3
 ptr->writeReg(0x0628, 0xc0b0a17, CAM_A);       //CAM.CAM_A.AF.FLT_4
 ptr->writeReg(0x062c, 0xb0c0d0d, CAM_A);       //CAM.CAM_A.AF.FLT_5
 ptr->writeReg(0x0630, 0x2040709, CAM_A);       //CAM.CAM_A.AF.FLT_6
 ptr->writeReg(0x0634, 0x1000100, CAM_A);       //CAM.CAM_A.AF.FLT_7
 ptr->writeReg(0x0638, 0x1000100, CAM_A);       //CAM.CAM_A.AF.FLT_8
 ptr->writeReg(0x0640, 0x0, CAM_A);             //CAM.CAM_A.AF.SIZE
 ptr->writeReg(0x0644, 0x0, CAM_A);             //CAM.CAM_A.AF.VLD
 ptr->writeReg(0x0648, 0x320032, CAM_A);        //CAM.CAM_A.AF.BLK_0
 ptr->writeReg(0x064c, 0x200020, CAM_A);        //CAM.CAM_A.AF.BLK_1
 ptr->writeReg(0x0650, 0xffffffff, CAM_A);      //CAM.CAM_A.AF.TH_2
 ptr->writeReg(0x0654, 0x1000100, CAM_A);       //CAM.CAM_A.AF.FLT_9
 ptr->writeReg(0x0658, 0x7000700, CAM_A);       //CAM.CAM_A.AF.FLT_10
 ptr->writeReg(0x065c, 0x7000700, CAM_A);       //CAM.CAM_A.AF.FLT_11
 ptr->writeReg(0x0660, 0x7000700, CAM_A);       //CAM.CAM_A.AF.FLT_12
 ptr->writeReg(0x0670, 0x100, CAM_A);           //CAM.CAM_A.AF.LUT_H0_0
 ptr->writeReg(0x0674, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H0_1
 ptr->writeReg(0x0678, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H0_2
 ptr->writeReg(0x067c, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H0_3
 ptr->writeReg(0x0680, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H0_4
 ptr->writeReg(0x0690, 0x100, CAM_A);           //CAM.CAM_A.AF.LUT_H1_0
 ptr->writeReg(0x0694, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H1_1
 ptr->writeReg(0x0698, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H1_2
 ptr->writeReg(0x069c, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H1_3
 ptr->writeReg(0x06a0, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_H1_4
 ptr->writeReg(0x06b0, 0x100, CAM_A);           //CAM.CAM_A.AF.LUT_V_0
 ptr->writeReg(0x06b4, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_V_1
 ptr->writeReg(0x06b8, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_V_2
 ptr->writeReg(0x06bc, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_V_3
 ptr->writeReg(0x06c0, 0x0, CAM_A);             //CAM.CAM_A.AF.LUT_V_4
 ptr->writeReg(0x06c4, 0x40, CAM_A);            //CAM.CAM_A.AF.CON2
 ptr->writeReg(0x06c8, 0x100010, CAM_A);        //CAM.CAM_A.AF.BLK_2
 ptr->writeReg(0x0a50, 0xf01b0, CAM_A);         //CAM.CAM_A.AMX.CTL
 ptr->writeReg(0x0a54, 0x13f0000, CAM_A);       //CAM.CAM_A.AMX.CROP
 ptr->writeReg(0x0a58, 0xf0, CAM_A);            //CAM.CAM_A.AMX.VSIZE
 ptr->writeReg(0x0830, 0x20038, CAM_A);         //CAM.CAM_A.AWB.WIN_ORG
 ptr->writeReg(0x0834, 0x24001c, CAM_A);        //CAM.CAM_A.AWB.WIN_SIZE
 ptr->writeReg(0x0838, 0x240040, CAM_A);        //CAM.CAM_A.AWB.WIN_PIT
 ptr->writeReg(0x083c, 0x60004, CAM_A);         //CAM.CAM_A.AWB.WIN_NUM
 ptr->writeReg(0x0840, 0x2091e07, CAM_A);       //CAM.CAM_A.AWB.GAIN1_0
 ptr->writeReg(0x0844, 0x107f, CAM_A);          //CAM.CAM_A.AWB.GAIN1_1
 ptr->writeReg(0x0848, 0xfa50edc, CAM_A);       //CAM.CAM_A.AWB.LMT1_0
 ptr->writeReg(0x084c, 0x898, CAM_A);           //CAM.CAM_A.AWB.LMT1_1
 ptr->writeReg(0x0850, 0x2e0d04, CAM_A);        //CAM.CAM_A.AWB.LOW_THR
 ptr->writeReg(0x0854, 0xfce8ea, CAM_A);        //CAM.CAM_A.AWB.HI_THR
 ptr->writeReg(0x0858, 0x10410, CAM_A);         //CAM.CAM_A.AWB.PIXEL_CNT0
 ptr->writeReg(0x085c, 0x8208, CAM_A);          //CAM.CAM_A.AWB.PIXEL_CNT1
 ptr->writeReg(0x0860, 0x10410, CAM_A);         //CAM.CAM_A.AWB.PIXEL_CNT2
 ptr->writeReg(0x0864, 0x202ed, CAM_A);         //CAM.CAM_A.AWB.ERR_THR
 ptr->writeReg(0x0868, 0x37d03f5, CAM_A);       //CAM.CAM_A.AWB.ROT
 ptr->writeReg(0x086c, 0x38203a27, CAM_A);      //CAM.CAM_A.AWB.L0_X
 ptr->writeReg(0x0870, 0x1110372f, CAM_A);      //CAM.CAM_A.AWB.L0_Y
 ptr->writeReg(0x0874, 0x3ca358f, CAM_A);       //CAM.CAM_A.AWB.L1_X
 ptr->writeReg(0x0878, 0xda330f4, CAM_A);       //CAM.CAM_A.AWB.L1_Y
 ptr->writeReg(0x087c, 0x2bb83873, CAM_A);      //CAM.CAM_A.AWB.L2_X
 ptr->writeReg(0x0880, 0x33073e42, CAM_A);      //CAM.CAM_A.AWB.L2_Y
 ptr->writeReg(0x0884, 0xe843ede, CAM_A);       //CAM.CAM_A.AWB.L3_X
 ptr->writeReg(0x0888, 0x3a713e5c, CAM_A);      //CAM.CAM_A.AWB.L3_Y
 ptr->writeReg(0x088c, 0x8be293e, CAM_A);       //CAM.CAM_A.AWB.L4_X
 ptr->writeReg(0x0890, 0x39e83c40, CAM_A);      //CAM.CAM_A.AWB.L4_Y
 ptr->writeReg(0x0894, 0x150926a8, CAM_A);      //CAM.CAM_A.AWB.L5_X
 ptr->writeReg(0x0898, 0x157c26ee, CAM_A);      //CAM.CAM_A.AWB.L5_Y
 ptr->writeReg(0x089c, 0x181804ec, CAM_A);      //CAM.CAM_A.AWB.L6_X
 ptr->writeReg(0x08a0, 0x1ad829b4, CAM_A);      //CAM.CAM_A.AWB.L6_Y
 ptr->writeReg(0x08a4, 0x73839e2, CAM_A);       //CAM.CAM_A.AWB.L7_X
 ptr->writeReg(0x08a8, 0x3dfd3f9f, CAM_A);      //CAM.CAM_A.AWB.L7_Y
 ptr->writeReg(0x08ac, 0xf1e349f, CAM_A);       //CAM.CAM_A.AWB.L8_X
 ptr->writeReg(0x08b0, 0x12593e35, CAM_A);      //CAM.CAM_A.AWB.L8_Y
 ptr->writeReg(0x08b4, 0x3cf43ed5, CAM_A);      //CAM.CAM_A.AWB.L9_X
 ptr->writeReg(0x08b8, 0xa910340, CAM_A);       //CAM.CAM_A.AWB.L9_Y
 ptr->writeReg(0x08bc, 0x830c7ad5, CAM_A);      //CAM.CAM_A.AWB.SPARE
 ptr->writeReg(0x08c0, 0x116c7, CAM_A);         //CAM.CAM_A.AWB.MOTION_THR
 ptr->writeReg(0x08c4, 0x52500a3, CAM_A);       //CAM.CAM_A.AWB.RC_CNV_0
 ptr->writeReg(0x08c8, 0x1e005e1, CAM_A);       //CAM.CAM_A.AWB.RC_CNV_1
 ptr->writeReg(0x08cc, 0x66e0587, CAM_A);       //CAM.CAM_A.AWB.RC_CNV_2
 ptr->writeReg(0x08d0, 0x5c1056d, CAM_A);       //CAM.CAM_A.AWB.RC_CNV_3
 ptr->writeReg(0x08d4, 0x70a4c, CAM_A);         //CAM.CAM_A.AWB.RC_CNV_4
 ptr->writeReg(0x0a70, 0x2, CAM_A);             //CAM.CAM_A.BIN.CTL
 ptr->writeReg(0x0a74, 0x0, CAM_A);             //CAM.CAM_A.BIN.FTH
 ptr->writeReg(0x0a78, 0x0, CAM_A);             //CAM.CAM_A.BIN.SPARE
 ptr->writeReg(0x0580, 0xf00d8, CAM_A);         //CAM.CAM_A.BMX.CTL
 ptr->writeReg(0x0584, 0x13f0000, CAM_A);       //CAM.CAM_A.BMX.CROP
 ptr->writeReg(0x0588, 0xf0, CAM_A);            //CAM.CAM_A.BMX.VSIZE
 ptr->writeReg(0x0d30, 0xf02a0, CAM_A);         //CAM.CAM_A.BMX2.CTL
 ptr->writeReg(0x0d34, 0xffff0000, CAM_A);      //CAM.CAM_A.BMX2.CROP
 ptr->writeReg(0x0d38, 0xffff, CAM_A);          //CAM.CAM_A.BMX2.VSIZE
 ptr->writeReg(0x0420, 0xf5008020, CAM_A);      //CAM.CAM_A.BNR.BPC_CON
 ptr->writeReg(0x0424, 0x50c606e, CAM_A);       //CAM.CAM_A.BNR.BPC_TH1
 ptr->writeReg(0x0428, 0x40000258, CAM_A);      //CAM.CAM_A.BNR.BPC_TH2
 ptr->writeReg(0x042c, 0xb1200100, CAM_A);      //CAM.CAM_A.BNR.BPC_TH3
 ptr->writeReg(0x0430, 0xbb2c616e, CAM_A);      //CAM.CAM_A.BNR.BPC_TH4
 ptr->writeReg(0x0434, 0x30031, CAM_A);         //CAM.CAM_A.BNR.BPC_DTC
 ptr->writeReg(0x0438, 0x5090519, CAM_A);       //CAM.CAM_A.BNR.BPC_COR
 ptr->writeReg(0x043c, 0x0, CAM_A);             //CAM.CAM_A.BNR.BPC_TBLI1
 ptr->writeReg(0x0440, 0x0, CAM_A);             //CAM.CAM_A.BNR.BPC_TBLI2
 ptr->writeReg(0x0444, 0xc606e, CAM_A);         //CAM.CAM_A.BNR.BPC_TH1_C
 ptr->writeReg(0x0448, 0xc82258, CAM_A);        //CAM.CAM_A.BNR.BPC_TH2_C
 ptr->writeReg(0x044c, 0xb1200100, CAM_A);      //CAM.CAM_A.BNR.BPC_TH3_C
 ptr->writeReg(0x0450, 0x0, CAM_A);             //CAM.CAM_A.BNR.NR1_CON
 ptr->writeReg(0x0454, 0x50802003, CAM_A);      //CAM.CAM_A.BNR.NR1_CT_CON
 ptr->writeReg(0x0458, 0x0, CAM_A);             //CAM.CAM_A.BNR.NR1_CT_CON2
 ptr->writeReg(0x045c, 0x101, CAM_A);           //CAM.CAM_A.BNR.NR1_CT_CON3
 ptr->writeReg(0x0460, 0x10110, CAM_A);         //CAM.CAM_A.BNR.PDC_CON
 ptr->writeReg(0x0464, 0x100, CAM_A);           //CAM.CAM_A.BNR.PDC_GAIN_L0
 ptr->writeReg(0x0468, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_L1
 ptr->writeReg(0x046c, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_L2
 ptr->writeReg(0x0470, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_L3
 ptr->writeReg(0x0474, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_L4
 ptr->writeReg(0x0478, 0x100, CAM_A);           //CAM.CAM_A.BNR.PDC_GAIN_R0
 ptr->writeReg(0x047c, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_R1
 ptr->writeReg(0x0480, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_R2
 ptr->writeReg(0x0484, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_R3
 ptr->writeReg(0x0488, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_GAIN_R4
 ptr->writeReg(0x048c, 0x2800c8, CAM_A);        //CAM.CAM_A.BNR.PDC_TH_GB
 ptr->writeReg(0x0490, 0x12c0000, CAM_A);       //CAM.CAM_A.BNR.PDC_TH_IA
 ptr->writeReg(0x0494, 0x2000050, CAM_A);       //CAM.CAM_A.BNR.PDC_TH_HD
 ptr->writeReg(0x0498, 0x87768, CAM_A);         //CAM.CAM_A.BNR.PDC_SL
 ptr->writeReg(0x049c, 0x0, CAM_A);             //CAM.CAM_A.BNR.PDC_POS
 ptr->writeReg(0x09e0, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPG.SATU_1
 ptr->writeReg(0x09e4, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPG.SATU_2
 ptr->writeReg(0x09e8, 0x2000200, CAM_A);       //CAM.CAM_A.CPG.GAIN_1
 ptr->writeReg(0x09ec, 0x2000200, CAM_A);           //CAM.CAM_A.CPG.GAIN_2
 ptr->writeReg(0x09f0, 0x0, CAM_A);             //CAM.CAM_A.CPG.OFST_1
 ptr->writeReg(0x09f4, 0x0, CAM_A);             //CAM.CAM_A.CPG.OFST_2
 ptr->writeReg(0x0df0, 0xf0, CAM_A);            //CAM.CAM_A.CPN.HDR_CTL_EN
 ptr->writeReg(0x0df4, 0x0, CAM_A);             //CAM.CAM_A.CPN.IN_IMG_SIZE
 ptr->writeReg(0x0df8, 0x400040, CAM_A);        //CAM.CAM_A.CPN.ALGO_PARAM1
 ptr->writeReg(0x0dfc, 0x4000000, CAM_A);       //CAM.CAM_A.CPN.ALGO_PARAM2
 ptr->writeReg(0x0e00, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPN.GTM_X0X1
 ptr->writeReg(0x0e04, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPN.GTM_X2X3
 ptr->writeReg(0x0e08, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPN.GTM_X4X5
 ptr->writeReg(0x0e0c, 0xfff, CAM_A);           //CAM.CAM_A.CPN.GTM_X6
 ptr->writeReg(0x0e10, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPN.GTM_Y0Y1
 ptr->writeReg(0x0e14, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPN.GTM_Y2Y3
 ptr->writeReg(0x0e18, 0xfff0fff, CAM_A);       //CAM.CAM_A.CPN.GTM_Y4Y5
 ptr->writeReg(0x0e1c, 0xfff, CAM_A);           //CAM.CAM_A.CPN.GTM_Y6
 ptr->writeReg(0x0e20, 0x100, CAM_A);           //CAM.CAM_A.CPN.GTM_S0S1
 ptr->writeReg(0x0e24, 0x0, CAM_A);             //CAM.CAM_A.CPN.GTM_S2S3
 ptr->writeReg(0x0e28, 0x0, CAM_A);             //CAM.CAM_A.CPN.GTM_S4S5
 ptr->writeReg(0x0e2c, 0x0, CAM_A);             //CAM.CAM_A.CPN.GTM_S6S7
 ptr->writeReg(0x0190, 0x113, CAM_A);           //CAM.CAM_A.CQ.EN
 ptr->writeReg(0x0194, 0x10, CAM_A);            //CAM.CAM_A.CQ.THR0_CTL
 //ptr->writeReg(0x0198, 0xf5945708, CAM_A);    //CAM.CAM_A.CQ.THR0_BASEADDR
 ptr->writeReg(0x019c, 0xa917ab08, CAM_A);      //CAM.CAM_A.CQ.THR0_DESC_SIZE
 ptr->writeReg(0x01a0, 0x30, CAM_A);            //CAM.CAM_A.CQ.THR1_CTL
 //ptr->writeReg(0x01a4, 0x691fc2a6, CAM_A);    //CAM.CAM_A.CQ.THR1_BASEADDR
 ptr->writeReg(0x01a8, 0x4d592515, CAM_A);      //CAM.CAM_A.CQ.THR1_DESC_SIZE
 ptr->writeReg(0x01ac, 0x20, CAM_A);            //CAM.CAM_A.CQ.THR2_CTL
 //ptr->writeReg(0x01b0, 0x2220e223, CAM_A);    //CAM.CAM_A.CQ.THR2_BASEADDR
 ptr->writeReg(0x01b4, 0x100700a8, CAM_A);      //CAM.CAM_A.CQ.THR2_DESC_SIZE
 ptr->writeReg(0x01b8, 0x30, CAM_A);            //CAM.CAM_A.CQ.THR3_CTL
 //ptr->writeReg(0x01bc, 0xad4cb9d9, CAM_A);    //CAM.CAM_A.CQ.THR3_BASEADDR
 ptr->writeReg(0x01c0, 0x8e4734bf, CAM_A);      //CAM.CAM_A.CQ.THR3_DESC_SIZE
 ptr->writeReg(0x01c4, 0x10, CAM_A);            //CAM.CAM_A.CQ.THR4_CTL
 //ptr->writeReg(0x01c8, 0x85255e04, CAM_A);    //CAM.CAM_A.CQ.THR4_BASEADDR
 ptr->writeReg(0x01cc, 0x3f9c4ac6, CAM_A);      //CAM.CAM_A.CQ.THR4_DESC_SIZE
 ptr->writeReg(0x01d0, 0x10, CAM_A);            //CAM.CAM_A.CQ.THR5_CTL
 //ptr->writeReg(0x01d4, 0x1bade16d, CAM_A);    //CAM.CAM_A.CQ.THR5_BASEADDR
 ptr->writeReg(0x01d8, 0xb312eaaa, CAM_A);      //CAM.CAM_A.CQ.THR5_DESC_SIZE
 ptr->writeReg(0x01dc, 0x0, CAM_A);             //CAM.CAM_A.CQ.THR6_CTL
 //ptr->writeReg(0x01e0, 0xd4117112, CAM_A);    //CAM.CAM_A.CQ.THR6_BASEADDR
 ptr->writeReg(0x01e4, 0x429bf661, CAM_A);      //CAM.CAM_A.CQ.THR6_DESC_SIZE
 ptr->writeReg(0x01e8, 0x0, CAM_A);             //CAM.CAM_A.CQ.THR7_CTL
 //ptr->writeReg(0x01ec, 0xd2d1bdb5, CAM_A);    //CAM.CAM_A.CQ.THR7_BASEADDR
 ptr->writeReg(0x01f0, 0x3d9c4944, CAM_A);      //CAM.CAM_A.CQ.THR7_DESC_SIZE
 ptr->writeReg(0x01f4, 0x10, CAM_A);            //CAM.CAM_A.CQ.THR8_CTL
 //ptr->writeReg(0x01f8, 0xe616df9f, CAM_A);    //CAM.CAM_A.CQ.THR8_BASEADDR
 ptr->writeReg(0x01fc, 0x6f4a94c, CAM_A);       //CAM.CAM_A.CQ.THR8_DESC_SIZE
 ptr->writeReg(0x0200, 0x30, CAM_A);            //CAM.CAM_A.CQ.THR9_CTL
 //ptr->writeReg(0x0204, 0xf53501e6, CAM_A);    //CAM.CAM_A.CQ.THR9_BASEADDR
 ptr->writeReg(0x0208, 0xb51e0631, CAM_A);      //CAM.CAM_A.CQ.THR9_DESC_SIZE
 ptr->writeReg(0x020c, 0x20, CAM_A);            //CAM.CAM_A.CQ.THR10_CTL
 //ptr->writeReg(0x0210, 0xb0e31e6e, CAM_A);    //CAM.CAM_A.CQ.THR10_BASEADDR
 ptr->writeReg(0x0214, 0xc6397435, CAM_A);      //CAM.CAM_A.CQ.THR10_DESC_SIZE
 ptr->writeReg(0x0218, 0x10, CAM_A);            //CAM.CAM_A.CQ.THR11_CTL
 //ptr->writeReg(0x021c, 0x3938c2f, CAM_A);     //CAM.CAM_A.CQ.THR11_BASEADDR
 ptr->writeReg(0x0220, 0xe4434b1c, CAM_A);      //CAM.CAM_A.CQ.THR11_DESC_SIZE
 ptr->writeReg(0x0224, 0x30, CAM_A);            //CAM.CAM_A.CQ.THR12_CTL
 //ptr->writeReg(0x0228, 0x3aa0b8f8, CAM_A);    //CAM.CAM_A.CQ.THR12_BASEADDR
 ptr->writeReg(0x022c, 0x734020b4, CAM_A);      //CAM.CAM_A.CQ.THR12_DESC_SIZE
 ptr->writeReg(0x0000, 0x0, CAM_A);             //CAM.CAM_A.CTL.START
 ptr->writeReg(0x0004, 0x8158a403, CAM_A);      //CAM.CAM_A.CTL.EN
 ptr->writeReg(0x0008, 0x10065, CAM_A);         //CAM.CAM_A.CTL.DMA_EN
 ptr->writeReg(0x000c, 0x824e1094, CAM_A);      //CAM.CAM_A.CTL.FMT_SEL
 ptr->writeReg(0x0010, 0x16525010, CAM_A);      //CAM.CAM_A.CTL.SEL
 ptr->writeReg(0x0014, 0x10, CAM_A);            //CAM.CAM_A.CTL.MISC
 ptr->writeReg(0x0018, 0x2810000, CAM_A);       //CAM.CAM_A.CTL.EN2
 ptr->writeReg(0x0020, 0xc0000800, CAM_A);      //CAM.CAM_A.CTL.RAW_INT_EN
 ptr->writeReg(0x0024, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT_STATUS
 ptr->writeReg(0x0028, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT_STATUSX
 ptr->writeReg(0x0030, 0x1fff0000, CAM_A);      //CAM.CAM_A.CTL.RAW_INT2_EN
 ptr->writeReg(0x0034, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT2_STATUS
 ptr->writeReg(0x0038, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT2_STATUSX
 ptr->writeReg(0x0040, 0x2, CAM_A);             //CAM.CAM_A.CTL.SW_CTL
 ptr->writeReg(0x0044, 0x136e1275, CAM_A);      //CAM.CAM_A.CTL.AB_DONE_SEL
 ptr->writeReg(0x0048, 0x10cb388e, CAM_A);      //CAM.CAM_A.CTL.CD_DONE_SEL
 ptr->writeReg(0x004c, 0x10000018, CAM_A);      //CAM.CAM_A.CTL.UNI_DONE_SEL
 ptr->writeReg(0x0050, 0xb91721f8, CAM_A);      //CAM.CAM_A.CTL.SPARE0
 ptr->writeReg(0x0054, 0xefd00593, CAM_A);      //CAM.CAM_A.CTL.SPARE1
 ptr->writeReg(0x0058, 0x81b96889, CAM_A);      //CAM.CAM_A.CTL.SPARE2
 ptr->writeReg(0x005c, 0xa200, CAM_A);          //CAM.CAM_A.CTL.SW_PASS1_DONE
 ptr->writeReg(0x0060, 0x2544, CAM_A);          //CAM.CAM_A.CTL.FBC_RCNT_INC
 ptr->writeReg(0x0070, 0xe03c, CAM_A);          //CAM.CAM_A.CTL.DBG_SET
 ptr->writeReg(0x0074, 0x0, CAM_A);             //CAM.CAM_A.CTL.DBG_PORT
 ptr->writeReg(0x0078, 0x20140831, CAM_A);      //CAM.CAM_A.CTL.DATE_CODE
 ptr->writeReg(0x007c, 0x65990000, CAM_A);      //CAM.CAM_A.CTL.PROJ_CODE
 ptr->writeReg(0x0080, 0xfb1d1102, CAM_A);      //CAM.CAM_A.CTL.RAW_DCM_DIS
 ptr->writeReg(0x0084, 0x7ab0, CAM_A);          //CAM.CAM_A.CTL.DMA_DCM_DIS
 ptr->writeReg(0x0088, 0x0, CAM_A);             //CAM.CAM_A.CTL.TOP_DCM_DIS
 ptr->writeReg(0x0090, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_DCM_STATUS
 ptr->writeReg(0x0094, 0x3000, CAM_A);          //CAM.CAM_A.CTL.DMA_DCM_STATUS
 ptr->writeReg(0x0098, 0x0, CAM_A);             //CAM.CAM_A.CTL.TOP_DCM_STATUS
 ptr->writeReg(0x00a0, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_REQ_STATUS
 ptr->writeReg(0x00a4, 0x0, CAM_A);             //CAM.CAM_A.CTL.DMA_REQ_STATUS
 ptr->writeReg(0x00a8, 0xf9ffffff, CAM_A);      //CAM.CAM_A.CTL.RAW_RDY_STATUS
 ptr->writeReg(0x00ac, 0x10fff, CAM_A);         //CAM.CAM_A.CTL.DMA_RDY_STATUS
 ptr->writeReg(0x00b0, 0x22bcc7d, CAM_A);       //CAM.CAM_A.CTL.RAW_CCU_INT_EN
 ptr->writeReg(0x00b4, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_CCU_INT_STATUS
 ptr->writeReg(0x00b8, 0x1b95a55c, CAM_A);      //CAM.CAM_A.CTL.RAW_CCU_INT2_EN
 ptr->writeReg(0x00bc, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_CCU_INT2_STATUS
 ptr->writeReg(0x00c0, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT3_EN
 ptr->writeReg(0x00c4, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT3_STATUS
 ptr->writeReg(0x00c8, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_INT3_STATUSX
 ptr->writeReg(0x00d0, 0x40104, CAM_A);         //CAM.CAM_A.CTL.RAW_CCU_INT3_EN
 ptr->writeReg(0x00d4, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW_CCU_INT3_STATUS
 ptr->writeReg(0x00d8, 0x802, CAM_A);           //CAM.CAM_A.CTL.UNI_B_DONE_SEL
 ptr->writeReg(0x00e0, 0xa5209300, CAM_A);      //CAM.CAM_A.CTL.RAW2_DCM_DIS
 ptr->writeReg(0x00e4, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW2_DCM_STATUS
 ptr->writeReg(0x00e8, 0x0, CAM_A);             //CAM.CAM_A.CTL.RAW2_REQ_STATUS
 ptr->writeReg(0x00ec, 0xffffff00, CAM_A);      //CAM.CAM_A.CTL.RAW2_RDY_STATUS
 ptr->writeReg(0x0a90, 0x200, CAM_A);           //CAM.CAM_A.DBN.GAIN
 ptr->writeReg(0x0a94, 0x0, CAM_A);             //CAM.CAM_A.DBN.OFST
 ptr->writeReg(0x0a98, 0x0, CAM_A);             //CAM.CAM_A.DBN.SPARE
 ptr->writeReg(0x0ac0, 0x150005, CAM_A);        //CAM.CAM_A.DBS.SIGMA
 ptr->writeReg(0x0ac4, 0x10204, CAM_A);         //CAM.CAM_A.DBS.BSTBL_0
 ptr->writeReg(0x0ac8, 0x0, CAM_A);             //CAM.CAM_A.DBS.BSTBL_1
 ptr->writeReg(0x0acc, 0x0, CAM_A);             //CAM.CAM_A.DBS.BSTBL_2
 ptr->writeReg(0x0ad0, 0x0, CAM_A);             //CAM.CAM_A.DBS.BSTBL_3
 ptr->writeReg(0x0ad4, 0x840f000, CAM_A);       //CAM.CAM_A.DBS.CTL
 ptr->writeReg(0x0ad8, 0xffa, CAM_A);           //CAM.CAM_A.DBS.CTL_2
 ptr->writeReg(0x0adc, 0x0, CAM_A);             //CAM.CAM_A.DBS.SIGMA_2
 ptr->writeReg(0x0ae0, 0x20202020, CAM_A);      //CAM.CAM_A.DBS.YGN
 ptr->writeReg(0x0ae4, 0x0, CAM_A);             //CAM.CAM_A.DBS.SL_Y12
 ptr->writeReg(0x0ae8, 0x0, CAM_A);             //CAM.CAM_A.DBS.SL_Y34
 ptr->writeReg(0x0aec, 0x0, CAM_A);             //CAM.CAM_A.DBS.SL_G12
 ptr->writeReg(0x0af0, 0x0, CAM_A);             //CAM.CAM_A.DBS.SL_G34
 ptr->writeReg(0x0db0, 0xf0, CAM_A);            //CAM.CAM_A.DCPN.HDR_EN
 ptr->writeReg(0x0db4, 0x0, CAM_A);             //CAM.CAM_A.DCPN.IN_IMG_SIZE
 ptr->writeReg(0x0db8, 0x400040, CAM_A);        //CAM.CAM_A.DCPN.ALGO_PARAM1
 ptr->writeReg(0x0dbc, 0x4000000, CAM_A);       //CAM.CAM_A.DCPN.ALGO_PARAM2
 ptr->writeReg(0x0dc0, 0xfff, CAM_A);           //CAM.CAM_A.DCPN.GTM_X0
 ptr->writeReg(0x0dc4, 0xffff, CAM_A);          //CAM.CAM_A.DCPN.GTM_Y0
 ptr->writeReg(0x0dc8, 0x100, CAM_A);           //CAM.CAM_A.DCPN.GTM_S0
 ptr->writeReg(0x0dcc, 0x10, CAM_A);            //CAM.CAM_A.DCPN.GTM_S1
 ptr->writeReg(0x10e0, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_BASE_ADDR
 ptr->writeReg(0x10f4, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_YSIZE
 ptr->writeReg(0x10e8, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_OFST_ADDR
 ptr->writeReg(0x10fc, 0x10000010, CAM_A);      //CAM.CAM_A.DMA.LCSO_CON
 ptr->writeReg(0x10ec, 0x8355092d, CAM_A);      //CAM.CAM_A.DMA.LCSO_DRS
 ptr->writeReg(0x10f8, 0x25, CAM_A);            //CAM.CAM_A.DMA.LCSO_STRIDE
 ptr->writeReg(0x10f0, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_XSIZE
 ptr->writeReg(0x1000, 0xf8fff, CAM_A);         //CAM.CAM_A.DMA.SOFT_RSTSTAT
 ptr->writeReg(0x1004, 0x14ede273, CAM_A);      //CAM.CAM_A.DMA.CQ0I_BASE_ADDR
 ptr->writeReg(0x1008, 0x590f, CAM_A);          //CAM.CAM_A.DMA.CQ0I_XSIZE
 ptr->writeReg(0x100c, 0x0, CAM_A);             //CAM.CAM_A.DMA.VERTICAL_FLIP_EN
 ptr->writeReg(0x1010, 0x0, CAM_A);             //CAM.CAM_A.DMA.SOFT_RESET
 ptr->writeReg(0x1014, 0x6845c, CAM_A);         //CAM.CAM_A.DMA.LAST_ULTRA_EN
 ptr->writeReg(0x1018, 0x69000000, CAM_A);      //CAM.CAM_A.DMA.SPECIAL_FUN_EN
 ptr->writeReg(0x1020, 0x50661800, CAM_A);      //CAM.CAM_A.DMA.IMGO_BASE_ADDR
 ptr->writeReg(0x1028, 0x0, CAM_A);             //CAM.CAM_A.DMA.IMGO_OFST_ADDR
 ptr->writeReg(0x102c, 0x86af037c, CAM_A);      //CAM.CAM_A.DMA.IMGO_DRS
 ptr->writeReg(0x1030, 0x18f, CAM_A);           //CAM.CAM_A.DMA.IMGO_XSIZE
 ptr->writeReg(0x1034, 0xef, CAM_A);            //CAM.CAM_A.DMA.IMGO_YSIZE
 ptr->writeReg(0x1038, 0x10320, CAM_A);         //CAM.CAM_A.DMA.IMGO_STRIDE
 ptr->writeReg(0x103c, 0x400000f2, CAM_A);      //CAM.CAM_A.DMA.IMGO_CON
 ptr->writeReg(0x1040, 0x5b004e, CAM_A);        //CAM.CAM_A.DMA.IMGO_CON2
 ptr->writeReg(0x1044, 0x8e0004, CAM_A);        //CAM.CAM_A.DMA.IMGO_CON3
 ptr->writeReg(0x1048, 0x0, CAM_A);             //CAM.CAM_A.DMA.IMGO_CROP
 ptr->writeReg(0x104c, 0x809d000c, CAM_A);      //CAM.CAM_A.DMA.IMGO_CON4
 ptr->writeReg(0x1050, 0x50bb0a00, CAM_A);      //CAM.CAM_A.DMA.RRZO_BASE_ADDR
 ptr->writeReg(0x1058, 0x0, CAM_A);             //CAM.CAM_A.DMA.RRZO_OFST_ADDR
 ptr->writeReg(0x105c, 0xe1e012c, CAM_A);       //CAM.CAM_A.DMA.RRZO_DRS
 ptr->writeReg(0x1060, 0xef, CAM_A);            //CAM.CAM_A.DMA.RRZO_XSIZE
 ptr->writeReg(0x1064, 0x73, CAM_A);            //CAM.CAM_A.DMA.RRZO_YSIZE
 ptr->writeReg(0x1068, 0xf0180, CAM_A);         //CAM.CAM_A.DMA.RRZO_STRIDE
 ptr->writeReg(0x106c, 0x80000175, CAM_A);      //CAM.CAM_A.DMA.RRZO_CON
 ptr->writeReg(0x1070, 0x1140062, CAM_A);       //CAM.CAM_A.DMA.RRZO_CON2
 ptr->writeReg(0x1074, 0x8a0072, CAM_A);        //CAM.CAM_A.DMA.RRZO_CON3
 ptr->writeReg(0x1078, 0x0, CAM_A);             //CAM.CAM_A.DMA.RRZO_CROP
 ptr->writeReg(0x107c, 0x1340111, CAM_A);       //CAM.CAM_A.DMA.RRZO_CON4
 ptr->writeReg(0x1080, 0x528f6a00, CAM_A);      //CAM.CAM_A.DMA.AAO_BASE_ADDR
 ptr->writeReg(0x1088, 0x0, CAM_A);             //CAM.CAM_A.DMA.AAO_OFST_ADDR
 ptr->writeReg(0x108c, 0x8ace00c9, CAM_A);      //CAM.CAM_A.DMA.AAO_DRS
 ptr->writeReg(0x1090, 0x227, CAM_A);           //CAM.CAM_A.DMA.AAO_XSIZE
 ptr->writeReg(0x1094, 0x0, CAM_A);             //CAM.CAM_A.DMA.AAO_YSIZE
 ptr->writeReg(0x1098, 0x20282, CAM_A);         //CAM.CAM_A.DMA.AAO_STRIDE
 ptr->writeReg(0x109c, 0x8000000c, CAM_A);      //CAM.CAM_A.DMA.AAO_CON
 ptr->writeReg(0x10a0, 0xa0009, CAM_A);         //CAM.CAM_A.DMA.AAO_CON2
 ptr->writeReg(0x10a4, 0xb000b, CAM_A);         //CAM.CAM_A.DMA.AAO_CON3
 ptr->writeReg(0x10ac, 0x800a0008, CAM_A);      //CAM.CAM_A.DMA.AAO_CON4
 ptr->writeReg(0x10b0, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_BASE_ADDR
 ptr->writeReg(0x10b8, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_OFST_ADDR
 ptr->writeReg(0x10bc, 0xb970c45, CAM_A);       //CAM.CAM_A.DMA.AFO_DRS
 ptr->writeReg(0x10c0, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_XSIZE
 ptr->writeReg(0x10c4, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_YSIZE
 ptr->writeReg(0x10c8, 0x5b, CAM_A);            //CAM.CAM_A.DMA.AFO_STRIDE
 ptr->writeReg(0x10cc, 0x8000006e, CAM_A);      //CAM.CAM_A.DMA.AFO_CON
 ptr->writeReg(0x10d0, 0x1e0007, CAM_A);        //CAM.CAM_A.DMA.AFO_CON2
 ptr->writeReg(0x10d4, 0x660042, CAM_A);        //CAM.CAM_A.DMA.AFO_CON3
 ptr->writeReg(0x10dc, 0x1d000d, CAM_A);        //CAM.CAM_A.DMA.AFO_CON4
 ptr->writeReg(0x1100, 0x10001, CAM_A);         //CAM.CAM_A.DMA.LCSO_CON2
 ptr->writeReg(0x1104, 0xe000c, CAM_A);         //CAM.CAM_A.DMA.LCSO_CON3
 ptr->writeReg(0x110c, 0x80010000, CAM_A);      //CAM.CAM_A.DMA.LCSO_CON4
 ptr->writeReg(0x1110, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_BASE_ADDR
 ptr->writeReg(0x1118, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_OFST_ADDR
 ptr->writeReg(0x111c, 0x94b055a, CAM_A);       //CAM.CAM_A.DMA.UFEO_DRS
 ptr->writeReg(0x1120, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_XSIZE
 ptr->writeReg(0x1124, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_YSIZE
 ptr->writeReg(0x1128, 0x8, CAM_A);             //CAM.CAM_A.DMA.UFEO_STRIDE
 ptr->writeReg(0x112c, 0x1000001e, CAM_A);      //CAM.CAM_A.DMA.UFEO_CON
 ptr->writeReg(0x1130, 0x1c0015, CAM_A);        //CAM.CAM_A.DMA.UFEO_CON2
 ptr->writeReg(0x1134, 0x40002, CAM_A);         //CAM.CAM_A.DMA.UFEO_CON3
 ptr->writeReg(0x113c, 0x800b0007, CAM_A);      //CAM.CAM_A.DMA.UFEO_CON4
 ptr->writeReg(0x1140, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_BASE_ADDR
 ptr->writeReg(0x1148, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_OFST_ADDR
 ptr->writeReg(0x114c, 0xee9013f, CAM_A);       //CAM.CAM_A.DMA.PDO_DRS
 ptr->writeReg(0x1150, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_XSIZE
 ptr->writeReg(0x1154, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_YSIZE
 ptr->writeReg(0x1158, 0x60, CAM_A);            //CAM.CAM_A.DMA.PDO_STRIDE
 ptr->writeReg(0x115c, 0x80000032, CAM_A);      //CAM.CAM_A.DMA.PDO_CON
 ptr->writeReg(0x1160, 0x18000c, CAM_A);        //CAM.CAM_A.DMA.PDO_CON2
 ptr->writeReg(0x1164, 0x40001, CAM_A);         //CAM.CAM_A.DMA.PDO_CON3
 ptr->writeReg(0x116c, 0x80010000, CAM_A);      //CAM.CAM_A.DMA.PDO_CON4
 ptr->writeReg(0x1170, 0x0, CAM_A);             //CAM.CAM_A.DMA.BPCI_BASE_ADDR
 ptr->writeReg(0x1178, 0x0, CAM_A);             //CAM.CAM_A.DMA.BPCI_OFST_ADDR
 ptr->writeReg(0x117c, 0x7860054, CAM_A);       //CAM.CAM_A.DMA.BPCI_DRS
 ptr->writeReg(0x1180, 0x0, CAM_A);             //CAM.CAM_A.DMA.BPCI_XSIZE
 ptr->writeReg(0x1184, 0x0, CAM_A);             //CAM.CAM_A.DMA.BPCI_YSIZE
 ptr->writeReg(0x1188, 0x30, CAM_A);            //CAM.CAM_A.DMA.BPCI_STRIDE
 ptr->writeReg(0x118c, 0x4000001e, CAM_A);      //CAM.CAM_A.DMA.BPCI_CON
 ptr->writeReg(0x1190, 0x1e0018, CAM_A);        //CAM.CAM_A.DMA.BPCI_CON2
 ptr->writeReg(0x1194, 0xa000a, CAM_A);         //CAM.CAM_A.DMA.BPCI_CON3
 ptr->writeReg(0x119c, 0x80000000, CAM_A);      //CAM.CAM_A.DMA.BPCI_CON4
 ptr->writeReg(0x11a0, 0x0, CAM_A);             //CAM.CAM_A.DMA.CACI_BASE_ADDR
 ptr->writeReg(0x11a8, 0x0, CAM_A);             //CAM.CAM_A.DMA.CACI_OFST_ADDR
 ptr->writeReg(0x11ac, 0x1480b13, CAM_A);       //CAM.CAM_A.DMA.CACI_DRS
 ptr->writeReg(0x11b0, 0x2097, CAM_A);          //CAM.CAM_A.DMA.CACI_XSIZE
 ptr->writeReg(0x11b4, 0x3480, CAM_A);          //CAM.CAM_A.DMA.CACI_YSIZE
 ptr->writeReg(0x11b8, 0x4013e54c, CAM_A);      //CAM.CAM_A.DMA.CACI_STRIDE
 ptr->writeReg(0x11bc, 0x10000b90, CAM_A);      //CAM.CAM_A.DMA.CACI_CON
 ptr->writeReg(0x11c0, 0x47b0a01, CAM_A);       //CAM.CAM_A.DMA.CACI_CON2
 ptr->writeReg(0x11c4, 0x3520939, CAM_A);       //CAM.CAM_A.DMA.CACI_CON3
 ptr->writeReg(0x11cc, 0x862d0e1e, CAM_A);      //CAM.CAM_A.DMA.CACI_CON4
 ptr->writeReg(0x11d0, 0x0, CAM_A);             //CAM.CAM_A.DMA.LSCI_BASE_ADDR
 ptr->writeReg(0x11d8, 0x0, CAM_A);             //CAM.CAM_A.DMA.LSCI_OFST_ADDR
 ptr->writeReg(0x11dc, 0x881a018c, CAM_A);      //CAM.CAM_A.DMA.LSCI_DRS
 ptr->writeReg(0x11e0, 0x0, CAM_A);             //CAM.CAM_A.DMA.LSCI_XSIZE
 ptr->writeReg(0x11e4, 0x0, CAM_A);             //CAM.CAM_A.DMA.LSCI_YSIZE
 ptr->writeReg(0x11e8, 0x16005d, CAM_A);        //CAM.CAM_A.DMA.LSCI_STRIDE
 ptr->writeReg(0x11ec, 0x1000000f, CAM_A);      //CAM.CAM_A.DMA.LSCI_CON
 ptr->writeReg(0x11f0, 0xf0009, CAM_A);         //CAM.CAM_A.DMA.LSCI_CON2
 ptr->writeReg(0x11f4, 0x60004, CAM_A);         //CAM.CAM_A.DMA.LSCI_CON3
 ptr->writeReg(0x11fc, 0xf000f, CAM_A);         //CAM.CAM_A.DMA.LSCI_CON4
 ptr->writeReg(0x1200, 0x0, CAM_A);             //CAM.CAM_A.DMA.LSC3I_BASE_ADDR
 ptr->writeReg(0x1208, 0x0, CAM_A);             //CAM.CAM_A.DMA.LSC3I_OFST_ADDR
 ptr->writeReg(0x120c, 0xca90969, CAM_A);       //CAM.CAM_A.DMA.LSC3I_DRS
 ptr->writeReg(0x1210, 0x723f, CAM_A);          //CAM.CAM_A.DMA.LSC3I_XSIZE
 ptr->writeReg(0x1214, 0xc2f0, CAM_A);          //CAM.CAM_A.DMA.LSC3I_YSIZE
 ptr->writeReg(0x1218, 0x819c10e7, CAM_A);      //CAM.CAM_A.DMA.LSC3I_STRIDE
 ptr->writeReg(0x121c, 0x80000c39, CAM_A);      //CAM.CAM_A.DMA.LSC3I_CON
 ptr->writeReg(0x1220, 0x995093c, CAM_A);       //CAM.CAM_A.DMA.LSC3I_CON2
 ptr->writeReg(0x1224, 0xcd80612, CAM_A);       //CAM.CAM_A.DMA.LSC3I_CON3
 ptr->writeReg(0x122c, 0x48a0ea5, CAM_A);       //CAM.CAM_A.DMA.LSC3I_CON4
 ptr->writeReg(0x1230, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDI_BASE_ADDR
 ptr->writeReg(0x1234, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDI_OFST_ADDR
 ptr->writeReg(0x123c, 0x838b012b, CAM_A);      //CAM.CAM_A.DMA.PDI_DRS
 ptr->writeReg(0x1240, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDI_XSIZE
 ptr->writeReg(0x1244, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDI_YSIZE
 ptr->writeReg(0x1248, 0x81010003, CAM_A);      //CAM.CAM_A.DMA.PDI_STRIDE
 ptr->writeReg(0x124c, 0x1000001f, CAM_A);      //CAM.CAM_A.DMA.PDI_CON
 ptr->writeReg(0x1250, 0x13000f, CAM_A);        //CAM.CAM_A.DMA.PDI_CON2
 ptr->writeReg(0x1254, 0x13000d, CAM_A);        //CAM.CAM_A.DMA.PDI_CON3
 ptr->writeReg(0x125c, 0x1d001c, CAM_A);        //CAM.CAM_A.DMA.PDI_CON4
 ptr->writeReg(0x1260, 0x515eb800, CAM_A);      //CAM.CAM_A.DMA.PSO_BASE_ADDR
 ptr->writeReg(0x1264, 0x0, CAM_A);             //CAM.CAM_A.DMA.PSO_OFST_ADDR
 ptr->writeReg(0x126c, 0xf0e012c, CAM_A);       //CAM.CAM_A.DMA.PSO_DRS
 ptr->writeReg(0x1270, 0x257, CAM_A);           //CAM.CAM_A.DMA.PSO_XSIZE
 ptr->writeReg(0x1274, 0x0, CAM_A);             //CAM.CAM_A.DMA.PSO_YSIZE
 ptr->writeReg(0x1278, 0x10302a9, CAM_A);       //CAM.CAM_A.DMA.PSO_STRIDE
 ptr->writeReg(0x127c, 0x40000036, CAM_A);      //CAM.CAM_A.DMA.PSO_CON
 ptr->writeReg(0x1280, 0x180001, CAM_A);        //CAM.CAM_A.DMA.PSO_CON2
 ptr->writeReg(0x1284, 0x330020, CAM_A);        //CAM.CAM_A.DMA.PSO_CON3
 ptr->writeReg(0x128c, 0xa0004, CAM_A);         //CAM.CAM_A.DMA.PSO_CON4
 ptr->writeReg(0x1290, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_BASE_ADDR
 ptr->writeReg(0x1294, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_OFST_ADDR
 ptr->writeReg(0x129c, 0x9140104, CAM_A);       //CAM.CAM_A.DMA.LMVO_DRS
 ptr->writeReg(0x12a0, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_XSIZE
 ptr->writeReg(0x12a4, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_YSIZE
 ptr->writeReg(0x12a8, 0x46132, CAM_A);         //CAM.CAM_A.DMA.LMVO_STRIDE
 ptr->writeReg(0x12ac, 0x80000016, CAM_A);      //CAM.CAM_A.DMA.LMVO_CON
 ptr->writeReg(0x12b0, 0xa2a021b, CAM_A);       //CAM.CAM_A.DMA.LMVO_CON2
 ptr->writeReg(0x12b4, 0x8c60c73, CAM_A);       //CAM.CAM_A.DMA.LMVO_CON3
 ptr->writeReg(0x12bc, 0xde70e17, CAM_A);       //CAM.CAM_A.DMA.LMVO_CON4
 ptr->writeReg(0x12c0, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_BASE_ADDR
 ptr->writeReg(0x12c4, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_OFST_ADDR
 ptr->writeReg(0x12cc, 0x808104e6, CAM_A);      //CAM.CAM_A.DMA.FLKO_DRS
 ptr->writeReg(0x12d0, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_XSIZE
 ptr->writeReg(0x12d4, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_YSIZE
 ptr->writeReg(0x12d8, 0x1d9b8, CAM_A);         //CAM.CAM_A.DMA.FLKO_STRIDE
 ptr->writeReg(0x12dc, 0x10000020, CAM_A);      //CAM.CAM_A.DMA.FLKO_CON
 ptr->writeReg(0x12e0, 0x80006, CAM_A);         //CAM.CAM_A.DMA.FLKO_CON2
 ptr->writeReg(0x12e4, 0x15000a, CAM_A);        //CAM.CAM_A.DMA.FLKO_CON3
 ptr->writeReg(0x12ec, 0x200020, CAM_A);        //CAM.CAM_A.DMA.FLKO_CON4
 ptr->writeReg(0x12f0, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_BASE_ADDR
 ptr->writeReg(0x12f4, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_OFST_ADDR
 ptr->writeReg(0x12fc, 0x8fd30644, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_DRS
 ptr->writeReg(0x1300, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_XSIZE
 ptr->writeReg(0x1304, 0x1, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_YSIZE
 ptr->writeReg(0x1308, 0x2, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_STRIDE
 ptr->writeReg(0x130c, 0x8000002f, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_CON
 ptr->writeReg(0x1310, 0x6320937, CAM_A);       //CAM.CAM_A.DMA.RSSO_A_CON2
 ptr->writeReg(0x1314, 0xba608b4, CAM_A);       //CAM.CAM_A.DMA.RSSO_A_CON3
 ptr->writeReg(0x131c, 0x8ed60639, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_CON4
 ptr->writeReg(0x1320, 0x50736800, CAM_A);      //CAM.CAM_A.DMA.UFGO_BASE_ADDR
 ptr->writeReg(0x1324, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFGO_OFST_ADDR
 ptr->writeReg(0x132c, 0x84ac0598, CAM_A);      //CAM.CAM_A.DMA.UFGO_DRS
 ptr->writeReg(0x1330, 0x1, CAM_A);             //CAM.CAM_A.DMA.UFGO_XSIZE
 ptr->writeReg(0x1334, 0x73, CAM_A);            //CAM.CAM_A.DMA.UFGO_YSIZE
 ptr->writeReg(0x1338, 0x8, CAM_A);             //CAM.CAM_A.DMA.UFGO_STRIDE
 ptr->writeReg(0x133c, 0x2000001a, CAM_A);      //CAM.CAM_A.DMA.UFGO_CON
 ptr->writeReg(0x1340, 0xe0c086e, CAM_A);       //CAM.CAM_A.DMA.UFGO_CON2
 ptr->writeReg(0x1344, 0x3380834, CAM_A);       //CAM.CAM_A.DMA.UFGO_CON3
 ptr->writeReg(0x134c, 0x950b3f, CAM_A);        //CAM.CAM_A.DMA.UFGO_CON4
 ptr->writeReg(0x1350, 0x80000000, CAM_A);      //CAM.CAM_A.DMA.ERR_CTRL
 ptr->writeReg(0x1360, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.IMGO_ERR_STAT
 ptr->writeReg(0x1364, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.RRZO_ERR_STAT
 ptr->writeReg(0x1368, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.AAO_ERR_STAT
 ptr->writeReg(0x136c, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.AFO_ERR_STAT
 ptr->writeReg(0x1370, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.LCSO_ERR_STAT
 ptr->writeReg(0x1374, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.UFEO_ERR_STAT
 ptr->writeReg(0x1378, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.PDO_ERR_STAT
 ptr->writeReg(0x137c, 0xfff0000, CAM_A);       //CAM.CAM_A.DMA.BPCI_ERR_STAT
 ptr->writeReg(0x1380, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.CACI_ERR_STAT
 ptr->writeReg(0x1384, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.LSCI_ERR_STAT
 ptr->writeReg(0x1388, 0xf45d0000, CAM_A);      //CAM.CAM_A.DMA.LSC3I_ERR_STAT
 ptr->writeReg(0x138c, 0xfff0000, CAM_A);       //CAM.CAM_A.DMA.PDI_ERR_STAT
 ptr->writeReg(0x1390, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.LMVO_ERR_STAT
 ptr->writeReg(0x1394, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.FLKO_ERR_STAT
 ptr->writeReg(0x1398, 0x2ed60000, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_ERR_STAT
 ptr->writeReg(0x139c, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.UFGO_ERR_STAT
 ptr->writeReg(0x13a0, 0xffff0000, CAM_A);      //CAM.CAM_A.DMA.PSO_ERR_STAT
 ptr->writeReg(0x13ac, 0x83a70ce9, CAM_A);      //CAM.CAM_A.DMA.DEBUG_ADDR
 ptr->writeReg(0x13b0, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSV1
 ptr->writeReg(0x13b4, 0xffffffff, CAM_A);      //CAM.CAM_A.DMA.RSV2
 ptr->writeReg(0x13b8, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSV3
 ptr->writeReg(0x13bc, 0xffffffff, CAM_A);      //CAM.CAM_A.DMA.RSV4
 ptr->writeReg(0x13c0, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSV5
 ptr->writeReg(0x13c4, 0xffffffff, CAM_A);      //CAM.CAM_A.DMA.RSV6
 ptr->writeReg(0x13c8, 0x58d8a1, CAM_A);        //CAM.CAM_A.DMA.DEBUG_SEL
 ptr->writeReg(0x13cc, 0x451, CAM_A);           //CAM.CAM_A.DMA.BW_SELF_TEST
 ptr->writeReg(0x1400, 0x887, CAM_A);           //CAM.CAM_A.DMA.FRAME_HEADER_EN
 ptr->writeReg(0x1404, 0x50fe4e00, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_BASE_ADDR
 ptr->writeReg(0x1408, 0x52144400, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_BASE_ADDR
 ptr->writeReg(0x140c, 0x50f41a00, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_BASE_ADDR
 ptr->writeReg(0x1410, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_FH_BASE_ADDR
 ptr->writeReg(0x1414, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_FH_BASE_ADDR
 ptr->writeReg(0x1418, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_FH_BASE_ADDR
 ptr->writeReg(0x141c, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_FH_BASE_ADDR
 ptr->writeReg(0x1420, 0x52f00000, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_BASE_ADDR
 ptr->writeReg(0x1424, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_FH_BASE_ADDR
 ptr->writeReg(0x1428, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_FH_BASE_ADDR
 ptr->writeReg(0x142c, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_FH_BASE_ADDR
 ptr->writeReg(0x1430, 0x50f8a400, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_BASE_ADDR
 ptr->writeReg(0x1434, 0x8a2c6015, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_2
 ptr->writeReg(0x1438, 0xd12a1137, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_3
 ptr->writeReg(0x143c, 0xe36a3d5d, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_4
 ptr->writeReg(0x1440, 0xf868c3a2, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_5
 ptr->writeReg(0x1444, 0x1c461d01, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_6
 ptr->writeReg(0x1448, 0x8f7c18a5, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_7
 ptr->writeReg(0x144c, 0x15bb1896, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_8
 ptr->writeReg(0x1450, 0xeeac8742, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_9
 ptr->writeReg(0x1454, 0x19787aff, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_10
 ptr->writeReg(0x1458, 0xaebe1c52, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_11
 ptr->writeReg(0x145c, 0x82f54256, CAM_A);      //CAM.CAM_A.DMA.IMGO_FH_SPARE_12
 ptr->writeReg(0x1460, 0x0, CAM_A);             //CAM.CAM_A.DMA.IMGO_FH_SPARE_13
 ptr->writeReg(0x1464, 0x0, CAM_A);             //CAM.CAM_A.DMA.IMGO_FH_SPARE_14
 ptr->writeReg(0x1468, 0x0, CAM_A);             //CAM.CAM_A.DMA.IMGO_FH_SPARE_15
 ptr->writeReg(0x146c, 0x0, CAM_A);             //CAM.CAM_A.DMA.IMGO_FH_SPARE_16
 ptr->writeReg(0x1474, 0xd2c3d9bf, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_2
 ptr->writeReg(0x1478, 0xb07c0278, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_3
 ptr->writeReg(0x147c, 0xd10da816, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_4
 ptr->writeReg(0x1480, 0x4b6edc7b, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_5
 ptr->writeReg(0x1484, 0x926324c8, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_6
 ptr->writeReg(0x1488, 0x71a961c9, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_7
 ptr->writeReg(0x148c, 0xc2c67fbf, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_8
 ptr->writeReg(0x1490, 0x4096e537, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_9
 ptr->writeReg(0x1494, 0x9c4a0ae7, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_10
 ptr->writeReg(0x1498, 0x4028acfe, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_11
 ptr->writeReg(0x149c, 0x90febed9, CAM_A);      //CAM.CAM_A.DMA.RRZO_FH_SPARE_12
 ptr->writeReg(0x14a0, 0x0, CAM_A);             //CAM.CAM_A.DMA.RRZO_FH_SPARE_13
 ptr->writeReg(0x14a4, 0x0, CAM_A);             //CAM.CAM_A.DMA.RRZO_FH_SPARE_14
 ptr->writeReg(0x14a8, 0x0, CAM_A);             //CAM.CAM_A.DMA.RRZO_FH_SPARE_15
 ptr->writeReg(0x14ac, 0x0, CAM_A);             //CAM.CAM_A.DMA.RRZO_FH_SPARE_16
 ptr->writeReg(0x14b4, 0x11db6ccc, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_2
 ptr->writeReg(0x14b8, 0xf4fba222, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_3
 ptr->writeReg(0x14bc, 0x22d674ee, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_4
 ptr->writeReg(0x14c0, 0xb3406d9a, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_5
 ptr->writeReg(0x14c4, 0xe9e670d, CAM_A);       //CAM.CAM_A.DMA.AAO_FH_SPARE_6
 ptr->writeReg(0x14c8, 0xd2e6f76f, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_7
 ptr->writeReg(0x14cc, 0xa6286cd2, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_8
 ptr->writeReg(0x14d0, 0xaa580e5c, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_9
 ptr->writeReg(0x14d4, 0xe60df06a, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_10
 ptr->writeReg(0x14d8, 0xffba4912, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_11
 ptr->writeReg(0x14dc, 0xa60c151a, CAM_A);      //CAM.CAM_A.DMA.AAO_FH_SPARE_12
 ptr->writeReg(0x14e0, 0x0, CAM_A);             //CAM.CAM_A.DMA.AAO_FH_SPARE_13
 ptr->writeReg(0x14e4, 0x0, CAM_A);             //CAM.CAM_A.DMA.AAO_FH_SPARE_14
 ptr->writeReg(0x14e8, 0x0, CAM_A);             //CAM.CAM_A.DMA.AAO_FH_SPARE_15
 ptr->writeReg(0x14ec, 0x0, CAM_A);             //CAM.CAM_A.DMA.AAO_FH_SPARE_16
 ptr->writeReg(0x14f4, 0x3be2091c, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_2
 ptr->writeReg(0x14f8, 0xb4ad9006, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_3
 ptr->writeReg(0x14fc, 0xe2888526, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_4
 ptr->writeReg(0x1500, 0xf444d5a6, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_5
 ptr->writeReg(0x1504, 0xc3a1c370, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_6
 ptr->writeReg(0x1508, 0x61f8566b, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_7
 ptr->writeReg(0x150c, 0xff61dcca, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_8
 ptr->writeReg(0x1510, 0xed43c77e, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_9
 ptr->writeReg(0x1514, 0xc748028a, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_10
 ptr->writeReg(0x1518, 0x79d9ef77, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_11
 ptr->writeReg(0x151c, 0x18bf8ecb, CAM_A);      //CAM.CAM_A.DMA.AFO_FH_SPARE_12
 ptr->writeReg(0x1520, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_FH_SPARE_13
 ptr->writeReg(0x1524, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_FH_SPARE_14
 ptr->writeReg(0x1528, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_FH_SPARE_15
 ptr->writeReg(0x152c, 0x0, CAM_A);             //CAM.CAM_A.DMA.AFO_FH_SPARE_16
 ptr->writeReg(0x1534, 0xc0ef0729, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_2
 ptr->writeReg(0x1538, 0x2af048b7, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_3
 ptr->writeReg(0x153c, 0xabc5d2c7, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_4
 ptr->writeReg(0x1540, 0x4623744a, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_5
 ptr->writeReg(0x1544, 0x3276cd69, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_6
 ptr->writeReg(0x1548, 0x535f1bde, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_7
 ptr->writeReg(0x154c, 0x18e1dd26, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_8
 ptr->writeReg(0x1550, 0x19dae926, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_9
 ptr->writeReg(0x1554, 0x31e1920, CAM_A);       //CAM.CAM_A.DMA.LCSO_FH_SPARE_10
 ptr->writeReg(0x1558, 0x9aca0682, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_11
 ptr->writeReg(0x155c, 0xec013ea3, CAM_A);      //CAM.CAM_A.DMA.LCSO_FH_SPARE_12
 ptr->writeReg(0x1560, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_FH_SPARE_13
 ptr->writeReg(0x1564, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_FH_SPARE_14
 ptr->writeReg(0x1568, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_FH_SPARE_15
 ptr->writeReg(0x156c, 0x0, CAM_A);             //CAM.CAM_A.DMA.LCSO_FH_SPARE_16
 ptr->writeReg(0x1574, 0xc84a73dd, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_2
 ptr->writeReg(0x1578, 0x56ac3d5b, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_3
 ptr->writeReg(0x157c, 0x1dffd092, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_4
 ptr->writeReg(0x1580, 0x2cf171fd, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_5
 ptr->writeReg(0x1584, 0xe9cd6c50, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_6
 ptr->writeReg(0x1588, 0x26ee121c, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_7
 ptr->writeReg(0x158c, 0x761681af, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_8
 ptr->writeReg(0x1590, 0x4e00bce0, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_9
 ptr->writeReg(0x1594, 0x2d331acf, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_10
 ptr->writeReg(0x1598, 0xda312229, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_11
 ptr->writeReg(0x159c, 0x97477c11, CAM_A);      //CAM.CAM_A.DMA.UFEO_FH_SPARE_12
 ptr->writeReg(0x15a0, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_FH_SPARE_13
 ptr->writeReg(0x15a4, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_FH_SPARE_14
 ptr->writeReg(0x15a8, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_FH_SPARE_15
 ptr->writeReg(0x15ac, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFEO_FH_SPARE_16
 ptr->writeReg(0x15b4, 0xbcaff78a, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_2
 ptr->writeReg(0x15b8, 0x2ceabbf6, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_3
 ptr->writeReg(0x15bc, 0xdc2fc25d, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_4
 ptr->writeReg(0x15c0, 0x93d9a59e, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_5
 ptr->writeReg(0x15c4, 0xf33620e0, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_6
 ptr->writeReg(0x15c8, 0xa48b1a0d, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_7
 ptr->writeReg(0x15cc, 0x4a6cf1be, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_8
 ptr->writeReg(0x15d0, 0x3b90d1be, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_9
 ptr->writeReg(0x15d4, 0xb87ada04, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_10
 ptr->writeReg(0x15d8, 0x8b0fc823, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_11
 ptr->writeReg(0x15dc, 0xa7161ed3, CAM_A);      //CAM.CAM_A.DMA.PDO_FH_SPARE_12
 ptr->writeReg(0x15e0, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_FH_SPARE_13
 ptr->writeReg(0x15e4, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_FH_SPARE_14
 ptr->writeReg(0x15e8, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_FH_SPARE_15
 ptr->writeReg(0x15ec, 0x0, CAM_A);             //CAM.CAM_A.DMA.PDO_FH_SPARE_16
 ptr->writeReg(0x15f0, 0x6c022c0d, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_4
 ptr->writeReg(0x15f4, 0xef5b7bd8, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_2
 ptr->writeReg(0x15f8, 0xad5d410e, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_3
 ptr->writeReg(0x1600, 0x50e0d63a, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_5
 ptr->writeReg(0x1604, 0x7fc46868, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_6
 ptr->writeReg(0x1608, 0x2e506b88, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_7
 ptr->writeReg(0x160c, 0x2262e3d7, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_8
 ptr->writeReg(0x1614, 0x22eacb53, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_9
 ptr->writeReg(0x1618, 0x3c2ef775, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_10
 ptr->writeReg(0x161c, 0x2b947411, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_11
 ptr->writeReg(0x1620, 0xaa920f0d, CAM_A);      //CAM.CAM_A.DMA.PSO_FH_SPARE_12
 ptr->writeReg(0x1624, 0x0, CAM_A);             //CAM.CAM_A.DMA.PSO_FH_SPARE_13
 ptr->writeReg(0x1628, 0x0, CAM_A);             //CAM.CAM_A.DMA.PSO_FH_SPARE_14
 ptr->writeReg(0x162c, 0x0, CAM_A);             //CAM.CAM_A.DMA.PSO_FH_SPARE_15
 ptr->writeReg(0x1630, 0x0, CAM_A);             //CAM.CAM_A.DMA.PSO_FH_SPARE_16
 ptr->writeReg(0x1634, 0xb9efd571, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_2
 ptr->writeReg(0x1638, 0x9c187982, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_3
 ptr->writeReg(0x163c, 0x5d67df84, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_4
 ptr->writeReg(0x1640, 0xc5dc4d68, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_5
 ptr->writeReg(0x1644, 0xab64caa5, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_6
 ptr->writeReg(0x1648, 0x344f361e, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_7
 ptr->writeReg(0x164c, 0x48ffef5a, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_8
 ptr->writeReg(0x1654, 0x3cfdf165, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_9
 ptr->writeReg(0x1658, 0x8360f92, CAM_A);       //CAM.CAM_A.DMA.LMVO_FH_SPARE_10
 ptr->writeReg(0x165c, 0x3b8fe54e, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_11
 ptr->writeReg(0x1660, 0x71001554, CAM_A);      //CAM.CAM_A.DMA.LMVO_FH_SPARE_12
 ptr->writeReg(0x1664, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_FH_SPARE_13
 ptr->writeReg(0x1668, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_FH_SPARE_14
 ptr->writeReg(0x166c, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_FH_SPARE_15
 ptr->writeReg(0x1670, 0x0, CAM_A);             //CAM.CAM_A.DMA.LMVO_FH_SPARE_16
 ptr->writeReg(0x1674, 0x65166d51, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_2
 ptr->writeReg(0x1678, 0x18773366, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_3
 ptr->writeReg(0x167c, 0xba3ad1c7, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_4
 ptr->writeReg(0x1680, 0x9219e737, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_5
 ptr->writeReg(0x1684, 0x6ae81453, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_6
 ptr->writeReg(0x1688, 0xcba09084, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_7
 ptr->writeReg(0x168c, 0x69663f8c, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_8
 ptr->writeReg(0x1694, 0x4054da94, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_9
 ptr->writeReg(0x1698, 0xf905f3af, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_10
 ptr->writeReg(0x169c, 0xfcb166b2, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_11
 ptr->writeReg(0x16a0, 0xcd177cd5, CAM_A);      //CAM.CAM_A.DMA.FLKO_FH_SPARE_12
 ptr->writeReg(0x16a4, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_FH_SPARE_13
 ptr->writeReg(0x16a8, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_FH_SPARE_14
 ptr->writeReg(0x16ac, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_FH_SPARE_15
 ptr->writeReg(0x16b0, 0x0, CAM_A);             //CAM.CAM_A.DMA.FLKO_FH_SPARE_16
 ptr->writeReg(0x16b4, 0x3de17abd, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_2
 ptr->writeReg(0x16b8, 0x267123ce, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_3
 ptr->writeReg(0x16bc, 0xc3b2af61, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_4
 ptr->writeReg(0x16e0, 0x2429be7, CAM_A);       //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_5
 ptr->writeReg(0x16e4, 0xf3bbe544, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_6
 ptr->writeReg(0x16e8, 0xe9fd9416, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_7
 ptr->writeReg(0x16ec, 0x39c5c926, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_8
 ptr->writeReg(0x16f4, 0x5de4931, CAM_A);       //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_9
 ptr->writeReg(0x16f8, 0xcc361a7e, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_10
 ptr->writeReg(0x16fc, 0xa159e067, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_11
 ptr->writeReg(0x1700, 0xdc45ed59, CAM_A);      //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_12
 ptr->writeReg(0x1704, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_13
 ptr->writeReg(0x1708, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_14
 ptr->writeReg(0x170c, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_15
 ptr->writeReg(0x1710, 0x0, CAM_A);             //CAM.CAM_A.DMA.RSSO_A_FH_SPARE_16
 ptr->writeReg(0x1714, 0x69dd27c5, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_2
 ptr->writeReg(0x1718, 0x30662bbc, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_3
 ptr->writeReg(0x171c, 0x246440d3, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_4
 ptr->writeReg(0x1720, 0x496d3421, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_5
 ptr->writeReg(0x1724, 0x71060f4b, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_6
 ptr->writeReg(0x1728, 0x7fd41256, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_7
 ptr->writeReg(0x172c, 0xfd473645, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_8
 ptr->writeReg(0x1730, 0x6d34bdde, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_9
 ptr->writeReg(0x1734, 0x92ec84cb, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_10
 ptr->writeReg(0x1738, 0xb39e46e1, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_11
 ptr->writeReg(0x173c, 0xe9758cff, CAM_A);      //CAM.CAM_A.DMA.UFGO_FH_SPARE_12
 ptr->writeReg(0x1740, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFGO_FH_SPARE_13
 ptr->writeReg(0x1744, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFGO_FH_SPARE_14
 ptr->writeReg(0x1748, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFGO_FH_SPARE_15
 ptr->writeReg(0x174c, 0x0, CAM_A);             //CAM.CAM_A.DMA.UFGO_FH_SPARE_16
 ptr->writeReg(0x0330, 0xf01b0, CAM_A);         //CAM.CAM_A.DMX.CTL
 ptr->writeReg(0x0334, 0x1c70000, CAM_A);       //CAM.CAM_A.DMX.CROP
 ptr->writeReg(0x0338, 0xf0, CAM_A);            //CAM.CAM_A.DMX.VSIZE
 ptr->writeReg(0x0c70, 0x9, CAM_A);             //CAM.CAM_A.EIS.PREP_ME_CTRL1
 ptr->writeReg(0x0c74, 0x506c, CAM_A);          //CAM.CAM_A.EIS.PREP_ME_CTRL2
 ptr->writeReg(0x0c78, 0x0, CAM_A);             //CAM.CAM_A.EIS.LMV_TH
 ptr->writeReg(0x0c7c, 0x0, CAM_A);             //CAM.CAM_A.EIS.FL_OFFSET
 ptr->writeReg(0x0c80, 0x0, CAM_A);             //CAM.CAM_A.EIS.MB_OFFSET
 ptr->writeReg(0x0c84, 0x0, CAM_A);             //CAM.CAM_A.EIS.MB_INTERVAL
 ptr->writeReg(0x0c88, 0x0, CAM_A);             //CAM.CAM_A.EIS.GMV
 ptr->writeReg(0x0c8c, 0xf0000, CAM_A);         //CAM.CAM_A.EIS.ERR_CTRL
 ptr->writeReg(0x0c90, 0x0, CAM_A);             //CAM.CAM_A.EIS.IMAGE_CTRL
 ptr->writeReg(0x0110, 0x0, CAM_A);             //CAM.CAM_A.FBC_IMGO.CTL1
 ptr->writeReg(0x0114, 0x0, CAM_A);             //CAM.CAM_A.FBC_IMGO.CTL2
 ptr->writeReg(0x0118, 0x0, CAM_A);             //CAM.CAM_A.FBC_RRZO.CTL1
 ptr->writeReg(0x011c, 0x0, CAM_A);             //CAM.CAM_A.FBC_RRZO.CTL2
 ptr->writeReg(0x0120, 0x0, CAM_A);             //CAM.CAM_A.FBC_UFEO.CTL1
 ptr->writeReg(0x0124, 0x0, CAM_A);             //CAM.CAM_A.FBC_UFEO.CTL2
 ptr->writeReg(0x0128, 0x0, CAM_A);             //CAM.CAM_A.FBC_LCSO.CTL1
 ptr->writeReg(0x012c, 0x0, CAM_A);             //CAM.CAM_A.FBC_LCSO.CTL2
 ptr->writeReg(0x0130, 0x0, CAM_A);             //CAM.CAM_A.FBC_AFO.CTL1
 ptr->writeReg(0x0134, 0x0, CAM_A);             //CAM.CAM_A.FBC_AFO.CTL2
 ptr->writeReg(0x0138, 0x0, CAM_A);             //CAM.CAM_A.FBC_AAO.CTL1
 ptr->writeReg(0x013c, 0x0, CAM_A);             //CAM.CAM_A.FBC_AAO.CTL2
 ptr->writeReg(0x0140, 0x0, CAM_A);             //CAM.CAM_A.FBC_PDO.CTL1
 ptr->writeReg(0x0144, 0x0, CAM_A);             //CAM.CAM_A.FBC_PDO.CTL2
 ptr->writeReg(0x0148, 0x0, CAM_A);             //CAM.CAM_A.FBC_PSO.CTL1
 ptr->writeReg(0x014c, 0x0, CAM_A);             //CAM.CAM_A.FBC_PSO.CTL2
 ptr->writeReg(0x0150, 0x0, CAM_A);             //CAM.CAM_A.FBC_FLKO.CTL1
 ptr->writeReg(0x0154, 0x0, CAM_A);             //CAM.CAM_A.FBC_FLKO.CTL2
 ptr->writeReg(0x0158, 0x0, CAM_A);             //CAM.CAM_A.FBC_LMVO.CTL1
 ptr->writeReg(0x015c, 0x0, CAM_A);             //CAM.CAM_A.FBC_LMVO.CTL2
 ptr->writeReg(0x0160, 0x0, CAM_A);             //CAM.CAM_A.FBC_RSSO.CTL1
 ptr->writeReg(0x0164, 0x0, CAM_A);             //CAM.CAM_A.FBC_RSSO.CTL2
 ptr->writeReg(0x0168, 0x0, CAM_A);             //CAM.CAM_A.FBC_UFGO.CTL1
 ptr->writeReg(0x016c, 0x0, CAM_A);             //CAM.CAM_A.FBC_UFGO.CTL2
 ptr->writeReg(0x0c50, 0x0, CAM_A);             //CAM.CAM_A.FLK_A.CON
 ptr->writeReg(0x0c54, 0x0, CAM_A);             //CAM.CAM_A.FLK_A.OFST
 ptr->writeReg(0x0c58, 0x0, CAM_A);             //CAM.CAM_A.FLK_A.SIZE
 ptr->writeReg(0x0c5c, 0x66, CAM_A);            //CAM.CAM_A.FLK_A.NUM
 ptr->writeReg(0x0cc0, 0x0, CAM_A);             //CAM.CAM_A.HDS.MODE
 ptr->writeReg(0x0710, 0xf2008014, CAM_A);      //CAM.CAM_A.HLR.CFG
 ptr->writeReg(0x0718, 0x2000200, CAM_A);       //CAM.CAM_A.HLR.GAIN
 ptr->writeReg(0x071c, 0x2000200, CAM_A);       //CAM.CAM_A.HLR.GAIN_1
 ptr->writeReg(0x0720, 0x0, CAM_A);             //CAM.CAM_A.HLR.OFST
 ptr->writeReg(0x0724, 0x0, CAM_A);             //CAM.CAM_A.HLR.OFST_1
 ptr->writeReg(0x0728, 0x4000400, CAM_A);       //CAM.CAM_A.HLR.IVGN
 ptr->writeReg(0x072c, 0x4000400, CAM_A);       //CAM.CAM_A.HLR.IVGN_1
 ptr->writeReg(0x0730, 0x0, CAM_A);             //CAM.CAM_A.HLR.KC
 ptr->writeReg(0x0734, 0x40, CAM_A);            //CAM.CAM_A.HLR.CFG_1
 ptr->writeReg(0x0738, 0x800080, CAM_A);        //CAM.CAM_A.HLR.SL_PARA
 ptr->writeReg(0x073c, 0x800080, CAM_A);        //CAM.CAM_A.HLR.SL_PARA_1
 ptr->writeReg(0x0790, 0xf014001, CAM_A);       //CAM.CAM_A.LCS25.CON
 ptr->writeReg(0x0794, 0x0, CAM_A);             //CAM.CAM_A.LCS25.ST
 ptr->writeReg(0x0798, 0x0, CAM_A);             //CAM.CAM_A.LCS25.AWS
 ptr->writeReg(0x079c, 0x10000, CAM_A);         //CAM.CAM_A.LCS25.FLR
 ptr->writeReg(0x07a0, 0x0, CAM_A);             //CAM.CAM_A.LCS25.LRZR_1
 ptr->writeReg(0x07a4, 0x0, CAM_A);             //CAM.CAM_A.LCS25.LRZR_2
 ptr->writeReg(0x07a8, 0xfff0fff, CAM_A);       //CAM.CAM_A.LCS25.SATU_1
 ptr->writeReg(0x07ac, 0xfff0fff, CAM_A);       //CAM.CAM_A.LCS25.SATU_2
 ptr->writeReg(0x07b0, 0x2000200, CAM_A);       //CAM.CAM_A.LCS25.GAIN_1
 ptr->writeReg(0x07b4, 0x2000200, CAM_A);       //CAM.CAM_A.LCS25.GAIN_2
 ptr->writeReg(0x07b8, 0x0, CAM_A);             //CAM.CAM_A.LCS25.OFST_1
 ptr->writeReg(0x07bc, 0x0, CAM_A);             //CAM.CAM_A.LCS25.OFST_2
 ptr->writeReg(0x07c0, 0x200, CAM_A);           //CAM.CAM_A.LCS25.G2G_CNV_1
 ptr->writeReg(0x07c4, 0x0, CAM_A);             //CAM.CAM_A.LCS25.G2G_CNV_2
 ptr->writeReg(0x07c8, 0x200, CAM_A);           //CAM.CAM_A.LCS25.G2G_CNV_3
 ptr->writeReg(0x07cc, 0x0, CAM_A);             //CAM.CAM_A.LCS25.G2G_CNV_4
 ptr->writeReg(0x07d0, 0x90200, CAM_A);         //CAM.CAM_A.LCS25.G2G_CNV_5
 ptr->writeReg(0x07d4, 0x12c0000, CAM_A);       //CAM.CAM_A.LCS25.LPF
 ptr->writeReg(0x05d0, 0x20400000, CAM_A);      //CAM.CAM_A.LSC.CTL1
 ptr->writeReg(0x05d4, 0xc000, CAM_A);          //CAM.CAM_A.LSC.CTL2
 ptr->writeReg(0x05d8, 0xc000, CAM_A);          //CAM.CAM_A.LSC.CTL3
 ptr->writeReg(0x05dc, 0xff00ff, CAM_A);        //CAM.CAM_A.LSC.LBLOCK
 ptr->writeReg(0x05e0, 0x20202020, CAM_A);      //CAM.CAM_A.LSC.RATIO_0
 ptr->writeReg(0x05e4, 0x0, CAM_A);             //CAM.CAM_A.LSC.TPIPE_OFST
 ptr->writeReg(0x05e8, 0x0, CAM_A);             //CAM.CAM_A.LSC.TPIPE_SIZE
 ptr->writeReg(0x05ec, 0x0, CAM_A);             //CAM.CAM_A.LSC.GAIN_TH
 ptr->writeReg(0x05f0, 0x20202020, CAM_A);      //CAM.CAM_A.LSC.RATIO_1
 ptr->writeReg(0x05f4, 0xffc0ffc, CAM_A);       //CAM.CAM_A.LSC.UPB_B_GB
 ptr->writeReg(0x05f8, 0xffc0ffc, CAM_A);       //CAM.CAM_A.LSC.UPB_GR_R
 ptr->writeReg(0x03f0, 0x0, CAM_A);             //CAM.CAM_A.OBC.OFFST0
 ptr->writeReg(0x03f4, 0x0, CAM_A);             //CAM.CAM_A.OBC.OFFST1
 ptr->writeReg(0x03f8, 0x0, CAM_A);             //CAM.CAM_A.OBC.OFFST2
 ptr->writeReg(0x03fc, 0x0, CAM_A);             //CAM.CAM_A.OBC.OFFST3
 ptr->writeReg(0x0400, 0x0, CAM_A);             //CAM.CAM_A.OBC.GAIN0
 ptr->writeReg(0x0404, 0x0, CAM_A);             //CAM.CAM_A.OBC.GAIN1
 ptr->writeReg(0x0408, 0x0, CAM_A);             //CAM.CAM_A.OBC.GAIN2
 ptr->writeReg(0x040c, 0x0, CAM_A);             //CAM.CAM_A.OBC.GAIN3
 ptr->writeReg(0x0aa0, 0x0, CAM_A);             //CAM.CAM_A.PBN.TYPE
 ptr->writeReg(0x0aa4, 0x0, CAM_A);             //CAM.CAM_A.PBN.LST
 ptr->writeReg(0x0aa8, 0xffff, CAM_A);          //CAM.CAM_A.PBN.VSIZE
 ptr->writeReg(0x0b80, 0x0, CAM_A);             //CAM.CAM_A.PCP.CROP_CON1
 ptr->writeReg(0x0b84, 0x0, CAM_A);             //CAM.CAM_A.PCP.CROP_CON2
 ptr->writeReg(0x0bb0, 0x0, CAM_A);             //CAM.CAM_A.PDE.TBLI1
 ptr->writeReg(0x0bb4, 0x0, CAM_A);             //CAM.CAM_A.PDE.CTL
 ptr->writeReg(0x0bd0, 0xc001c, CAM_A);         //CAM.CAM_A.PS.AWB_WIN_ORG
 ptr->writeReg(0x0bd4, 0x26003c, CAM_A);        //CAM.CAM_A.PS.AWB_WIN_SIZE
 ptr->writeReg(0x0bd8, 0x26003c, CAM_A);        //CAM.CAM_A.PS.AWB_WIN_PIT
 ptr->writeReg(0x0bdc, 0x6000a, CAM_A);         //CAM.CAM_A.PS.AWB_WIN_NUM
 ptr->writeReg(0x0be0, 0x72f9, CAM_A);          //CAM.CAM_A.PS.AWB_PIXEL_CNT0
 ptr->writeReg(0x0be4, 0x72f9, CAM_A);          //CAM.CAM_A.PS.AWB_PIXEL_CNT1
 ptr->writeReg(0x0be8, 0x72f9, CAM_A);          //CAM.CAM_A.PS.AWB_PIXEL_CNT2
 ptr->writeReg(0x0bec, 0x72f9, CAM_A);          //CAM.CAM_A.PS.AWB_PIXEL_CNT3
 ptr->writeReg(0x0bf0, 0xc2804aa, CAM_A);       //CAM.CAM_A.PS.AE_YCOEF0
 ptr->writeReg(0x0bf4, 0x14841aaa, CAM_A);      //CAM.CAM_A.PS.AE_YCOEF1
 ptr->writeReg(0x0bf8, 0x8, CAM_A);             //CAM.CAM_A.PS.DATA_TYPE
 ptr->writeReg(0x0bfc, 0x230, CAM_A);           //CAM.CAM_A.PS.HST_CFG
 ptr->writeReg(0x0c00, 0x7dd3dda, CAM_A);       //CAM.CAM_A.PS.HST_ROI_X
 ptr->writeReg(0x0c04, 0x26ea3bfa, CAM_A);      //CAM.CAM_A.PS.HST_ROI_Y
 ptr->writeReg(0x0ba0, 0x0, CAM_A);             //CAM.CAM_A.PSB.CON
 ptr->writeReg(0x0ba4, 0x0, CAM_A);             //CAM.CAM_A.PSB.SIZE
 ptr->writeReg(0x09d0, 0x11, CAM_A);            //CAM.CAM_A.QBN1.MODE
 ptr->writeReg(0x0820, 0x0, CAM_A);             //CAM.CAM_A.QBN2.MODE
 ptr->writeReg(0x0c30, 0x0, CAM_A);             //CAM.CAM_A.QBN3.MODE
 ptr->writeReg(0x0800, 0x0, CAM_A);             //CAM.CAM_A.RCP.CROP_CON1
 ptr->writeReg(0x0804, 0x0, CAM_A);             //CAM.CAM_A.RCP.CROP_CON2
 ptr->writeReg(0x0ab0, 0x13f0000, CAM_A);       //CAM.CAM_A.RCP3.CROP_CON1
 ptr->writeReg(0x0ab4, 0xef0000, CAM_A);        //CAM.CAM_A.RCP3.CROP_CON2
 ptr->writeReg(0x0bc0, 0x0, CAM_A);             //CAM.CAM_A.RMB.MODE
 ptr->writeReg(0x0350, 0xffa000e2, CAM_A);      //CAM.CAM_A.RMG.HDR_CFG
 ptr->writeReg(0x0354, 0x400040, CAM_A);        //CAM.CAM_A.RMG.HDR_GAIN
 ptr->writeReg(0x0358, 0x400, CAM_A);           //CAM.CAM_A.RMG.HDR_CFG2
 ptr->writeReg(0x0390, 0xf01143ec, CAM_A);      //CAM.CAM_A.RMM.OSC
 ptr->writeReg(0x0394, 0x40245, CAM_A);         //CAM.CAM_A.RMM.MC
 ptr->writeReg(0x0398, 0x4000400, CAM_A);       //CAM.CAM_A.RMM.REVG_1
 ptr->writeReg(0x039c, 0x4000400, CAM_A);       //CAM.CAM_A.RMM.REVG_2
 ptr->writeReg(0x03a0, 0x200, CAM_A);           //CAM.CAM_A.RMM.LEOS
 ptr->writeReg(0x03a4, 0x50080, CAM_A);         //CAM.CAM_A.RMM.MC2
 ptr->writeReg(0x03a8, 0x0, CAM_A);             //CAM.CAM_A.RMM.DIFF_LB
 ptr->writeReg(0x03ac, 0x8088408, CAM_A);       //CAM.CAM_A.RMM.MA
 ptr->writeReg(0x03b0, 0x70800013, CAM_A);      //CAM.CAM_A.RMM.TUNE
 ptr->writeReg(0x0540, 0xf0130, CAM_A);         //CAM.CAM_A.RMX.CTL
 ptr->writeReg(0x0544, 0x7f0000, CAM_A);        //CAM.CAM_A.RMX.CROP
 ptr->writeReg(0x0548, 0x74, CAM_A);            //CAM.CAM_A.RMX.VSIZE
 ptr->writeReg(0x04c0, 0xfff0fff, CAM_A);       //CAM.CAM_A.RPG.SATU_1
 ptr->writeReg(0x04c4, 0xfff0fff, CAM_A);       //CAM.CAM_A.RPG.SATU_2
 ptr->writeReg(0x04c8, 0x2000200, CAM_A);       //CAM.CAM_A.RPG.GAIN_1
 ptr->writeReg(0x04cc, 0x2000200, CAM_A);       //CAM.CAM_A.RPG.GAIN_2
 ptr->writeReg(0x04d0, 0x0, CAM_A);             //CAM.CAM_A.RPG.OFST_1
 ptr->writeReg(0x04d4, 0x0, CAM_A);             //CAM.CAM_A.RPG.OFST_2
 ptr->writeReg(0x04e0, 0x191000df, CAM_A);      //CAM.CAM_A.RRZ.CTL
 ptr->writeReg(0x04e4, 0xf001c8, CAM_A);        //CAM.CAM_A.RRZ.IN_IMG
 ptr->writeReg(0x04e8, 0x740080, CAM_A);        //CAM.CAM_A.RRZ.OUT_IMG
 ptr->writeReg(0x04ec, 0x17546, CAM_A);         //CAM.CAM_A.RRZ.HORI_STEP
 ptr->writeReg(0x04f0, 0xca92, CAM_A);          //CAM.CAM_A.RRZ.VERT_STEP
 ptr->writeReg(0x04f4, 0x3f, CAM_A);            //CAM.CAM_A.RRZ.HORI_INT_OFST
 ptr->writeReg(0x04f8, 0x4c0b, CAM_A);          //CAM.CAM_A.RRZ.HORI_SUB_OFST
 ptr->writeReg(0x04fc, 0x30, CAM_A);            //CAM.CAM_A.RRZ.VERT_INT_OFST
 ptr->writeReg(0x0500, 0x40d6, CAM_A);          //CAM.CAM_A.RRZ.VERT_SUB_OFST
 ptr->writeReg(0x0504, 0x7c5907a2, CAM_A);      //CAM.CAM_A.RRZ.MODE_TH
 ptr->writeReg(0x0508, 0xd142, CAM_A);          //CAM.CAM_A.RRZ.MODE_CTL
 ptr->writeReg(0x050c, 0x1f48, CAM_A);          //CAM.CAM_A.RRZ.RLB_AOFST
 ptr->writeReg(0x0510, 0x14017a, CAM_A);        //CAM.CAM_A.RRZ.LBLD_CFG
 ptr->writeReg(0x0514, 0x3423, CAM_A);          //CAM.CAM_A.RRZ.NNIR_TBL_SEL
 ptr->writeReg(0x0ce0, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.CONTROL
 ptr->writeReg(0x0ce4, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.IN_IMG
 ptr->writeReg(0x0ce8, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.OUT_IMG
 ptr->writeReg(0x0cec, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.HORI_STEP
 ptr->writeReg(0x0cf0, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.VERT_STEP
 ptr->writeReg(0x0cf4, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.HORI_INT_OFST
 ptr->writeReg(0x0cf8, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.HORI_SUB_OFST
 ptr->writeReg(0x0cfc, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.VERT_INT_OFST
 ptr->writeReg(0x0d00, 0x0, CAM_A);             //CAM.CAM_A.RSS_A.VERT_SUB_OFST
 ptr->writeReg(0x04b0, 0x0, CAM_A);             //CAM.CAM_A.SCM.CFG0
 ptr->writeReg(0x04b4, 0xf, CAM_A);             //CAM.CAM_A.SCM.CFG1
 ptr->writeReg(0x0810, 0x10, CAM_A);            //CAM.CAM_A.SGG1.PGN
 ptr->writeReg(0x0814, 0x10080402, CAM_A);      //CAM.CAM_A.SGG1.GMRC_1
 ptr->writeReg(0x0818, 0x804020, CAM_A);        //CAM.CAM_A.SGG1.GMRC_2
 ptr->writeReg(0x0b90, 0x10, CAM_A);            //CAM.CAM_A.SGG2.PGN
 ptr->writeReg(0x0b94, 0x10080402, CAM_A);      //CAM.CAM_A.SGG2.GMRC_1
 ptr->writeReg(0x0b98, 0x804020, CAM_A);        //CAM.CAM_A.SGG2.GMRC_2
 ptr->writeReg(0x0c40, 0x10, CAM_A);            //CAM.CAM_A.SGG3.PGN
 ptr->writeReg(0x0c44, 0x10080402, CAM_A);      //CAM.CAM_A.SGG3.GMRC_1
 ptr->writeReg(0x0c48, 0x804020, CAM_A);        //CAM.CAM_A.SGG3.GMRC_2
 ptr->writeReg(0x0cb0, 0x10, CAM_A);            //CAM.CAM_A.SGG5.PGN
 ptr->writeReg(0x0cb4, 0x10080402, CAM_A);      //CAM.CAM_A.SGG5.GMRC_1
 ptr->writeReg(0x0cb8, 0x804020, CAM_A);        //CAM.CAM_A.SGG5.GMRC_2
 ptr->writeReg(0x0fa0, 0x0, CAM_A);             //CAM.CAM_A.SGM.R_OFST_TABLE0_3
 ptr->writeReg(0x0fa4, 0x0, CAM_A);             //CAM.CAM_A.SGM.R_OFST_TABLE4_7
 ptr->writeReg(0x0fa8, 0x0, CAM_A);             //CAM.CAM_A.SGM.R_OFST_TABLE8_11
 ptr->writeReg(0x0fac, 0x0, CAM_A);             //CAM.CAM_A.SGM.R_OFST_TABLE12_15
 ptr->writeReg(0x0fb0, 0x0, CAM_A);             //CAM.CAM_A.SGM.G_OFST_TABLE0_3
 ptr->writeReg(0x0fb4, 0x0, CAM_A);             //CAM.CAM_A.SGM.G_OFST_TABLE4_7
 ptr->writeReg(0x0fb8, 0x0, CAM_A);             //CAM.CAM_A.SGM.G_OFST_TABLE8_11
 ptr->writeReg(0x0fbc, 0x0, CAM_A);             //CAM.CAM_A.SGM.G_OFST_TABLE12_15
 ptr->writeReg(0x0fc0, 0x0, CAM_A);             //CAM.CAM_A.SGM.B_OFST_TABLE0_3
 ptr->writeReg(0x0fc4, 0x0, CAM_A);             //CAM.CAM_A.SGM.B_OFST_TABLE4_7
 ptr->writeReg(0x0fc8, 0x0, CAM_A);             //CAM.CAM_A.SGM.B_OFST_TABLE8_11
 ptr->writeReg(0x0fcc, 0x0, CAM_A);             //CAM.CAM_A.SGM.B_OFST_TABLE12_15
 ptr->writeReg(0x0b00, 0x0, CAM_A);             //CAM.CAM_A.SL2F.CEN
 ptr->writeReg(0x0b04, 0x0, CAM_A);             //CAM.CAM_A.SL2F.RR_CON0
 ptr->writeReg(0x0b08, 0x40000000, CAM_A);      //CAM.CAM_A.SL2F.RR_CON1
 ptr->writeReg(0x0b0c, 0xffc080, CAM_A);        //CAM.CAM_A.SL2F.GAIN
 ptr->writeReg(0x0b10, 0x8000800, CAM_A);       //CAM.CAM_A.SL2F.RZ
 ptr->writeReg(0x0b14, 0x0, CAM_A);             //CAM.CAM_A.SL2F.XOFF
 ptr->writeReg(0x0b18, 0x0, CAM_A);             //CAM.CAM_A.SL2F.YOFF
 ptr->writeReg(0x0b1c, 0x100, CAM_A);           //CAM.CAM_A.SL2F.SLP_CON0
 ptr->writeReg(0x0b20, 0x100, CAM_A);           //CAM.CAM_A.SL2F.SLP_CON1
 ptr->writeReg(0x0b24, 0x100, CAM_A);           //CAM.CAM_A.SL2F.SLP_CON2
 ptr->writeReg(0x0b28, 0x100, CAM_A);           //CAM.CAM_A.SL2F.SLP_CON3
 ptr->writeReg(0x0b2c, 0x0, CAM_A);             //CAM.CAM_A.SL2F.SIZE
 ptr->writeReg(0x0b40, 0x0, CAM_A);             //CAM.CAM_A.SL2J.CEN
 ptr->writeReg(0x0b44, 0x0, CAM_A);             //CAM.CAM_A.SL2J.RR_CON0
 ptr->writeReg(0x0b48, 0x40000000, CAM_A);      //CAM.CAM_A.SL2J.RR_CON1
 ptr->writeReg(0x0b4c, 0xffc080, CAM_A);        //CAM.CAM_A.SL2J.GAIN
 ptr->writeReg(0x0b50, 0x8000800, CAM_A);       //CAM.CAM_A.SL2J.RZ
 ptr->writeReg(0x0b54, 0x0, CAM_A);             //CAM.CAM_A.SL2J.XOFF
 ptr->writeReg(0x0b58, 0x0, CAM_A);             //CAM.CAM_A.SL2J.YOFF
 ptr->writeReg(0x0b5c, 0x100, CAM_A);           //CAM.CAM_A.SL2J.SLP_CON0
 ptr->writeReg(0x0b60, 0x100, CAM_A);           //CAM.CAM_A.SL2J.SLP_CON1
 ptr->writeReg(0x0b64, 0x100, CAM_A);           //CAM.CAM_A.SL2J.SLP_CON2
 ptr->writeReg(0x0b68, 0x100, CAM_A);           //CAM.CAM_A.SL2J.SLP_CON3
 ptr->writeReg(0x0b6c, 0x0, CAM_A);             //CAM.CAM_A.SL2J.SIZE
 ptr->writeReg(0x04a0, 0x0, CAM_A);             //CAM.CAM_A.STM.CFG0
 ptr->writeReg(0x04a4, 0xf, CAM_A);             //CAM.CAM_A.STM.CFG1
 ptr->writeReg(0x0230, 0x3f610f, CAM_A);        //CAM.CAM_A.TG.SEN_MODE
 ptr->writeReg(0x0234, 0x1002, CAM_A);          //CAM.CAM_A.TG.VF_CON
 ptr->writeReg(0x0238, 0x2800000, CAM_A);       //CAM.CAM_A.TG.SEN_GRAB_PXL
 ptr->writeReg(0x023c, 0xf00000, CAM_A);        //CAM.CAM_A.TG.SEN_GRAB_LIN
 ptr->writeReg(0x0240, 0x94080, CAM_A);         //CAM.CAM_A.TG.PATH_CFG
 ptr->writeReg(0x0244, 0x1730, CAM_A);          //CAM.CAM_A.TG.MEMIN_CTL
 ptr->writeReg(0x0248, 0x7c200dd, CAM_A);       //CAM.CAM_A.TG.INT1
 ptr->writeReg(0x024c, 0x58200c2, CAM_A);       //CAM.CAM_A.TG.INT2
 ptr->writeReg(0x0250, 0x0, CAM_A);             //CAM.CAM_A.TG.SOF_CNT
 ptr->writeReg(0x0254, 0xb2dffb8, CAM_A);       //CAM.CAM_A.TG.SOT_CNT
 ptr->writeReg(0x0258, 0x9e79ce6, CAM_A);       //CAM.CAM_A.TG.EOT_CNT
 ptr->writeReg(0x025c, 0x3c0000, CAM_A);        //CAM.CAM_A.TG.ERR_CTL
 ptr->writeReg(0x0260, 0x0, CAM_A);             //CAM.CAM_A.TG.DAT_NO
 ptr->writeReg(0x0264, 0x0, CAM_A);             //CAM.CAM_A.TG.FRM_CNT_ST
 ptr->writeReg(0x0268, 0x0, CAM_A);             //CAM.CAM_A.TG.FRMSIZE_ST
 ptr->writeReg(0x026c, 0x102, CAM_A);           //CAM.CAM_A.TG.INTER_ST
 ptr->writeReg(0x0270, 0x1613, CAM_A);          //CAM.CAM_A.TG.FLASHA_CTL
 ptr->writeReg(0x0274, 0xad9886, CAM_A);        //CAM.CAM_A.TG.FLASHA_LINE_CNT
 ptr->writeReg(0x0278, 0x35d773b6, CAM_A);      //CAM.CAM_A.TG.FLASHA_POS
 ptr->writeReg(0x027c, 0x7411, CAM_A);          //CAM.CAM_A.TG.FLASHB_CTL
 ptr->writeReg(0x0280, 0x973136, CAM_A);        //CAM.CAM_A.TG.FLASHB_LINE_CNT
 ptr->writeReg(0x0284, 0x35ab623c, CAM_A);      //CAM.CAM_A.TG.FLASHB_POS
 ptr->writeReg(0x0288, 0x508e9, CAM_A);         //CAM.CAM_A.TG.FLASHB_POS1
 ptr->writeReg(0x0290, 0x0, CAM_A);             //CAM.CAM_A.TG.I2C_CQ_TRIG
 ptr->writeReg(0x0294, 0xdff84aab, CAM_A);      //CAM.CAM_A.TG.CQ_TIMING
 ptr->writeReg(0x0298, 0x13, CAM_A);            //CAM.CAM_A.TG.CQ_NUM
 ptr->writeReg(0x02a0, 0x0, CAM_A);             //CAM.CAM_A.TG.TIME_STAMP
 ptr->writeReg(0x02a4, 0x101, CAM_A);           //CAM.CAM_A.TG.SUB_PERIOD
 ptr->writeReg(0x02a8, 0x0, CAM_A);             //CAM.CAM_A.TG.DAT_NO_R
 ptr->writeReg(0x02ac, 0x0, CAM_A);             //CAM.CAM_A.TG.FRMSIZE_ST_R
 ptr->writeReg(0x02b0, 0x10, CAM_A);            //CAM.CAM_A.TG.TIME_STAMP_CTL
 ptr->writeReg(0x02b4, 0x0, CAM_A);             //CAM.CAM_A.TG.TIME_STAMP_MSB
 ptr->writeReg(0x0d20, 0x0, CAM_A);             //CAM.CAM_A.UFE.CON
 ptr->writeReg(0x05c0, 0x10, CAM_A);            //CAM.CAM_A.UFEG.CON
 ptr->writeReg(0x0a30, 0x200, CAM_A);           //CAM.CAM_A.VBN.GAIN
 ptr->writeReg(0x0a34, 0x0, CAM_A);             //CAM.CAM_A.VBN.OFST
 ptr->writeReg(0x0a38, 0x0, CAM_A);             //CAM.CAM_A.VBN.TYPE
 ptr->writeReg(0x0a3c, 0x0, CAM_A);             //CAM.CAM_A.VBN.SPARE
 ptr->writeReg(0x0270, 0x1303, CAM_A);          //CAM.CAM_A.TG.FLASHA_CTL
 ptr->writeReg(0x0234, 0x1002, CAM_A);          //CAM.CAM_A.TG.VF_CON
