/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 *
 * MediaTek Inc. (C) 2010. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

#ifndef _MTK_PLATFORM_HARDWARE_MTKCAM_UTILS_V3_METADATAPROVIDER_CUSTOM_TAGTYPES_H_
#define _MTK_PLATFORM_HARDWARE_MTKCAM_UTILS_V3_METADATAPROVIDER_CUSTOM_TAGTYPES_H_


/******************************************************************************
 *
 ******************************************************************************/
template <uint32_t typeEnum> struct TypeEnum2Type{};
template <> struct TypeEnum2Type<TYPE_BYTE >    { typedef uint8_t type; };
template <> struct TypeEnum2Type<TYPE_INT32>    { typedef int32_t type; };
template <> struct TypeEnum2Type<TYPE_FLOAT>    { typedef float   type; };
template <> struct TypeEnum2Type<TYPE_INT64>    { typedef int64_t type; };
template <> struct TypeEnum2Type<TYPE_DOUBLE>   { typedef double  type; };
template <> struct TypeEnum2Type<TYPE_RATIONAL> { typedef camera_metadata_rational_t type; };
//
template <camera_metadata_tag tag> struct Tag2Type {};
#define _IMP_TAG2TYPE_(_type_enum_, _tag_) template <> struct Tag2Type<_tag_> { typedef TypeEnum2Type<_type_enum_>::type type; };
//
//  android_color_correction
_IMP_TAG2TYPE_(TYPE_BYTE ,      ANDROID_COLOR_CORRECTION_MODE)
_IMP_TAG2TYPE_(TYPE_RATIONAL,      ANDROID_COLOR_CORRECTION_TRANSFORM)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_COLOR_CORRECTION_GAINS)
//
//  android_control
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_ANTIBANDING_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AE_EXPOSURE_COMPENSATION)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_LOCK)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AE_REGIONS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AE_TARGET_FPS_RANGE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_PRECAPTURE_TRIGGER)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AF_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AF_REGIONS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AF_TRIGGER)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AWB_LOCK)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AWB_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AWB_REGIONS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_CAPTURE_INTENT)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_EFFECT_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_SCENE_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_VIDEO_STABILIZATION_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_AVAILABLE_ANTIBANDING_MODES)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_AVAILABLE_MODES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AE_COMPENSATION_RANGE)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_CONTROL_AE_COMPENSATION_STEP)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AF_AVAILABLE_MODES)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AVAILABLE_EFFECTS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AVAILABLE_SCENE_MODES)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AWB_AVAILABLE_MODES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_MAX_REGIONS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_SCENE_MODE_OVERRIDES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AE_PRECAPTURE_ID)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AE_STATE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AF_STATE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_CONTROL_AF_TRIGGER_ID)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_CONTROL_AWB_STATE)
//
//  android_demosaic
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_DEMOSAIC_MODE)
//
//  android_edge
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_EDGE_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_EDGE_STRENGTH)
//
//  android_flash
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_FLASH_FIRING_POWER)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_FLASH_FIRING_TIME)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_FLASH_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_FLASH_COLOR_TEMPERATURE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_FLASH_MAX_ENERGY)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_FLASH_STATE)
//
//  android_flash_info
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_FLASH_INFO_AVAILABLE)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_FLASH_INFO_CHARGE_DURATION)
//
//  android_geometric
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_GEOMETRIC_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_GEOMETRIC_STRENGTH)
//
//  android_hot_pixel
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_HOT_PIXEL_MODE)
//
//  android_hot_pixel_info
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_HOT_PIXEL_INFO_MAP)
//
//  android_jpeg
_IMP_TAG2TYPE_(TYPE_DOUBLE,     ANDROID_JPEG_GPS_COORDINATES)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_JPEG_GPS_PROCESSING_METHOD)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_JPEG_GPS_TIMESTAMP)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_JPEG_ORIENTATION)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_JPEG_QUALITY)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_JPEG_THUMBNAIL_QUALITY)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_JPEG_THUMBNAIL_SIZE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_JPEG_AVAILABLE_THUMBNAIL_SIZES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_JPEG_MAX_SIZE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_JPEG_SIZE)
//
//  android_lens
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_APERTURE)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_FILTER_DENSITY)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_FOCAL_LENGTH)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_FOCUS_DISTANCE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_LENS_OPTICAL_STABILIZATION_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_LENS_FACING)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_FOCUS_RANGE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_LENS_STATE)
//
//  android_lens_info
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_INFO_AVAILABLE_APERTURES)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_INFO_AVAILABLE_FILTER_DENSITIES)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_INFO_AVAILABLE_FOCAL_LENGTHS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_INFO_GEOMETRIC_CORRECTION_MAP)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_LENS_INFO_GEOMETRIC_CORRECTION_MAP_SIZE)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_INFO_HYPERFOCAL_DISTANCE)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_LENS_INFO_MINIMUM_FOCUS_DISTANCE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_LENS_INFO_SHADING_MAP_SIZE)
//
//  android_noise_reduction
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_NOISE_REDUCTION_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_NOISE_REDUCTION_STRENGTH)
//
//  android_quirks
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_QUIRKS_METERING_CROP_REGION)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_QUIRKS_TRIGGER_AF_WITH_AUTO)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_QUIRKS_USE_ZSL_FORMAT)
//
//  android_request
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REQUEST_FRAME_COUNT)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REQUEST_ID)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REQUEST_INPUT_STREAMS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_REQUEST_METADATA_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REQUEST_OUTPUT_STREAMS)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_REQUEST_TYPE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REQUEST_MAX_NUM_OUTPUT_STREAMS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REQUEST_MAX_NUM_REPROCESS_STREAMS)
//
//  android_scaler
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SCALER_CROP_REGION)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SCALER_AVAILABLE_FORMATS)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SCALER_AVAILABLE_JPEG_MIN_DURATIONS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SCALER_AVAILABLE_JPEG_SIZES)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_SCALER_AVAILABLE_MAX_DIGITAL_ZOOM)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SCALER_AVAILABLE_PROCESSED_MIN_DURATIONS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SCALER_AVAILABLE_PROCESSED_SIZES)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SCALER_AVAILABLE_RAW_MIN_DURATIONS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SCALER_AVAILABLE_RAW_SIZES)
//
//  android_sensor
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SENSOR_EXPOSURE_TIME)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SENSOR_FRAME_DURATION)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_SENSITIVITY)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_BASE_GAIN_FACTOR)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_BLACK_LEVEL_PATTERN)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_CALIBRATION_TRANSFORM1)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_CALIBRATION_TRANSFORM2)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_COLOR_TRANSFORM1)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_COLOR_TRANSFORM2)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_FORWARD_MATRIX1)
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_SENSOR_FORWARD_MATRIX2)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_MAX_ANALOG_SENSITIVITY)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_SENSOR_NOISE_MODEL_COEFFICIENTS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_ORIENTATION)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_SENSOR_REFERENCE_ILLUMINANT1)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_SENSOR_REFERENCE_ILLUMINANT2)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SENSOR_TIMESTAMP)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_SENSOR_TEMPERATURE)
//
//  android_sensor_info
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_INFO_ACTIVE_ARRAY_SIZE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_INFO_SENSITIVITY_RANGE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_SENSOR_INFO_COLOR_FILTER_ARRANGEMENT)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SENSOR_INFO_EXPOSURE_TIME_RANGE)
_IMP_TAG2TYPE_(TYPE_INT64,      ANDROID_SENSOR_INFO_MAX_FRAME_DURATION)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_SENSOR_INFO_PHYSICAL_SIZE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_INFO_PIXEL_ARRAY_SIZE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_SENSOR_INFO_WHITE_LEVEL)
//
//  android_shading
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_SHADING_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_SHADING_STRENGTH)
//
//  android_statistics
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_FACE_DETECT_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_HISTOGRAM_MODE)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_SHARPNESS_MAP_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_FACE_IDS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_FACE_LANDMARKS)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_FACE_RECTANGLES)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_FACE_SCORES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_HISTOGRAM)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_SHARPNESS_MAP)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_STATISTICS_LENS_SHADING_MAP )
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_STATISTICS_PREDICTED_COLOR_GAINS   )
_IMP_TAG2TYPE_(TYPE_RATIONAL,   ANDROID_STATISTICS_PREDICTED_COLOR_TRANSFORM )
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_SCENE_FLICKER )
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_LENS_SHADING_MAP_MODE )
//
//  android_statistics_info
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_INFO_HISTOGRAM_BUCKET_COUNT)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_INFO_MAX_FACE_COUNT)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_INFO_MAX_HISTOGRAM_COUNT)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_INFO_MAX_SHARPNESS_MAP_VALUE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_STATISTICS_INFO_SHARPNESS_MAP_SIZE)
//
//  android_tonemap
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_TONEMAP_CURVE_BLUE)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_TONEMAP_CURVE_GREEN)
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_TONEMAP_CURVE_RED)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_TONEMAP_MODE)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_TONEMAP_MAX_CURVE_POINTS)
//
//  android_led
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_LED_TRANSMIT)
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_LED_AVAILABLE_LEDS)
//
//  android_info
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_INFO_SUPPORTED_HARDWARE_LEVEL)
//
//  android_blacklevel
_IMP_TAG2TYPE_(TYPE_BYTE,       ANDROID_BLACK_LEVEL_LOCK)
//
//  android_reprocess
_IMP_TAG2TYPE_(TYPE_FLOAT,      ANDROID_REPROCESS_EFFECTIVE_EXPOSURE_FACTOR)
_IMP_TAG2TYPE_(TYPE_INT32,      ANDROID_REPROCESS_MAX_CAPTURE_STALL)

/******************************************************************************
 *
 ******************************************************************************/
#endif  //_MTK_PLATFORM_HARDWARE_MTKCAM_UTILS_V3_METADATAPROVIDER_CUSTOM_TAGTYPES_H_

