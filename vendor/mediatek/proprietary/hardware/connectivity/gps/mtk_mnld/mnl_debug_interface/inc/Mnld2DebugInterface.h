// This source code is generated by UdpGeneratorTool, not recommend to modify it directly
#ifndef __Mnld2DebugInterface_H__
#define __Mnld2DebugInterface_H__

#include "mtk_socket_utils.h"

#ifdef __cplusplus
extern "C" {
#endif

#define MNLD2DEBUG_INTERFACE_PROTOCOL_TYPE 304
#define MNLD2DEBUG_INTERFACE_BUFF_SIZE 269

/**
 * The interface from Mnld to Debug
 */
typedef enum {
    MNLD2DEBUG_INTERFACE_MNLD_ACK_DEBUG_REQ = 0,
    MNLD2DEBUG_INTERFACE_MNLD_UPDATE_REBOOT = 1,
    MNLD2DEBUG_INTERFACE_MNLD_UPDATE_GPS_STATUS = 2,
    MNLD2DEBUG_INTERFACE_MNLD_UPDATE_MESSAGE_INFO = 3,
} Mnld2DebugInterface_message_id;


typedef enum {
    MNLD2DEBUG_INTERFACE_MNLD_GPS_STATUS_CATEGORY_GPS_STOPPED = 0,
    MNLD2DEBUG_INTERFACE_MNLD_GPS_STATUS_CATEGORY_GPS_STARTED = 1,
    MNLD2DEBUG_INTERFACE_MNLD_GPS_STATUS_CATEGORY_END = 2147483647,
} Mnld2DebugInterface_MnldGpsStatusCategory;


// Mnld2DebugInterface_MnldGpsStatusCategory
const char* Mnld2DebugInterface_MnldGpsStatusCategory_to_string(Mnld2DebugInterface_MnldGpsStatusCategory data);
void Mnld2DebugInterface_MnldGpsStatusCategory_array_dump(Mnld2DebugInterface_MnldGpsStatusCategory data[], int size);

void Mnld2DebugInterface_MnldGpsStatusCategory_array_init(Mnld2DebugInterface_MnldGpsStatusCategory output[], int max_size);

bool Mnld2DebugInterface_MnldGpsStatusCategory_is_equal(Mnld2DebugInterface_MnldGpsStatusCategory data1, Mnld2DebugInterface_MnldGpsStatusCategory data2);
bool Mnld2DebugInterface_MnldGpsStatusCategory_array_is_equal(Mnld2DebugInterface_MnldGpsStatusCategory data1[], int size1, Mnld2DebugInterface_MnldGpsStatusCategory data2[], int size2);

bool Mnld2DebugInterface_MnldGpsStatusCategory_encode(char* buff, int* offset, Mnld2DebugInterface_MnldGpsStatusCategory data);
bool Mnld2DebugInterface_MnldGpsStatusCategory_array_encode(char* buff, int* offset, Mnld2DebugInterface_MnldGpsStatusCategory data[], int size);

void Mnld2DebugInterface_MnldGpsStatusCategory_decode(char* buff, int* offset, Mnld2DebugInterface_MnldGpsStatusCategory* output);
int Mnld2DebugInterface_MnldGpsStatusCategory_array_decode(char* buff, int* offset, Mnld2DebugInterface_MnldGpsStatusCategory output[], int max_size);

// Sender
bool Mnld2DebugInterface_mnldAckDebugReq(mtk_socket_fd* client_fd);

bool Mnld2DebugInterface_mnldUpdateReboot(mtk_socket_fd* client_fd);

bool Mnld2DebugInterface_mnldUpdateGpsStatus(mtk_socket_fd* client_fd, Mnld2DebugInterface_MnldGpsStatusCategory status);

bool Mnld2DebugInterface_mnldUpdateMessageInfo(mtk_socket_fd* client_fd, char* msg);

// Receiver
typedef struct {
    void (*Mnld2DebugInterface_mnldAckDebugReq_handler) ();
    void (*Mnld2DebugInterface_mnldUpdateReboot_handler) ();
    void (*Mnld2DebugInterface_mnldUpdateGpsStatus_handler) (Mnld2DebugInterface_MnldGpsStatusCategory status);
    void (*Mnld2DebugInterface_mnldUpdateMessageInfo_handler) (char* msg);
} Mnld2DebugInterface_callbacks;

bool Mnld2DebugInterface_receiver_decode(char* _buff, Mnld2DebugInterface_callbacks* callbacks);
bool Mnld2DebugInterface_receiver_read_and_decode(int server_fd, Mnld2DebugInterface_callbacks* callbacks);

#ifdef __cplusplus
}
#endif

#endif

