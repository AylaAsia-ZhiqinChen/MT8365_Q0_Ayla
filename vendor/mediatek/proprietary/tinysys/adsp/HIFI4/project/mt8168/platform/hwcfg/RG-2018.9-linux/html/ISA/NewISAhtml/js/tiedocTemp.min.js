function getDisplayName(e){var t="";return t="Opcode"==e?"Operation":"Proto"==e?"Intrinsic":"Ctype"==e?"Data Type":"Regfile"==e?"Register File":"Format"==e?"FLIX Format":e}function genFilter(e){var t="    <div class='dropdown tie-filter-button' id='dropdownMenuFilterDiv' ng-if=\"selectedCat=='"+e+'\'">        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenuFilter" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">            <span class=\'glyphicon glyphicon-filter\'></span>            <span class=\'caret\'></span>        </button>        <div class=\'dropdown-menu dropdown-menu-right tie-filter-dropdown-scrollable\' aria-labelledby=\'dropdownMenuFilter\'>            <form class=\'tie-filter-dropdown-form\'>                <div class=\'form-group\'>                    <label for="tieFilterName">Name</label>                    <input type="text" class="form-control" id="tieFilterName" placeholder="Search for '+getDisplayName(e).toLowerCase()+"...\">                </div>                <div class=\"form-group\">                	<div class='col-sm-10' id='tieFilterText'> with the following selected arguments: </div>                    <div class='col-sm-2'><button class=\"btn btn-default\" ng-click='filterSubmit($event)'>Submit</button></div>                </div>                <div class='form-group'>                    <label> Arguments </label> <a ng-click='filterArgClearAll($event)' ng-href='#'>clear all</a>                    <table class='tie-table-arguments' ng-bind-html='genFilterArgTable(selectedCat, getAllCatTagElemList()) | trusted'>                     </table>                </div>            </form>        </div>    </div>";return t}var table_temp=""+genFilter("Opcode")+genFilter("Proto")+'<div ng-bind-html="getTagDescription(selectedTag)|trusted"> </div><table class="table table-striped">    <thead>        <tr>            <th> {{getDisplayName(selectedCat)}} </th>            <th> Synopsis </th>        </tr>    </thead>    <tbody>        <tr ng-repeat="elem in getElemList()">            <td> <a href="#/{{selectedCat}}/{{elem}}"> {{elem}} </a></td>            <td ng-bind-html="getSynopsis(selectedCat, elem) | trusted"> </td>        </tr>    </tbody></table>',encoding_temp='<h4> Format encoding </h4><table class="tie-table-legend">    <tbody>        <tr>             <th><span class="glyphicon glyphicon-stop" ng-style="{\'color\': getColorByIndex(0)}"></span>format not used</th>            <th><span class="glyphicon glyphicon-stop" ng-style="{\'color\': getColorByIndex(1)}"></span>opcode</th>            <th ng-repeat="(operand, operandBits) in getOpcodeOperands(selectedElem)">                <span class="glyphicon glyphicon-stop" ng-style="{\'color\': getColorByIndex(getOpcodeOperandIndex(selectedElem, operand) + OPCODE_OPERAND_COLOR_SHIFT)}"></span>                {{ operand }}            </th>        <tr>    <tbody></table><table class="tie-table-encoding">    <thead>        <tr>            <th> <div ng-if=\'opcodeSlotListOrderedBySlotIndex\'> <a href=\'#\' ng-click=\'setOpcodeSlotListOrderedBySlotIndex($event, false)\'> Format </a> - Slot </div>            <div ng-if=\'!opcodeSlotListOrderedBySlotIndex\'> Format - <a href=\'#\' ng-click=\'setOpcodeSlotListOrderedBySlotIndex($event, true)\'> Slot </a> </div>            <th ng-repeat="i in _range(getOpcodeMaxFormatLength(selectedElem)) track by $index" ng-bind-html="genEncodingTableIndex(getOpcodeMaxFormatLength(selectedElem), $index) | trusted"></th>         </tr>    </thead>    <tbody ng-bind-html=\'genOpcodeFormatEncodingBody(selectedElem) | trusted\'>    </tbody></table><h4> Slot encoding </h4><table class="tie-table-legend">    <tbody>        <tr>             <th><span class="glyphicon glyphicon-stop" ng-style="{\'color\': getColorByIndex(0)}"></span>slot not used</th>            <th><span class="glyphicon glyphicon-stop" ng-style="{\'color\': getColorByIndex(1)}"></span>opcode</th>            <th ng-repeat="(operand, operandBits) in getOpcodeOperands(selectedElem)">                <span class="glyphicon glyphicon-stop" ng-style="{\'color\': getColorByIndex(getOpcodeOperandIndex(selectedElem, operand) + OPCODE_OPERAND_COLOR_SHIFT)}"></span>                {{ operand }}            </th>        <tr>    <tbody></table><table class="tie-table-encoding">    <thead>        <tr>            <th> Format - Slot </th>            <th ng-repeat="i in _range(getOpcodeMaxSlotLength(selectedElem)) track by $index" ng-bind-html="genEncodingTableIndex(getOpcodeMaxSlotLength(selectedElem), $index) | trusted"></th>         </tr>    </thead>    <tbody ng-bind-html=\'genOpcodeSlotEncodingBody(selectedElem) | trusted\'>     </tbody></table>',opcode_temp='    <h3> Assembly Syntax </h3> <pre ng-bind-html=\'getOpcodeAssemblySyntax(selectedElem) | trusted\'> </pre>     <div ng-if=\'opcodeHasCSyntax(selectedElem)\'>        <h3> C Syntax </h3> <pre ng-bind-html="getOpcodeCSyntax(selectedElem) | trusted"> </pre>    </div>    <h3>Implementation Pipeline</h3>    <table class="table table-stripped table-bordered tie-table-impl-pipe">        <thead>            <tr>                <th colspan="2"> In </th>                <th colspan="2"> Out </th>            </tr>        </thead>        <tbody>            <tr ng-repeat="i in _range(getMaxOpcodeScheduleCount(selectedElem)) track by $index">                <td> {{getOpcodeSchedule(selectedElem, false, $index)[0]}} </td>                <td> {{getOpcodeSchedule(selectedElem, false, $index)[1]}} </td>                <td> {{getOpcodeSchedule(selectedElem, true, $index)[0]}}</td>                <td> {{getOpcodeSchedule(selectedElem, true, $index)[1]}} </td>            </tr>        </tbody>    </table>    <div ng-bind-html=\'genOpcodeBypasses(selectedElem) | trusted\'> </div>    <h3> Encoding </h3>'+encoding_temp+'    <div ng-if="getOpcodeUseProtos(selectedElem).length">        <h3> Intrinsics using {{selectedElem}} </h3>        <table class="table table-striped">            <thead>                <tr>                    <th> Intrinsic </th>                    <th> Synopsis </th>                </tr>            </thead>            <tbody>                <tr ng-repeat="i in getOpcodeUseProtos(selectedElem) track by $index">                    <td> <a ng-if=\'protoHasDoc(i)\' href=\'#/Proto/{{i}}\'>{{ i }}</a> <div ng-if=\'!protoHasDoc(i)\'> {{ i }} </div></td>                    <td> {{ getSynopsis("Proto", i) }}</td>                </tr>            </tbody>        </table>    </div>',core_opcode_temp='    <h3> Assembly Syntax </h3> <pre ng-bind-html="getCoreOpcodeContent(selectedElem, \'Assembler Syntax\') | trusted"> </pre>     <div ng-if="getCoreOpcodeContent(selectedElem, \'Assembler Note\')" ng-bind-html="getCoreOpcodeContent(selectedElem, \'Assembler Note\') | trusted"></div>    <div ng-if=\'opcodeHasCSyntax(selectedElem)\'>        <h3> C Syntax </h3> <pre ng-bind-html="getOpcodeCSyntax(selectedElem) | trusted"> </pre>    </div>    <h3>Operation</h3> <div ng-bind-html="getCoreOpcodeContent(selectedElem, \'Operation\') | trusted"></div>    <div ng-if="getCoreOpcodeContent(selectedElem, \'Exceptions\')">        <h3>Exceptions</h3> <div ng-bind-html="getCoreOpcodeContent(selectedElem, \'Exceptions\') | trusted"> </div>    </div>    <div ng-if="getCoreOpcodeContent(selectedElem, \'Implementation Notes\')">        <h3>Implemetation Notes</h3> <div ng-bind-html="getCoreOpcodeContent(selectedElem, \'Implementation Notes\') | trusted"> </div>    </div>    <h3>Implementation Pipeline</h3>    <table class="table table-stripped table-bordered tie-table-impl-pipe">        <thead>            <tr>                <th colspan="2"> In </th>                <th colspan="2"> Out </th>            </tr>        </thead>        <tbody>            <tr ng-repeat="i in _range(getMaxOpcodeScheduleCount(selectedElem)) track by $index">                <td> {{getOpcodeSchedule(selectedElem, false, $index)[0]}} </td>                <td> {{getOpcodeSchedule(selectedElem, false, $index)[1]}} </td>                <td> {{getOpcodeSchedule(selectedElem, true, $index)[0]}}</td>                <td> {{getOpcodeSchedule(selectedElem, true, $index)[1]}} </td>            </tr>        </tbody>    </table>    <div ng-bind-html=\'genOpcodeBypasses(selectedElem) | trusted\'> </div>    <h3> Encoding </h3>'+encoding_temp+'    <div ng-if="getOpcodeUseProtos(selectedElem).length">        <h3> Protos using {{selectedElem}} </h3>        <table class="table table-striped">            <thead>                <tr>                    <th> Proto </th>                    <th> Synopsis </th>                </tr>            </thead>            <tbody>                <tr ng-repeat="i in getOpcodeUseProtos(selectedElem) track by $index">                    <td> <a ng-if=\'protoHasDoc(i)\' href=\'#/Proto/{{i}}\'>{{ i }}</a> <div ng-if=\'!protoHasDoc(i)\'> {{ i }} </div></td>                    <td> {{ getSynopsis("Proto", i) }}</td>                </tr>            </tbody>        </table>    </div>    <div ng-if="getCoreOpcodeContent(selectedElem, \'Required Configuration Option\')">        <h3>Required Configuration Option</h3> <div ng-bind-html="getCoreOpcodeContent(selectedElem, \'Required Configuration Option\') | trusted"> </div>    </div>',proto_temp="<div ng-bind-html='genProtoPage(selectedElem) | trusted'></div>",ctype_temp="<div ng-bind-html='genCtypePage() | trusted'></div>",format_temp="<div ng-bind-html='genFormatPage() | trusted'></div>",regfile_temp="<div ng-bind-html='genRegfilePage() | trusted'></div>",elem_temp='<div ng-if="!hasElement()">    <div ng-bind-html="genNotExist(selectedCat, selectedElem) | trusted"></div></div><div ng-if="hasElement()">     <h2>{{selectedElem}} <span ng-if="getSynopsis(selectedCat, selectedElem)"> - </span> <span ng-bind-html="getSynopsis(selectedCat, selectedElem)|trusted"></span> </h2>    <h3 ng-if="getDescription(selectedCat, selectedElem)">Description</h3>    <div ng-bind-html="getDescription(selectedCat, selectedElem) | trusted"></div>    <div ng-if="selectedCat==\'Opcode\'">        <div ng-if="!opcodeIsCore(selectedElem)">'+opcode_temp+'</div>        <div ng-if="opcodeIsCore(selectedElem)">'+core_opcode_temp+"</div>    </div>    <div ng-if=\"selectedCat=='Proto'\">"+proto_temp+"</div>    <div ng-if=\"selectedCat=='Ctype'\">"+ctype_temp+"</div>    <div ng-if=\"selectedCat=='Format'\">"+format_temp+"</div>    <div ng-if=\"selectedCat=='Regfile'\">"+regfile_temp+"</div></div>",siglist_temp="<h1> Signal List</h1><div ng-bind-html='genSignalListPage() | trusted'></div>",comp_matrix_temp="<h1>Opcode Compatibility Matrix</h1><div ng-bind-html='genCompMatrix() | trusted'></div>",home_temp="<h3> {{getCoreName()}} </h3><div ng-bind-html='genHomePage() | trusted'></div>";
