/*
 * Copyright (C) 2011 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef WRAPPED_AUDIO_H
#define WRAPPED_AUDIO_H

#if 0
#include <audio.h>
#else
/* Wrap Android system/media/audio/include/system/audio.h */

#include <stdbool.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif


typedef enum {
	AUDIO_SOURCE_DEFAULT = 0,
	AUDIO_SOURCE_MIC = 1,
	AUDIO_SOURCE_VOICE_UPLINK = 2,
	AUDIO_SOURCE_VOICE_DOWNLINK = 3,
	AUDIO_SOURCE_VOICE_CALL = 4,
	AUDIO_SOURCE_CAMCORDER = 5,
	AUDIO_SOURCE_VOICE_RECOGNITION = 6,
	AUDIO_SOURCE_VOICE_COMMUNICATION = 7,
	AUDIO_SOURCE_REMOTE_SUBMIX = 8,
	AUDIO_SOURCE_UNPROCESSED = 9,
	AUDIO_SOURCE_VOICE_UNLOCK = 80, // MTK_AUDIO
	AUDIO_SOURCE_CUSTOMIZATION1 = 81,    // MTK_AUDIO
	AUDIO_SOURCE_CUSTOMIZATION2 = 82,    // MTK_AUDIO
	AUDIO_SOURCE_CUSTOMIZATION3 = 83,    // MTK_AUDIO
	AUDIO_SOURCE_CNT = 84,  // MTK_AUDIO
	AUDIO_SOURCE_MAX = 83, // (CNT - 1)  // MTK_AUDIO
	AUDIO_SOURCE_FM_TUNER = 1998,
	AUDIO_SOURCE_HOTWORD = 1999,
}
audio_source_t;


typedef enum {
	AUDIO_FORMAT_INVALID = 4294967295u, // 0xFFFFFFFFUL
	AUDIO_FORMAT_DEFAULT = 0u, // 0
	AUDIO_FORMAT_PCM = 0u, // 0x00000000UL
	AUDIO_FORMAT_PCM_16_BIT = 1u, // (PCM | PCM_SUB_16_BIT)
	AUDIO_FORMAT_PCM_8_BIT = 2u, // (PCM | PCM_SUB_8_BIT)
	AUDIO_FORMAT_PCM_32_BIT = 3u, // (PCM | PCM_SUB_32_BIT)
	AUDIO_FORMAT_PCM_8_24_BIT = 4u, // (PCM | PCM_SUB_8_24_BIT)
	AUDIO_FORMAT_PCM_FLOAT = 5u, // (PCM | PCM_SUB_FLOAT)
	AUDIO_FORMAT_PCM_24_BIT_PACKED = 6u, // (PCM | PCM_SUB_24_BIT_PACKED)
} audio_format_t;


enum {
	AUDIO_CHANNEL_REPRESENTATION_POSITION = 0u, // 0
	AUDIO_CHANNEL_REPRESENTATION_INDEX = 2u, // 2
	AUDIO_CHANNEL_NONE = 0u, // 0x0
	AUDIO_CHANNEL_INVALID = 3221225472u, // 0xC0000000
	AUDIO_CHANNEL_OUT_FRONT_LEFT = 1u, // 0x1
	AUDIO_CHANNEL_OUT_FRONT_RIGHT = 2u, // 0x2
	AUDIO_CHANNEL_OUT_FRONT_CENTER = 4u, // 0x4
	AUDIO_CHANNEL_OUT_LOW_FREQUENCY = 8u, // 0x8
	AUDIO_CHANNEL_OUT_BACK_LEFT = 16u, // 0x10
	AUDIO_CHANNEL_OUT_BACK_RIGHT = 32u, // 0x20
	AUDIO_CHANNEL_OUT_FRONT_LEFT_OF_CENTER = 64u, // 0x40
	AUDIO_CHANNEL_OUT_FRONT_RIGHT_OF_CENTER = 128u, // 0x80
	AUDIO_CHANNEL_OUT_BACK_CENTER = 256u, // 0x100
	AUDIO_CHANNEL_OUT_SIDE_LEFT = 512u, // 0x200
	AUDIO_CHANNEL_OUT_SIDE_RIGHT = 1024u, // 0x400
	AUDIO_CHANNEL_OUT_TOP_CENTER = 2048u, // 0x800
	AUDIO_CHANNEL_OUT_TOP_FRONT_LEFT = 4096u, // 0x1000
	AUDIO_CHANNEL_OUT_TOP_FRONT_CENTER = 8192u, // 0x2000
	AUDIO_CHANNEL_OUT_TOP_FRONT_RIGHT = 16384u, // 0x4000
	AUDIO_CHANNEL_OUT_TOP_BACK_LEFT = 32768u, // 0x8000
	AUDIO_CHANNEL_OUT_TOP_BACK_CENTER = 65536u, // 0x10000
	AUDIO_CHANNEL_OUT_TOP_BACK_RIGHT = 131072u, // 0x20000
	AUDIO_CHANNEL_OUT_MONO = 1u, // OUT_FRONT_LEFT
	AUDIO_CHANNEL_OUT_STEREO = 3u, // (OUT_FRONT_LEFT | OUT_FRONT_RIGHT)
	AUDIO_CHANNEL_OUT_2POINT1 = 11u, // ((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_LOW_FREQUENCY)
	AUDIO_CHANNEL_OUT_QUAD = 51u, // (((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_BACK_LEFT) | OUT_BACK_RIGHT)
	AUDIO_CHANNEL_OUT_QUAD_BACK = 51u, // OUT_QUAD
	AUDIO_CHANNEL_OUT_QUAD_SIDE = 1539u, // (((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_SIDE_LEFT) | OUT_SIDE_RIGHT)
	AUDIO_CHANNEL_OUT_SURROUND = 263u, // (((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_FRONT_CENTER) | OUT_BACK_CENTER)
	AUDIO_CHANNEL_OUT_PENTA = 55u, // (OUT_QUAD | OUT_FRONT_CENTER)
	AUDIO_CHANNEL_OUT_5POINT1 = 63u, // (((((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_FRONT_CENTER) | OUT_LOW_FREQUENCY) | OUT_BACK_LEFT) | OUT_BACK_RIGHT)
	AUDIO_CHANNEL_OUT_5POINT1_BACK = 63u, // OUT_5POINT1
	AUDIO_CHANNEL_OUT_5POINT1_SIDE = 1551u, // (((((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_FRONT_CENTER) | OUT_LOW_FREQUENCY) | OUT_SIDE_LEFT) | OUT_SIDE_RIGHT)
	AUDIO_CHANNEL_OUT_6POINT1 = 319u, // ((((((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_FRONT_CENTER) | OUT_LOW_FREQUENCY) | OUT_BACK_LEFT) | OUT_BACK_RIGHT) | OUT_BACK_CENTER)
	AUDIO_CHANNEL_OUT_7POINT1 = 1599u, // (((((((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_FRONT_CENTER) | OUT_LOW_FREQUENCY) | OUT_BACK_LEFT) | OUT_BACK_RIGHT) | OUT_SIDE_LEFT) | OUT_SIDE_RIGHT)
	AUDIO_CHANNEL_OUT_ALL = 262143u, // (((((((((((((((((OUT_FRONT_LEFT | OUT_FRONT_RIGHT) | OUT_FRONT_CENTER) | OUT_LOW_FREQUENCY) | OUT_BACK_LEFT) | OUT_BACK_RIGHT) | OUT_FRONT_LEFT_OF_CENTER) | OUT_FRONT_RIGHT_OF_CENTER) | OUT_BACK_CENTER) | OUT_SIDE_LEFT) | OUT_SIDE_RIGHT) | OUT_TOP_CENTER) | OUT_TOP_FRONT_LEFT) | OUT_TOP_FRONT_CENTER) | OUT_TOP_FRONT_RIGHT) | OUT_TOP_BACK_LEFT) | OUT_TOP_BACK_CENTER) | OUT_TOP_BACK_RIGHT)
	AUDIO_CHANNEL_IN_LEFT = 4u, // 0x4
	AUDIO_CHANNEL_IN_RIGHT = 8u, // 0x8
	AUDIO_CHANNEL_IN_FRONT = 16u, // 0x10
	AUDIO_CHANNEL_IN_BACK = 32u, // 0x20
	AUDIO_CHANNEL_IN_LEFT_PROCESSED = 64u, // 0x40
	AUDIO_CHANNEL_IN_RIGHT_PROCESSED = 128u, // 0x80
	AUDIO_CHANNEL_IN_FRONT_PROCESSED = 256u, // 0x100
	AUDIO_CHANNEL_IN_BACK_PROCESSED = 512u, // 0x200
	AUDIO_CHANNEL_IN_PRESSURE = 1024u, // 0x400
	AUDIO_CHANNEL_IN_X_AXIS = 2048u, // 0x800
	AUDIO_CHANNEL_IN_Y_AXIS = 4096u, // 0x1000
	AUDIO_CHANNEL_IN_Z_AXIS = 8192u, // 0x2000
	AUDIO_CHANNEL_IN_VOICE_UPLINK = 16384u, // 0x4000
	AUDIO_CHANNEL_IN_VOICE_DNLINK = 32768u, // 0x8000
	AUDIO_CHANNEL_IN_MONO = 16u, // IN_FRONT
	AUDIO_CHANNEL_IN_STEREO = 12u, // (IN_LEFT | IN_RIGHT)
	AUDIO_CHANNEL_IN_FRONT_BACK = 48u, // (IN_FRONT | IN_BACK)
	AUDIO_CHANNEL_IN_6 = 252u, // (((((IN_LEFT | IN_RIGHT) | IN_FRONT) | IN_BACK) | IN_LEFT_PROCESSED) | IN_RIGHT_PROCESSED)
	AUDIO_CHANNEL_IN_VOICE_UPLINK_MONO = 16400u, // (IN_VOICE_UPLINK | IN_MONO)
	AUDIO_CHANNEL_IN_VOICE_DNLINK_MONO = 32784u, // (IN_VOICE_DNLINK | IN_MONO)
	AUDIO_CHANNEL_IN_VOICE_CALL_MONO = 49168u, // (IN_VOICE_UPLINK_MONO | IN_VOICE_DNLINK_MONO)
	AUDIO_CHANNEL_IN_ALL = 65532u, // (((((((((((((IN_LEFT | IN_RIGHT) | IN_FRONT) | IN_BACK) | IN_LEFT_PROCESSED) | IN_RIGHT_PROCESSED) | IN_FRONT_PROCESSED) | IN_BACK_PROCESSED) | IN_PRESSURE) | IN_X_AXIS) | IN_Y_AXIS) | IN_Z_AXIS) | IN_VOICE_UPLINK) | IN_VOICE_DNLINK)
	AUDIO_CHANNEL_COUNT_MAX = 30u, // 30
	AUDIO_CHANNEL_INDEX_HDR = 2147483648u, // (REPRESENTATION_INDEX << COUNT_MAX)
	AUDIO_CHANNEL_INDEX_MASK_1 = 2147483649u, // (INDEX_HDR | ((1 << 1) - 1))
	AUDIO_CHANNEL_INDEX_MASK_2 = 2147483651u, // (INDEX_HDR | ((1 << 2) - 1))
	AUDIO_CHANNEL_INDEX_MASK_3 = 2147483655u, // (INDEX_HDR | ((1 << 3) - 1))
	AUDIO_CHANNEL_INDEX_MASK_4 = 2147483663u, // (INDEX_HDR | ((1 << 4) - 1))
	AUDIO_CHANNEL_INDEX_MASK_5 = 2147483679u, // (INDEX_HDR | ((1 << 5) - 1))
	AUDIO_CHANNEL_INDEX_MASK_6 = 2147483711u, // (INDEX_HDR | ((1 << 6) - 1))
	AUDIO_CHANNEL_INDEX_MASK_7 = 2147483775u, // (INDEX_HDR | ((1 << 7) - 1))
	AUDIO_CHANNEL_INDEX_MASK_8 = 2147483903u, // (INDEX_HDR | ((1 << 8) - 1))
};

typedef uint32_t audio_channel_mask_t;


typedef enum {
	AUDIO_MODE_INVALID = -2, // (-2)
	AUDIO_MODE_CURRENT = -1, // (-1)
	AUDIO_MODE_NORMAL = 0,
	AUDIO_MODE_RINGTONE = 1,
	AUDIO_MODE_IN_CALL = 2,
	AUDIO_MODE_IN_COMMUNICATION = 3,
	AUDIO_MODE_CNT = 4,
	AUDIO_MODE_MAX = 3, // (CNT - 1)
} audio_mode_t;


enum {
	AUDIO_DEVICE_NONE = 0u, // 0x0
	AUDIO_DEVICE_BIT_IN = 2147483648u, // 0x80000000
	AUDIO_DEVICE_BIT_DEFAULT = 1073741824u, // 0x40000000
	AUDIO_DEVICE_OUT_EARPIECE = 1u, // 0x1
	AUDIO_DEVICE_OUT_SPEAKER = 2u, // 0x2
	AUDIO_DEVICE_OUT_WIRED_HEADSET = 4u, // 0x4
	AUDIO_DEVICE_OUT_WIRED_HEADPHONE = 8u, // 0x8
	AUDIO_DEVICE_OUT_BLUETOOTH_SCO = 16u, // 0x10
	AUDIO_DEVICE_OUT_BLUETOOTH_SCO_HEADSET = 32u, // 0x20
	AUDIO_DEVICE_OUT_BLUETOOTH_SCO_CARKIT = 64u, // 0x40
	AUDIO_DEVICE_OUT_BLUETOOTH_A2DP = 128u, // 0x80
	AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES = 256u, // 0x100
	AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER = 512u, // 0x200
	AUDIO_DEVICE_OUT_AUX_DIGITAL = 1024u, // 0x400
	AUDIO_DEVICE_OUT_HDMI = 1024u, // OUT_AUX_DIGITAL
	AUDIO_DEVICE_OUT_ANLG_DOCK_HEADSET = 2048u, // 0x800
	AUDIO_DEVICE_OUT_DGTL_DOCK_HEADSET = 4096u, // 0x1000
	AUDIO_DEVICE_OUT_USB_ACCESSORY = 8192u, // 0x2000
	AUDIO_DEVICE_OUT_USB_DEVICE = 16384u, // 0x4000
	AUDIO_DEVICE_OUT_REMOTE_SUBMIX = 32768u, // 0x8000
	AUDIO_DEVICE_OUT_TELEPHONY_TX = 65536u, // 0x10000
	AUDIO_DEVICE_OUT_LINE = 131072u, // 0x20000
	AUDIO_DEVICE_OUT_HDMI_ARC = 262144u, // 0x40000
	AUDIO_DEVICE_OUT_SPDIF = 524288u, // 0x80000
	AUDIO_DEVICE_OUT_FM = 1048576u, // 0x100000
	AUDIO_DEVICE_OUT_AUX_LINE = 2097152u, // 0x200000
	AUDIO_DEVICE_OUT_SPEAKER_SAFE = 4194304u, // 0x400000
	AUDIO_DEVICE_OUT_IP = 8388608u, // 0x800000
	AUDIO_DEVICE_OUT_BUS = 16777216u, // 0x1000000
	AUDIO_DEVICE_OUT_PROXY = 33554432u, // 0x2000000
	AUDIO_DEVICE_OUT_USB_HEADSET = 67108864u, // 0x4000000
	AUDIO_DEVICE_OUT_DEFAULT = 1073741824u, // BIT_DEFAULT
	AUDIO_DEVICE_OUT_ALL = 1207959551u, // (((((((((((((((((((((((((((OUT_EARPIECE | OUT_SPEAKER) | OUT_WIRED_HEADSET) | OUT_WIRED_HEADPHONE) | OUT_BLUETOOTH_SCO) | OUT_BLUETOOTH_SCO_HEADSET) | OUT_BLUETOOTH_SCO_CARKIT) | OUT_BLUETOOTH_A2DP) | OUT_BLUETOOTH_A2DP_HEADPHONES) | OUT_BLUETOOTH_A2DP_SPEAKER) | OUT_HDMI) | OUT_ANLG_DOCK_HEADSET) | OUT_DGTL_DOCK_HEADSET) | OUT_USB_ACCESSORY) | OUT_USB_DEVICE) | OUT_REMOTE_SUBMIX) | OUT_TELEPHONY_TX) | OUT_LINE) | OUT_HDMI_ARC) | OUT_SPDIF) | OUT_FM) | OUT_AUX_LINE) | OUT_SPEAKER_SAFE) | OUT_IP) | OUT_BUS) | OUT_PROXY) | OUT_USB_HEADSET) | OUT_DEFAULT)
	AUDIO_DEVICE_OUT_ALL_A2DP = 896u, // ((OUT_BLUETOOTH_A2DP | OUT_BLUETOOTH_A2DP_HEADPHONES) | OUT_BLUETOOTH_A2DP_SPEAKER)
	AUDIO_DEVICE_OUT_ALL_SCO = 112u, // ((OUT_BLUETOOTH_SCO | OUT_BLUETOOTH_SCO_HEADSET) | OUT_BLUETOOTH_SCO_CARKIT)
	AUDIO_DEVICE_OUT_ALL_USB = 67133440u, // ((OUT_USB_ACCESSORY | OUT_USB_DEVICE) | OUT_USB_HEADSET)
	AUDIO_DEVICE_IN_COMMUNICATION = 2147483649u, // (BIT_IN | 0x1)
	AUDIO_DEVICE_IN_AMBIENT = 2147483650u, // (BIT_IN | 0x2)
	AUDIO_DEVICE_IN_BUILTIN_MIC = 2147483652u, // (BIT_IN | 0x4)
	AUDIO_DEVICE_IN_BLUETOOTH_SCO_HEADSET = 2147483656u, // (BIT_IN | 0x8)
	AUDIO_DEVICE_IN_WIRED_HEADSET = 2147483664u, // (BIT_IN | 0x10)
	AUDIO_DEVICE_IN_AUX_DIGITAL = 2147483680u, // (BIT_IN | 0x20)
	AUDIO_DEVICE_IN_HDMI = 2147483680u, // IN_AUX_DIGITAL
	AUDIO_DEVICE_IN_VOICE_CALL = 2147483712u, // (BIT_IN | 0x40)
	AUDIO_DEVICE_IN_TELEPHONY_RX = 2147483712u, // IN_VOICE_CALL
	AUDIO_DEVICE_IN_BACK_MIC = 2147483776u, // (BIT_IN | 0x80)
	AUDIO_DEVICE_IN_REMOTE_SUBMIX = 2147483904u, // (BIT_IN | 0x100)
	AUDIO_DEVICE_IN_ANLG_DOCK_HEADSET = 2147484160u, // (BIT_IN | 0x200)
	AUDIO_DEVICE_IN_DGTL_DOCK_HEADSET = 2147484672u, // (BIT_IN | 0x400)
	AUDIO_DEVICE_IN_USB_ACCESSORY = 2147485696u, // (BIT_IN | 0x800)
	AUDIO_DEVICE_IN_USB_DEVICE = 2147487744u, // (BIT_IN | 0x1000)
	AUDIO_DEVICE_IN_FM_TUNER = 2147491840u, // (BIT_IN | 0x2000)
	AUDIO_DEVICE_IN_TV_TUNER = 2147500032u, // (BIT_IN | 0x4000)
	AUDIO_DEVICE_IN_LINE = 2147516416u, // (BIT_IN | 0x8000)
	AUDIO_DEVICE_IN_SPDIF = 2147549184u, // (BIT_IN | 0x10000)
	AUDIO_DEVICE_IN_BLUETOOTH_A2DP = 2147614720u, // (BIT_IN | 0x20000)
	AUDIO_DEVICE_IN_LOOPBACK = 2147745792u, // (BIT_IN | 0x40000)
	AUDIO_DEVICE_IN_IP = 2148007936u, // (BIT_IN | 0x80000)
	AUDIO_DEVICE_IN_BUS = 2148532224u, // (BIT_IN | 0x100000)
	AUDIO_DEVICE_IN_PROXY = 2164260864u, // (BIT_IN | 0x1000000)
	AUDIO_DEVICE_IN_USB_HEADSET = 2181038080u, // (BIT_IN | 0x2000000)
	AUDIO_DEVICE_IN_DEFAULT = 3221225472u, // (BIT_IN | BIT_DEFAULT)
	AUDIO_DEVICE_IN_ALL = 3273654271u, // (((((((((((((((((((((((IN_COMMUNICATION | IN_AMBIENT) | IN_BUILTIN_MIC) | IN_BLUETOOTH_SCO_HEADSET) | IN_WIRED_HEADSET) | IN_HDMI) | IN_TELEPHONY_RX) | IN_BACK_MIC) | IN_REMOTE_SUBMIX) | IN_ANLG_DOCK_HEADSET) | IN_DGTL_DOCK_HEADSET) | IN_USB_ACCESSORY) | IN_USB_DEVICE) | IN_FM_TUNER) | IN_TV_TUNER) | IN_LINE) | IN_SPDIF) | IN_BLUETOOTH_A2DP) | IN_LOOPBACK) | IN_IP) | IN_BUS) | IN_PROXY) | IN_USB_HEADSET) | IN_DEFAULT)
	AUDIO_DEVICE_IN_ALL_SCO = 2147483656u, // IN_BLUETOOTH_SCO_HEADSET
	AUDIO_DEVICE_IN_ALL_USB = 2181044224u, // ((IN_USB_ACCESSORY | IN_USB_DEVICE) | IN_USB_HEADSET)
};

typedef uint32_t audio_devices_t;



typedef uint16_t audio_output_flags_t;

enum { /* audio_output_flags_t */
	AUDIO_OUTPUT_FLAG_NONE = 0, // 0x0
	AUDIO_OUTPUT_FLAG_DIRECT = 1, // 0x1
	AUDIO_OUTPUT_FLAG_PRIMARY = 2, // 0x2
	AUDIO_OUTPUT_FLAG_FAST = 4, // 0x4
	AUDIO_OUTPUT_FLAG_DEEP_BUFFER = 8, // 0x8
	AUDIO_OUTPUT_FLAG_COMPRESS_OFFLOAD = 16, // 0x10
	AUDIO_OUTPUT_FLAG_NON_BLOCKING = 32, // 0x20
	AUDIO_OUTPUT_FLAG_HW_AV_SYNC = 64, // 0x40
	AUDIO_OUTPUT_FLAG_TTS = 128, // 0x80
	AUDIO_OUTPUT_FLAG_RAW = 256, // 0x100
	AUDIO_OUTPUT_FLAG_SYNC = 512, // 0x200
	AUDIO_OUTPUT_FLAG_IEC958_NONAUDIO = 1024, // 0x400
	AUDIO_OUTPUT_FLAG_DIRECT_PCM = 8192, // 0x2000
	AUDIO_OUTPUT_FLAG_MMAP_NOIRQ = 16384, // 0x4000
	AUDIO_OUTPUT_FLAG_VOIP_RX = 32768, // 0x8000
};


typedef uint16_t audio_input_flags_t;

enum { /* audio_input_flags_t */
	AUDIO_INPUT_FLAG_NONE = 0, // 0x0
	AUDIO_INPUT_FLAG_FAST = 1, // 0x1
	AUDIO_INPUT_FLAG_HW_HOTWORD = 2, // 0x2
	AUDIO_INPUT_FLAG_RAW = 4, // 0x4
	AUDIO_INPUT_FLAG_SYNC = 8, // 0x8
	AUDIO_INPUT_FLAG_MMAP_NOIRQ = 16, // 0x10
	AUDIO_INPUT_FLAG_VOIP_TX = 32, // 0x20
};


#define AUDIO_BYTES_PER_SAMPLE(format) \
	({ \
	uint32_t __ret_size = 0; \
	switch (format) { \
	case AUDIO_FORMAT_PCM_32_BIT: \
	case AUDIO_FORMAT_PCM_8_24_BIT: \
		__ret_size = sizeof(int32_t); \
		break; \
	case AUDIO_FORMAT_PCM_24_BIT_PACKED: \
		__ret_size = sizeof(uint8_t) * 3; \
		break; \
	case AUDIO_FORMAT_PCM_16_BIT: \
		__ret_size = sizeof(int16_t); \
		break; \
	case AUDIO_FORMAT_PCM_8_BIT: \
		__ret_size = sizeof(uint8_t); \
		break; \
	case AUDIO_FORMAT_PCM_FLOAT: \
		__ret_size = sizeof(float); \
		break; \
	default: \
		break; \
	} \
	__ret_size; \
	})




#ifdef __cplusplus
}  /* extern "C" */
#endif

#endif  /* <audio.h> */
#endif  /* WRAPPED_AUDIO_H */

