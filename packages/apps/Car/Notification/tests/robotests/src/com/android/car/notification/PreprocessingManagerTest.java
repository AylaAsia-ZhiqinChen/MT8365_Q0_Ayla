/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.car.notification;

import static com.google.common.truth.Truth.assertThat;

import android.app.Notification;
import android.content.Context;
import android.os.UserHandle;
import android.service.notification.StatusBarNotification;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.MockitoAnnotations;
import org.robolectric.RobolectricTestRunner;
import org.robolectric.RuntimeEnvironment;

import java.util.ArrayList;
import java.util.List;

@RunWith(RobolectricTestRunner.class)
public class PreprocessingManagerTest {

    private Context mContext;

    private static final String PKG = "com.package.blah";
    private static final String OP_PKG = "OpPackage";
    private static final int ID = 1;
    private static final String TAG = "Tag";
    private static final int UID = 2;
    private static final int INITIAL_PID = 3;
    private static final String CHANNEL_ID = "CHANNEL_ID";
    private static final String CONTENT_TITLE = "CONTENT_TITLE";
    private static final String OVERRIDE_GROUP_KEY = "OVERRIDE_GROUP_KEY";
    private static final long POST_TIME = 12345l;
    private static final UserHandle USER_HANDLE = new UserHandle(12);

    private PreprocessingManager mPreprocessingManager;

    @Before
    public void setupBaseActivityAndLayout() {
        MockitoAnnotations.initMocks(this);
        mContext = RuntimeEnvironment.application;
        mPreprocessingManager = PreprocessingManager.getInstance(mContext);
    }

    @Test
    public void group_autoGeneratedGroupWithNoGroupChildren_groupSummaryShouldNotShow() {
        List<StatusBarNotification> list = new ArrayList<>();
        list.add(getEmptyAutoGeneratedGroupSummary());
        List<NotificationGroup> groupResult = mPreprocessingManager.group(list);
        assertThat(groupResult.size() == 0).isTrue();
    }

    private StatusBarNotification getEmptyAutoGeneratedGroupSummary() {
        Notification notification = new Notification.Builder(mContext, CHANNEL_ID)
                .setContentTitle(CONTENT_TITLE)
                .setSmallIcon(android.R.drawable.sym_def_app_icon)
                .setGroup(OVERRIDE_GROUP_KEY)
                .setGroupSummary(true)
                .build();
        StatusBarNotification statusBarNotification = new StatusBarNotification(
                PKG, OP_PKG, ID, TAG, UID, INITIAL_PID, notification, USER_HANDLE,
                OVERRIDE_GROUP_KEY, POST_TIME);
        statusBarNotification.setOverrideGroupKey(OVERRIDE_GROUP_KEY);

        return statusBarNotification;
    }
}
