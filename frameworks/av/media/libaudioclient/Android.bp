cc_library_headers {
    name: "libaudioclient_headers",
    vendor_available: true,
    export_include_dirs: ["include"],
}

cc_library_shared {
    name: "libaudiopolicy",
    srcs: [
        "AudioAttributes.cpp",
        "AudioPolicy.cpp",
        "AudioProductStrategy.cpp",
        "AudioVolumeGroup.cpp",
    ],
    shared_libs: [
        "libaudioutils",
        "libbinder",
        "libcutils",
        "liblog",
        "libutils",
    ],
    cflags: [
        "-Werror",
        "-Wall",
    ],
    include_dirs: ["system/media/audio_utils/include"],
    export_include_dirs: ["include"],
}

cc_library_shared {
    name: "libaudioclient",

    aidl: {
        export_aidl_headers: true,
        local_include_dirs: ["aidl"],
        include_dirs: [
            "frameworks/av/media/libaudioclient/aidl",
        ],
    },

    srcs: [
        // AIDL files for audioclient interfaces
        // The headers for these interfaces will be available to any modules that
        // include libaudioclient, at the path "aidl/package/path/BnFoo.h"
        "aidl/android/media/IAudioRecord.aidl",
        ":libaudioclient_aidl",

        "AudioEffect.cpp",
        "AudioRecord.cpp",
        "AudioSystem.cpp",
        "AudioTrack.cpp",
        "AudioTrackShared.cpp",
        "IAudioFlinger.cpp",
        "IAudioFlingerClient.cpp",
        "IAudioPolicyService.cpp",
        "IAudioPolicyServiceClient.cpp",
        "IAudioTrack.cpp",
        "IEffect.cpp",
        "IEffectClient.cpp",
        "ToneGenerator.cpp",
        "PlayerBase.cpp",
        "RecordingActivityTracker.cpp",
        "TrackPlayerBase.cpp",
    ],
    shared_libs: [
        "libaudioutils",
        "libaudiopolicy",
        "libaudiomanager",
        "libbinder",
        "libcutils",
        "libdl",
        "liblog",
        "libmedia_helper",
        "libmediametrics",
        "libmediautils",
        "libnblog",
        "libprocessgroup",
        "libutils",
        "libmtkaudio_utils",
        "libvibrator",
    ],
    export_shared_lib_headers: ["libbinder"],

    local_include_dirs: ["include/media", "aidl"],
    header_libs: [
        "libaudioclient_headers",
        "libbase_headers",
    ],
    export_header_lib_headers: ["libaudioclient_headers"],

    // for memory heap analysis
    static_libs: [
        "libc_malloc_debug_backtrace",
    ],
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-error=deprecated-declarations",
    ],
    sanitize: {
        misc_undefined : [
            "unsigned-integer-overflow",
            "signed-integer-overflow",
        ],
    },
    defaults: [
        "mtk_libaudioclient_defaults",
    ],
}

// AIDL interface between libaudioclient and framework.jar
filegroup {
    name: "libaudioclient_aidl",
    srcs: [
        "aidl/android/media/IPlayer.aidl",
    ],
}

bootstrap_go_package {
    name:"soong-libaudioclient-mediatek",
    pkgPath:"android/soong/libaudioclient/mediatek",
    deps:[
        "soong-android",
        "soong-cc",
    ],
    srcs:[
        "libaudioclient.go",
    ],
    pluginFor:["soong_build"],
}

// <MTK_AUDIO
mtk_libaudioclient_defaults {
    name: "mtk_libaudioclient_defaults",
    shared_libs: [
        "libmedia_helper",
    ],
    product_variables: {
        debuggable: {
            cflags: [
                "-DCONFIG_MT_USERDEBUG_BUILD",
                "-DMTK_LATENCY_DETECT_PULSE",
            ],
        },
        eng: {
            cflags: [
                "-UCONFIG_MT_USERDEBUG_BUILD",
                "-DCONFIG_MT_ENG_BUILD",
                "-DMTK_LATENCY_DETECT_PULSE",
            ],
        },
    },
    cflags: [
        "-DSYS_IMPL",
    ],
    include_dirs: [
        "vendor/mediatek/proprietary/external/audio_utils/common_headers/audiopolicy_parameters",
        "vendor/mediatek/proprietary/external/audio_utils/common_utils/AudioDetectPulse/",
        "external/libxml2/include",
        "external/icu/libandroidicu/include",
        "vendor/mediatek/proprietary/external/AudioParamParser",
        "vendor/mediatek/proprietary/external/AudioParamParser/include",
    ],
}
// MTK_AUDIO>
